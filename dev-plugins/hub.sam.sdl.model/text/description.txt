Model Sdl

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package sdl <http://www.hub.sam.generated.de/SDL>

  Class CommunicationCommunicator -> CoreAbstractionsElementsElement
    Reference medium : CommunicationMedium<<0..*>>

  Class CommunicationContext -> CoreAbstractionsElementsElement
    Reference Context_process : CommunicationProcess<<0..*>>
    Reference pendingEvents : CommunicationEvent<<0..*>>
    Operation update() : void<<1..1>>

  Class CommunicationEvent -> CoreAbstractionsElementsElement, InstanciationValue

  Class CommunicationEventType -> CoreAbstractionsElementsElement, CoreAbstractionsTypedElementsType

  Class CommunicationInput -> CoreAbstractionsClassifiersFeature, CoreAbstractionsTypedElementsTypedElement
    Reference type : CommunicationEventType<<1..1>>

  Class CommunicationListener -> CoreAbstractionsElementsElement
    Operation listensTo(CommunicationEvent<<1..1>>) : EBoolean<<1..1>>

  Class CommunicationMedium -> CoreAbstractionsElementsElement
    Reference associatedClassifier : CommunicationCommunicator<<1..*>>

  Class CommunicationProcess -> CoreAbstractionsElementsElement
    Reference /Process_input : CommunicationListener<<0..*>>
    Operation consume(CommunicationListener<<1..1>>, CommunicationEvent<<1..1>>) : EBoolean<<1..1>>
    Operation run() : void<<1..1>>
    Operation start() : void<<1..1>>

  Class ConcreteSyntaxSdlIdentifier -> CoreAbstractionsElementsElement
    Attribute name : EString<<1..1>>
    Reference qualifier : ConcreteSyntaxSdlQualifier

  Class ConcreteSyntaxSdlPathItem -> CoreAbstractionsElementsElement
    Attribute kind : ConcreteSyntaxSdlScopeUnitKind<<1..1>>
    Attribute name : EString<<1..1>>

  Class ConcreteSyntaxSdlQualifier -> CoreAbstractionsElementsElement
    Reference pathItem : ConcreteSyntaxSdlPathItem<<0..*>>

  Class ConcreteSyntaxSdlStateList -> SdlState
    Attribute names : EString<<1..*>>

  Class Connector -> SdlPseudoState, SdlNamedState

  Class CoreAbstractionsBehavioralFeaturesBehavioralFeature -> CoreAbstractionsNamespacesNamespace, CoreAbstractionsClassifiersFeature
    Reference /BehavioralFeature_parameter : CoreAbstractionsBehavioralFeaturesParameter<<0..*>>
    Operation isDistinguishableFrom(CoreAbstractionsNamespacesNamedElement<<1..1>>, CoreAbstractionsNamespacesNamespace<<1..1>>) : EBoolean<<1..1>>

  Class CoreAbstractionsBehavioralFeaturesParameter -> CoreAbstractionsNamespacesNamedElement, CoreAbstractionsTypedElementsTypedElement

  Class CoreAbstractionsChangeabilitiesStructuralFeature
    Attribute isReadOnly : EBoolean<<1..1>>

  Class CoreAbstractionsClassifiersClassifier -> CoreAbstractionsNamespacesNamespace
    Reference /feature : CoreAbstractionsClassifiersFeature<<0..*>>
    Operation allFeatures() : CoreAbstractionsClassifiersFeature<<0..*>>
    Operation instanciate() : InstanciationInstance<<1..1>>

  Class CoreAbstractionsClassifiersFeature -> CoreAbstractionsNamespacesNamedElement
    Reference /featuringClassifier : CoreAbstractionsClassifiersClassifier<<0..*>>

  Class CoreAbstractionsCommentsComment -> CoreAbstractionsOwnershipsElement
    Attribute body : EString
    Reference annotatedElement : CoreAbstractionsOwnershipsElement<<0..*>>

  Class CoreAbstractionsConstraintsConstraint -> CoreAbstractionsConstraintsNamedElement
    Reference context : CoreAbstractionsConstraintsNamespace
    Reference specification : CoreAbstractionsExpressionsValueSpecification<<1..1>>
    Reference constrainedElement : CoreAbstractionsOwnershipsElement<<0..*>>

  Class CoreAbstractionsConstraintsNamedElement -> CoreAbstractionsOwnershipsElement
    Reference /namespace : CoreAbstractionsConstraintsNamespace

  Class CoreAbstractionsConstraintsNamespace -> CoreAbstractionsConstraintsNamedElement
    Reference ownedRule : CoreAbstractionsConstraintsConstraint<<0..*>>
    Reference /ownedMember : CoreAbstractionsConstraintsNamedElement<<0..*>>
    Reference /member : CoreAbstractionsConstraintsNamedElement<<0..*>>

  Class CoreAbstractionsElementsElement
    Attribute line : EInt<<1..1>>
    Attribute column : EInt<<1..1>>

  Class CoreAbstractionsExpressionsExpression -> CoreAbstractionsExpressionsValueSpecification
    Attribute symbol : EString
    Reference operand : CoreAbstractionsExpressionsValueSpecification<<0..*>>

  Class CoreAbstractionsExpressionsOpaqueExpression -> CoreAbstractionsExpressionsValueSpecification
    Attribute body : EString<<0..*>>
    Attribute language : EString<<0..*>>

  Class CoreAbstractionsExpressionsValueSpecification -> CoreAbstractionsOwnershipsElement
    Operation isComputable() : EBoolean<<1..1>>
    Operation integerValue() : EInt<<1..1>>
    Operation booleanValue() : EBoolean<<1..1>>
    Operation stringValue() : EString<<1..1>>
    Operation unlimitedValue() : EInt<<1..1>>
    Operation isNull() : EBoolean<<1..1>>

  Class CoreAbstractionsGeneralizationsClassifier -> CoreAbstractionsTypedElementsType, CoreAbstractionsClassifiersClassifier
    Reference generalization : CoreAbstractionsGeneralizationsGeneralization<<0..*>>
    Reference /general : CoreAbstractionsGeneralizationsClassifier<<0..*>>
    Operation general() : CoreAbstractionsGeneralizationsClassifier<<0..*>>
    Operation parents() : CoreAbstractionsGeneralizationsClassifier<<0..*>>
    Operation conformsTo(CoreAbstractionsGeneralizationsClassifier<<1..1>>) : EBoolean<<1..1>>

  Class CoreAbstractionsGeneralizationsGeneralization -> CoreAbstractionsRelationshipsDirectedRelationship
    Reference specific : CoreAbstractionsGeneralizationsClassifier<<1..1>>
    Reference general : CoreAbstractionsGeneralizationsClassifier<<1..1>>

  Class CoreAbstractionsInstancesInstanceSpecification -> CoreAbstractionsNamespacesNamedElement
    Reference slot : CoreAbstractionsInstancesSlot<<0..*>>
    Reference classifier : CoreAbstractionsClassifiersClassifier<<0..*>>
    Reference specification : CoreAbstractionsExpressionsValueSpecification

  Class CoreAbstractionsInstancesInstanceValue -> CoreAbstractionsExpressionsValueSpecification
    Reference instance : CoreAbstractionsInstancesInstanceSpecification<<1..1>>

  Class CoreAbstractionsInstancesSlot -> CoreAbstractionsOwnershipsElement
    Reference owningInstance : CoreAbstractionsInstancesInstanceSpecification<<1..1>>
    Reference value : CoreAbstractionsExpressionsValueSpecification<<0..*>>
    Reference definingFeature : CoreAbstractionsStructuralFeaturesStructuralFeature<<1..1>>

  Class CoreAbstractionsLiteralsLiteralBoolean -> CoreAbstractionsLiteralsLiteralSpecification
    Attribute value : EBoolean<<1..1>>
    Operation isComputable() : EBoolean<<1..1>>
    Operation booleanValue() : EBoolean<<1..1>>

  Class CoreAbstractionsLiteralsLiteralInteger -> CoreAbstractionsLiteralsLiteralSpecification
    Attribute value : EInt<<1..1>>
    Operation isComputable() : EBoolean<<1..1>>
    Operation integerValue() : EInt<<1..1>>

  Class CoreAbstractionsLiteralsLiteralNull -> CoreAbstractionsLiteralsLiteralSpecification
    Operation isComputable() : EBoolean<<1..1>>
    Operation isNull() : EBoolean<<1..1>>

  Class CoreAbstractionsLiteralsLiteralSpecification -> CoreAbstractionsExpressionsValueSpecification

  Class CoreAbstractionsLiteralsLiteralString -> CoreAbstractionsLiteralsLiteralSpecification
    Attribute value : EString
    Operation isComputable() : EBoolean<<1..1>>
    Operation stringValue() : EString<<1..1>>

  Class CoreAbstractionsLiteralsLiteralUnlimitedNatural -> CoreAbstractionsLiteralsLiteralSpecification
    Attribute value : EInt<<1..1>>
    Operation isComputable() : EBoolean<<1..1>>
    Operation unlimitedValue() : EInt<<1..1>>

  Class CoreAbstractionsMultiplicitiesMultiplicityElement -> CoreAbstractionsElementsElement
    Attribute isOrdered : EBoolean<<1..1>>
    Attribute isUnique : EBoolean<<1..1>>
    Attribute lower : EInt
    Attribute upper : EInt
    Operation lowerBound() : EInt<<1..1>>
    Operation upperBound() : EInt<<1..1>>
    Operation isMultivalued() : EBoolean<<1..1>>
    Operation includesCardinality(EInt<<1..1>>) : EBoolean<<1..1>>
    Operation includesMultiplicity(CoreAbstractionsMultiplicitiesMultiplicityElement<<1..1>>) : EBoolean<<1..1>>

  Class CoreAbstractionsMultiplicityExpressionsMultiplicityElement -> CoreAbstractionsOwnershipsElement
    Attribute /lower : EInt
    Attribute /upper : EInt
    Reference upperValue : CoreAbstractionsExpressionsValueSpecification
    Reference lowerValue : CoreAbstractionsExpressionsValueSpecification
    Operation lower() : EInt<<1..1>>
    Operation upper() : EInt<<1..1>>
    Operation lowerBound() : EInt<<1..1>>
    Operation upperBound() : EInt<<1..1>>

  Class CoreAbstractionsNamespacesNamedElement -> CoreAbstractionsOwnershipsElement
    Attribute name : EString
    Attribute /qualifiedName : EString
    Reference /namespace : CoreAbstractionsNamespacesNamespace
    Reference identifier : ConcreteSyntaxSdlIdentifier
    Operation allNamespaces() : CoreAbstractionsNamespacesNamespace<<0..*>>
    Operation isDistinguishableFrom(CoreAbstractionsNamespacesNamedElement<<1..1>>, CoreAbstractionsNamespacesNamespace<<1..1>>) : EBoolean<<1..1>>
    Operation separator() : EString<<1..1>>
    Operation qualifiedName() : EString<<1..1>>

  Class CoreAbstractionsNamespacesNamespace -> CoreAbstractionsNamespacesNamedElement
    Reference /ownedMember : CoreAbstractionsNamespacesNamedElement<<0..*>>
    Reference /member : CoreAbstractionsNamespacesNamedElement<<0..*>>
    Operation getNamesOfMember(CoreAbstractionsNamespacesNamedElement<<1..1>>) : EString<<0..*>>
    Operation membersAreDistinguishable() : EBoolean<<1..1>>

  Class CoreAbstractionsOwnershipsElement -> CoreAbstractionsElementsElement
    Reference /ownedElement : CoreAbstractionsOwnershipsElement<<0..*>>
    Reference /owner : CoreAbstractionsOwnershipsElement
    Reference ownedComment : CoreAbstractionsCommentsComment<<0..*>>
    Operation allOwnedElements() : CoreAbstractionsOwnershipsElement<<0..*>>
    Operation mustBeOwned() : EBoolean<<1..1>>

  Class CoreAbstractionsRedefinitionsRedefinableElement -> CoreAbstractionsNamespacesNamedElement
    Reference /redefinedElement : CoreAbstractionsRedefinitionsRedefinableElement<<0..*>>
    Reference /redefinitionContext : CoreAbstractionsSuperClassifier<<0..*>>
    Operation isConsistentWith(CoreAbstractionsRedefinitionsRedefinableElement<<1..1>>) : EBoolean<<1..1>>
    Operation isRedefinitionContextValid(CoreAbstractionsRedefinitionsRedefinableElement<<1..1>>) : EBoolean<<1..1>>

  Class CoreAbstractionsRelationshipsDirectedRelationship -> CoreAbstractionsRelationshipsRelationship
    Reference /DirectedRelationship_source : CoreAbstractionsOwnershipsElement<<1..*>>
    Reference /DirectedRelationship_target : CoreAbstractionsOwnershipsElement<<1..*>>

  Class CoreAbstractionsRelationshipsRelationship -> CoreAbstractionsOwnershipsElement
    Reference /Relationship_relatedElement : CoreAbstractionsOwnershipsElement<<1..*>>

  Class CoreAbstractionsStructuralFeaturesStructuralFeature -> CoreAbstractionsClassifiersFeature, CoreAbstractionsTypedElementsTypedElement

  Class CoreAbstractionsSuperClassifier -> CoreAbstractionsNamespacesNamespace
    Attribute isAbstract : EBoolean<<1..1>>
    Reference /inheritedMember : CoreAbstractionsNamespacesNamedElement<<0..*>>
    Reference general : CoreAbstractionsSuperClassifier<<0..*>>
    Operation inheritedMember() : CoreAbstractionsNamespacesNamedElement<<0..*>>
    Operation parents() : CoreAbstractionsSuperClassifier<<0..*>>
    Operation allParents() : CoreAbstractionsSuperClassifier<<0..*>>
    Operation inheritableMembers(CoreAbstractionsSuperClassifier<<1..1>>) : CoreAbstractionsNamespacesNamedElement<<0..*>>
    Operation hasVisibilityOf(CoreAbstractionsNamespacesNamedElement<<1..1>>) : EBoolean<<1..1>>
    Operation inherit(CoreAbstractionsNamespacesNamedElement<<0..*>>) : CoreAbstractionsNamespacesNamedElement<<0..*>>
    Operation maySpecializeType(CoreAbstractionsSuperClassifier<<1..1>>) : EBoolean<<1..1>>

  Class CoreAbstractionsTypedElementsType -> CoreAbstractionsNamespacesNamedElement
    Operation conformsTo(CoreAbstractionsTypedElementsType<<1..1>>) : EBoolean<<1..1>>

  Class CoreAbstractionsTypedElementsTypedElement -> CoreAbstractionsNamespacesNamedElement
    Reference TypedElement_type : CoreAbstractionsTypedElementsType

  Class CoreAbstractionsVisibilitiesNamedElement
    Attribute visibility : CoreAbstractionsVisibilitiesVisibilityKind

  Class EvaluationBehavioralFeatureAccess
    Reference BehavioralFeatureAccess_argument : EvaluationExpression<<0..*>>
    Reference behavioralFeature : CoreAbstractionsBehavioralFeaturesBehavioralFeature<<1..1>>

  Class EvaluationBehavioralFeatureAccessExpression -> EvaluationBehavioralFeatureAccess, EvaluationFeatureAccessExpression
    Reference argument : EvaluationExpression<<0..*>>
    Reference BehavioralFeatureAccessExpression_feature : CoreAbstractionsBehavioralFeaturesBehavioralFeature<<1..1>>

  Class EvaluationDataType -> CoreAbstractionsTypedElementsType
    Reference DataType_literal : EvaluationLiteral<<0..*>>

  Class EvaluationEvaluation -> CoreAbstractionsElementsElement
    Reference subEvaluation : EvaluationEvaluation<<0..*>>
    Reference /Evaluation_value : InstanciationValue<<1..1>>
    Operation initializeSubEvaluations() : void<<1..1>>
    Operation updateContext(InstanciationInstance<<1..1>>) : void<<1..1>>

  Class EvaluationExpression -> CoreAbstractionsElementsElement, CoreAbstractionsTypedElementsTypedElement
    Reference subExpression : EvaluationExpression<<0..*>>
    Reference /type : CoreAbstractionsTypedElementsType<<1..1>>
    Operation instantiate() : EvaluationEvaluation<<1..1>>

  Class EvaluationFeatureAccessExpression -> EvaluationExpression
    Reference FeatureAccessExpression_feature : CoreAbstractionsClassifiersFeature<<1..1>>

  Class EvaluationLiteral -> CoreAbstractionsOwnershipsElement

  Class EvaluationLiteralExpression -> EvaluationExpression
    Reference literal : EvaluationLiteral<<1..1>>

  Class Fork -> SdlPseudoState

  Class History -> Start

  Class InstanciationCreate -> CoreAbstractionsElementsElement, EvaluationBehavioralFeatureAccess
    Reference Create_classifier : CoreAbstractionsClassifiersClassifier<<1..1>>
    Operation create(InstanciationInstance<<1..1>>) : InstanciationInstance<<1..1>>

  Class InstanciationInstance -> CoreAbstractionsElementsElement
    Reference slot : InstanciationSlot
    Operation createSlots() : void<<1..1>>
    Operation initialize() : void<<1..1>>

  Class InstanciationMultiplicityFeature -> CoreAbstractionsStructuralFeaturesStructuralFeature, CoreAbstractionsMultiplicitiesMultiplicityElement
    Operation instanciate() : InstanciationSlot<<1..1>>

  Class InstanciationSlot
    Reference Slot_value : InstanciationValue<<0..*>>
    Operation createInitialValues() : void<<1..1>>
    Operation initialize() : void<<1..1>>
    Operation updateValue(InstanciationValue<<1..1>>) : void<<1..1>>

  Class InstanciationValue -> CoreAbstractionsElementsElement

  Class Join -> SdlPseudoState

  Class PidValue -> SdlPrimitiveValue
    Reference value : SdlAgentInstance<<1..1>>

  Class Return -> Stop
    Reference expression : EvaluationExpression

  Class SdlAbstractState -> CoreAbstractionsElementsElement
    Reference trigger : SdlTrigger<<0..*>>

  Class SdlAction -> CoreAbstractionsElementsElement

  Class SdlAgent -> CoreAbstractionsTypedElementsTypedElement, InstanciationMultiplicityFeature, CommunicationMedium
    Reference type : SdlAgentType<<1..1>>

  Class SdlAgentInstance -> SdlInstance
    Reference agentInstanceSet : SdlAgentInstanceSet
    Reference behavior : SdlCompositeStateInstance
    Reference owningInstanceSet : SdlAgentInstanceSet
    Reference parent : SdlAgentInstance
    Reference offspring : SdlAgentInstance
    Operation initializeBehavior() : void<<1..1>>
    Operation leadsTo(SdlChannelPath<<1..1>>) : SdlAgentInstanceSet<<1..1>>
    Operation continuesWith(SdlChannelPath<<1..1>>) : SdlChannelPath<<0..*>>
    Operation dispatchSignal(SdlSignalInstance<<1..1>>, SdlGate<<1..1>>) : void<<1..1>>
    Operation run() : void<<1..1>>

  Class SdlAgentInstanceSet -> InstanciationSlot, CommunicationContext
    Reference value : SdlAgentInstance<<0..*>>
    Reference /process : SdlCompositeStateInstance<<0..*>>
    Reference inputQueue : SdlSignalInstance<<0..*>>
    Reference agentInstance : SdlAgentInstance
    Operation terminate(SdlAgentInstance<<1..1>>) : void<<1..1>>

  Class SdlAgentType -> SdlBehaviorElement, SdlClassifier, CoreAbstractionsBehavioralFeaturesBehavioralFeature
    Reference agent : SdlAgent<<0..*>>
    Attribute kind : SdlAgentKind<<1..1>>
    Reference ownedAgentType : SdlAgentType<<0..*>>
    Reference channel : SdlChannel<<0..*>>
    Reference behavior : SdlCompositeState
    Reference parameter : SdlParameter<<0..*>>
    Reference gate : SdlGate<<0..*>>

  Class SdlAssignment -> SdlAction
    Reference expression : EvaluationExpression<<1..1>>
    Reference variable : SdlVariable<<1..1>>

  Class SdlBehavior -> CoreAbstractionsElementsElement

  Class SdlBehaviorElement -> CoreAbstractionsElementsElement
    Reference SdlBehaviorElement_behavior : SdlBehavior

  Class SdlChannel -> CoreAbstractionsNamespacesNamedElement
    Reference path : SdlChannelPath<<1..2>>
    Reference agentType : SdlAgentType<<1..1>>

  Class SdlChannelEnd -> CoreAbstractionsOwnershipsElement
    Reference agent : SdlAgent
    Reference gate : SdlGate
    Reference /opposite : SdlChannelEnd
    Reference channel : SdlChannelPath<<1..1>>

  Class SdlChannelPath -> CoreAbstractionsRelationshipsDirectedRelationship, CoreAbstractionsNamespacesNamedElement
    Reference source : SdlChannelEnd<<1..1>>
    Reference target : SdlChannelEnd<<1..1>>
    Reference signal : SdlSignal<<0..*>>
    Reference relatedElement : SdlChannelEnd<<0..*>>
    Reference channel : SdlChannel<<1..1>>

  Class SdlChoice -> SdlTrigger
    Reference condition : SdlRange<<0..*>>

  Class SdlClassifier -> SdlNamespace, CoreAbstractionsGeneralizationsClassifier
    Reference variable : SdlVariable<<0..*>>
    Reference procedure : SdlProcedure<<0..*>>

  Class SdlClosedRange -> SdlRange
    Reference upper : SdlOpenRange<<1..1>>
    Reference lower : SdlOpenRange<<1..1>>

  Class SdlCompositeState -> CoreAbstractionsTypedElementsTypedElement, SdlState, SdlBehavior
    Reference type : SdlStateType<<1..1>>

  Class SdlCompositeStateInstance -> SdlInstance, CommunicationProcess
    Reference actualState : SdlStateInstance<<1..1>>
    Reference state : SdlStateInstance
    Reference input : SdlInputInstance<<0..*>>
    Reference owningInstance : SdlAgentInstance
    Reference triggered : SdlInputInstance
    Reference sender : SdlAgentInstance
    Attribute status : SdlStateStatus<<1..1>>
    Operation initializeStates() : void<<1..1>>
    Operation executeTransition() : void<<1..1>>
    Operation executeAction() : void<<1..1>>
    Operation enterState(SdlState<<1..1>>) : void<<1..1>>
    Operation leaveActualState() : void<<1..1>>

  Class SdlCreate -> InstanciationCreate, SdlAction
    Reference agent : SdlAgent<<1..1>>
    Reference /classifier : SdlAgentType<<1..1>>

  Class SdlDataType -> EvaluationDataType, CoreAbstractionsNamespacesNamespace
    Reference literal : SdlLiteral<<0..*>>
    Reference operation : SdlOperation<<0..*>>

  Class SdlDataValue -> InstanciationValue

  Class SdlElse -> SdlChoice

  Class SdlEvaluation -> EvaluationEvaluation
    Reference context : SdlInstance<<1..1>>
    Operation updateContext(SdlInstance<<1..1>>) : void<<1..1>>

  Class SdlGate -> CoreAbstractionsNamespacesNamedElement
    Reference receive : SdlSignal<<0..*>>
    Reference send : SdlSignal<<0..*>>
    Reference channelEnd : SdlChannelEnd<<0..*>>
    Reference agentType : SdlAgentType<<1..1>>

  Class SdlGeneralValue -> SdlDataValue
    Attribute value : PrimitiveTypesObject<<1..1>>

  Class SdlImidiate -> SdlTrigger

  Class SdlInput -> CoreAbstractionsTypedElementsTypedElement, SdlTrigger
    Reference parameter : SdlVariable<<0..*>>
    Reference signal : SdlSignal<<1..1>>

  Class SdlInputInstance -> CommunicationListener
    Reference owningStateInstance : SdlCompositeStateInstance

  Class SdlInstance -> InstanciationInstance, InstanciationValue
    Reference variable : SdlVariableSlot
    Reference /containingInstance : SdlInstance
    Operation resolveSlot(SdlVariable<<1..1>>) : SdlVariableSlot<<1..1>>

  Class SdlLiteral -> EvaluationLiteral, CoreAbstractionsNamespacesNamedElement

  Class SdlLiteralEvaluation -> SdlEvaluation
    Reference /value : SdlDataValue<<1..1>>

  Class SdlLiteralExpression -> EvaluationLiteralExpression
    Attribute value : EString<<1..1>>

  Class SdlNamedState -> CoreAbstractionsNamespacesNamedElement, SdlAbstractState

  Class SdlNamespace -> CoreAbstractionsNamespacesNamespace
    Reference ownedType : CoreAbstractionsTypedElementsType<<0..*>>

  Class SdlNowExpression -> EvaluationExpression

  Class SdlOpenRange -> SdlRange
    Reference operation : SdlOperation<<1..1>>
    Reference expression : EvaluationExpression<<1..1>>

  Class SdlOperation -> CoreAbstractionsTypedElementsTypedElement, CoreAbstractionsBehavioralFeaturesBehavioralFeature
    Reference parameter : SdlParameter<<0..*>>

  Class SdlOperationCall -> EvaluationBehavioralFeatureAccessExpression
    Reference feature : SdlOperation<<1..1>>

  Class SdlOperationEvaluation -> SdlEvaluation
    Reference /value : SdlDataValue<<1..1>>

  Class SdlOutput -> SdlAction, InstanciationCreate
    Reference SdlOutput_classifier : SdlSignal<<1..1>>
    Reference via : SdlGate
    Reference /type : SdlSignal<<1..1>>
    Reference to : EvaluationExpression

  Class SdlPackage -> CoreAbstractionsNamespacesNamespace, SdlNamespace
    Reference nestedPackage : SdlPackage<<0..*>>

  Class SdlParameter -> SdlVariable, CoreAbstractionsBehavioralFeaturesParameter, CoreAbstractionsTypedElementsTypedElement
    Attribute kind : SdlParameterKind<<1..1>>

  Class SdlPidExpression -> EvaluationExpression
    Attribute kind : SdlPidExpressionKind<<1..1>>

  Class SdlPidExpressionEvaluation -> SdlEvaluation

  Class SdlPrimitiveValue -> SdlDataValue

  Class SdlProcedure -> CoreAbstractionsBehavioralFeaturesBehavioralFeature, CoreAbstractionsTypedElementsTypedElement, SdlBehaviorElement, SdlClassifier
    Reference parameter : SdlParameter<<0..*>>
    Reference procedureStateAutomaton : SdlStateAutomaton<<1..1>>

  Class SdlProcedureCall -> EvaluationBehavioralFeatureAccessExpression, InstanciationCreate, SdlAction
    Reference procedure : SdlProcedure<<1..1>>

  Class SdlProcedureFrame -> SdlInstance

  Class SdlPseudoState -> SdlAbstractState

  Class SdlRange -> CoreAbstractionsElementsElement

  Class SdlRangeCondition

  Class SdlReset -> SdlSet

  Class SdlSet -> SdlOutput
    Reference classifier : SdlTimer<<1..1>>
    Reference expression : EvaluationExpression<<1..1>>

  Class SdlSignal -> CommunicationEventType, CoreAbstractionsBehavioralFeaturesBehavioralFeature, SdlClassifier
    Reference parameter : SdlParameter<<0..*>>

  Class SdlSignalInstance -> CommunicationEvent, SdlInstance
    Reference parameter : SdlVariableSlot
    Reference sender : SdlAgentInstance<<1..1>>
    Reference receiver : SdlAgentInstance

  Class SdlSpecification
    Reference packages : SdlPackage<<0..*>>
    Reference system : SdlAgent

  Class SdlSplit -> SdlPseudoState
    Reference question : EvaluationExpression
    Reference answer : SdlChoice<<1..*>>

  Class SdlState -> SdlNamedState, CoreAbstractionsStructuralFeaturesStructuralFeature
    Reference entry : SdlAction<<0..*>>
    Reference exit : SdlAction<<0..*>>

  Class SdlStateAutomaton -> SdlBehavior, CoreAbstractionsNamespacesNamespace
    Reference state : SdlAbstractState<<0..*>>
    Reference /transition : SdlTransition<<0..*>>
    Reference namedState : SdlNamedState<<0..*>>
    Reference /start : Start<<1..1>>

  Class SdlStateInstance
    Reference SdlStateInstance_actualState : SdlStateInstance<<0..*>>

  Class SdlStateNode -> SdlPseudoState
    Reference state : SdlState<<0..*>>

  Class SdlStatePartition -> SdlState, SdlBehavior
    Reference partition : SdlStateType<<1..*>>

  Class SdlStatePartitionInstance -> SdlStateInstance
    Reference actualState : SdlStateInstance<<1..*>>

  Class SdlStateType -> SdlClassifier, CommunicationCommunicator
    Reference stateAutomaton : SdlStateAutomaton<<1..1>>
    Reference /state : SdlState<<0..*>>

  Class SdlTimer -> SdlSignal

  Class SdlTimerActiveExpression -> EvaluationBehavioralFeatureAccessExpression

  Class SdlTransition -> CoreAbstractionsElementsElement
    Reference action : SdlAction<<0..*>>
    Reference /source : SdlAbstractState<<1..1>>
    Reference target : SdlAbstractState<<1..1>>
    Reference /trigger : SdlTrigger<<1..1>>

  Class SdlTrigger -> CommunicationInput
    Reference transition : SdlTransition<<1..1>>

  Class SdlVariable -> CoreAbstractionsStructuralFeaturesStructuralFeature, CoreAbstractionsTypedElementsTypedElement
    Reference type : SdlDataType<<1..1>>
    Reference initExpression : EvaluationExpression

  Class SdlVariableAccess -> EvaluationFeatureAccessExpression
    Reference feature : SdlVariable<<1..1>>

  Class SdlVariableAccessEvaluation -> SdlEvaluation
    Reference /value : SdlDataValue<<1..1>>

  Class SdlVariableSlot -> InstanciationSlot
    Reference value : SdlDataValue

  Class Start -> SdlPseudoState

  Class Stop -> SdlPseudoState

  Enum ConcreteSyntaxSdlScopeUnitKind
    Literal Package = 0
    Literal SystemType = 1
    Literal ProcessType = 2
    Literal BlockType = 3
    Literal Signal = 4
    Literal Procedure = 5
    Literal System = 6
    Literal Block = 7
    Literal Process = 8
    Literal StateType = 9
    Literal State = 10

  Enum CoreAbstractionsVisibilitiesVisibilityKind
    Literal public = 0
    Literal private = 1
    Literal protected = 2
    Literal package = 3

  Enum SdlAgentKind
    Literal process = 0
    Literal block = 1
    Literal system = 2

  Enum SdlParameterKind
    Literal In = 0
    Literal Out = 1
    Literal InOut = 2

  Enum SdlPidExpressionKind
    Literal Self = 0
    Literal Sender = 1
    Literal Offspring = 2
    Literal Parent = 3

  Enum SdlStateStatus
    Literal STARTED = 0
    Literal RUNNING = 1
    Literal STOPED = 2

  DataType PrimitiveTypesBoolean <java.lang.String>

  DataType PrimitiveTypesInteger <java.lang.String>

  DataType PrimitiveTypesObject <java.lang.String>

  DataType PrimitiveTypesString <java.lang.String>

  DataType PrimitiveTypesUnlimitedNatural <java.lang.String>
