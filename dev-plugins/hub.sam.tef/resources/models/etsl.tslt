syntax(Syntax) "resources/models/etsl.ecore" {
	Syntax:element(Syntax) -> 
		"syntax" "(" NonTerminal:composite(start) ")" 
				STRINGDEF:composite(metaModelPlatformURI) "{" 
			RuleList

			TokenOpt
		"}";
		
	RuleList [1] -> Rule:composite(rules) ";" RuleList;
	RuleList [0] -> ;
	
	Rule:element(ExtendedRule) -> Lhs:composite(lhs) 
			ValueBindingOpt PriorityOpt "->"
		Rhs:composite(rhs);
		
	Lhs:element(NonTerminal) -> IDENTIFIER:composite(name);
		
	Rhs [1] -> RhsSequence;
	Rhs [1] -> RhsPart;	
	Rhs [1] -> RhsOperator;
	Rhs [0] -> ;
		
	RhsPart:element(RhsPart) -> Symbol:composite(symbol);
	
	RhsSequence:element(RhsSequence) -> RhsWoSequence:composite(parts) RhsPartList ;
	RhsPartList [1] -> RhsWoSequence:composite(parts) RhsPartList;
	RhsPartList [0] -> RhsWoSequence:composite(parts);
	
	RhsWoSequence -> RhsPart;
	RhsWoSequence -> RhsOperator;
			 
	RhsOperator -> Arbitrary;
	RhsOperator -> AtLeastOne;
	RhsOperator -> Optional;	
	
	Arbitrary:element(Arbitrary) -> "(" Rhs:composite(operand) ")" "*";
	AtLeastOne:element(AtLeastOne) -> "(" Rhs:composite(operand) ")" "+";
	Optional:element(Optional) -> "(" Rhs:composite(operand) ")" "?";
	
	Symbol -> NonTerminal;
	Symbol -> FixTerminal;		
	Symbol -> WhiteSpace;
	NonTerminal:element(NonTerminal) -> IDENTIFIER:composite(name) PropertyBindingOpt PropertyActionOpt;	
	FixTerminal:element(FixTerminal) -> STRINGDEF:composite(terminal) PropertyBindingOpt PropertyActionOpt;
	WhiteSpace:element(WhiteSpace) -> "ws" "(" IDENTIFIER:composite(role) ")";
	
	ValueBindingOpt [1] -> ValueBinding;
	ValueBindingOpt [0] ->;
	ValueBinding -> ElementBinding:composite(valueBinding);
	ElementBinding:element(ElementBinding) -> ":" "element" "(" 
			IDENTIFIER:reference(metaclass, "TslMetaModelReferenceBinding") ")";
	ElementBinding:element(ElementBinding) -> ":" "element" "(" 
			IDENTIFIER:reference(metaclass, "TslMetaModelReferenceBinding") "," STRINGDEF:composite(bindingId) ")";
	ValueBinding -> ElementRefBinding:composite(valueBinding);
	ElementRefBinding:element(ElementReferenceBinding) -> ":" "elementRef" "("
			IDENTIFIER:reference(metaclass, "TslMetaModelReferenceBinding") ")";
	ElementRefBinding:element(ElementReferenceBinding) -> ":" "elementRef" "("
			IDENTIFIER:reference(metaclass, "TslMetaModelReferenceBinding") "," STRINGDEF:composite(bindingId) ")";
	ValueBinding -> ConstantBinding:composite(valueBinding);
	ConstantBinding:element(ConstantBinding) -> ":" "constant" "("
			STRINGDEF:composite(value) ":" IDENTIFIER:composite(type) ")";

	PropertyBindingOpt [1] -> PropertyBinding;
	PropertyBindingOpt [0] -> ;
	PropertyBinding -> CompositeBinding:composite(propertyBinding);
	PropertyBinding -> ReferenceBinding:composite(propertyBinding);
	CompositeBinding:element(CompositeBinding) -> ":" "composite" "("
			IDENTIFIER:reference(property, "TslMetaModelReferenceBinding") ")";
    CompositeBinding:element(CompositeBinding) -> ":" "composite" "("
			IDENTIFIER:reference(property, "TslMetaModelReferenceBinding") "=" STRINGDEF:composite(default) ")";
	CompositeBinding:element(CompositeBinding) -> ":" "composite" "("
			IDENTIFIER:reference(property, "TslMetaModelReferenceBinding") "," STRINGDEF:composite(bindingId) ")";
    CompositeBinding:element(CompositeBinding) -> ":" "composite" "("
			IDENTIFIER:reference(property, "TslMetaModelReferenceBinding") "=" STRINGDEF:composite(default) "," STRINGDEF:composite(bindingId) ")";
	ReferenceBinding:element(ReferenceBinding) -> ":" "reference" "("
			IDENTIFIER:reference(property, "TslMetaModelReferenceBinding") ")";
			
	PriorityOpt [1] -> "[" INTEGER:composite(priority) "]";
	PriorityOpt [0] ->;
	
	PropertyActionOpt[0] -> ;
	PropertyActionOpt[1] -> "{"	ActionStatements:composite(actionBinding) "}";
	
	ActionStatements:element(ActionBinding) -> ActionStatementList ;
	
	ActionStatementList[1] -> ActionStatement:composite(statements) ";" ActionStatementList;
	ActionStatementList[0] -> ;
	
	ActionStatement:element(Statement) -> IDENTIFIER:composite(methodName) "(" StatementParameterListOpt ")" ;
	
	StatementParameterListOpt[1] -> StatementParameterList;
	StatementParameterListOpt[0] -> ;
	StatementParameterList[0] -> StatementParameter:composite(methodParameters);
	StatementParameterList[1] -> StatementParameter:composite(methodParameters) "," StatementParameterList;
	
	StatementParameter -> ETSL_ACTION_PARAMETER;
	
	TokenOpt[0] -> ;
	TokenOpt[1] -> "token" "(" ")" "{"
	   TokenList
	 "}" ;
	 
	TokenList[1] -> TokenDeclaration:composite(pattern) ";" TokenList;
	TokenList[0] -> ;
	TokenDeclaration:element(Pattern) -> STRINGDEF:composite(rccSymbol);
	
	token () {
		"`cstylecomment`";
	}
}
