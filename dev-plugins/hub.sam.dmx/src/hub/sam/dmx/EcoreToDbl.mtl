[comment encoding = UTF-8 /]
[module EcoreToDbl('http://www.eclipse.org/emf/2002/Ecore')/]

[template public EcoreToDbl(pkg : EPackage)]
[comment @main /]

[file (pkg.name.concat('.dbl'), false, 'UTF-8')]
	module [pkg.name/] {
		interface Object {
		}
	[for (class : EClass | pkg.eClassifiers->filter(EClass))]
		[if (class.name <> 'EObject')]
			interface [class.name/] extends EObject[if (class.eSuperTypes->size() > 0)][genSuperClasses(class)/][/if] {
			[for (feature : EStructuralFeature | class.eStructuralFeatures)]
				[genType(feature)/] [if (feature.eType.name = 'EBoolean')]is[else]get[/if][feature.name.toUpperFirst()/]();
			[/for]
			}
		[else]
		interface EObject {
  			EClass eClass();
  			Resource eResource();
  			EObject eContainer();
 			EStructuralFeature eContainingFeature();
  			EReference eContainmentFeature();
  			list(EObject) eContents();
  			list(EObject) eAllContents();
  			boolean eIsProxy();
  			list(EObject) eCrossReferences();
  			Object eGet(EStructuralFeature feature);
  			Object eGet(EStructuralFeature feature, boolean resolve);
  			void eSet(EStructuralFeature feature, Object newValue);
  			boolean eIsSet(EStructuralFeature feature);
  			void eUnset(EStructuralFeature feature);
  			Object eInvoke(EOperation operation, list(Object) arguments);
		}
		[/if]
	[/for]
	}
[/file]
	
[/template]

[template public genType(typedElement : ETypedElement)]
[if (not typedElement.eType.oclIsUndefined())][if (typedElement.many)]
list([typedElement.eType.name/])
[else]
[genType2(typedElement)/]
[/if]
[else]void[/if]
[/template]

[template public genType2(typedElement : ETypedElement)]
[if (typedElement.eType.name = 'EInt')]
	int
[elseif (typedElement.eType.name = 'EBigInteger')]
	int
[elseif (typedElement.eType.name = 'EDouble')]
	double
[elseif (typedElement.eType.name = 'EBoolean')]
	boolean
[elseif (typedElement.eType.name = 'EObject')]
	Object
[elseif (typedElement.eType.name = 'EString')]
	string
[else]
	[typedElement.eType.name/]
[/if]
[/template]

[template public genSuperClasses(class : EClass)]
[for (superClass : EClass | class.eSuperTypes)], [superClass.name/][/for]
[/template]

[template public genSuperClasses2(class : EClass)]
[for (superClass : EClass | class.eSuperTypes) separator (',')][superClass.name/][/for]
[/template]