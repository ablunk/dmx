/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package hub.sam.sdl.provider;

import hub.sam.sdl.util.EmfSdlAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EmfSdlItemProviderAdapterFactory extends EmfSdlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EmfSdlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CommunicationEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationEventItemProvider communicationEventItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CommunicationEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationEventAdapter() {
		if (communicationEventItemProvider == null) {
			communicationEventItemProvider = new CommunicationEventItemProvider(this);
		}

		return communicationEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.ConcreteSyntaxSdlIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteSyntaxSdlIdentifierItemProvider concreteSyntaxSdlIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.ConcreteSyntaxSdlIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteSyntaxSdlIdentifierAdapter() {
		if (concreteSyntaxSdlIdentifierItemProvider == null) {
			concreteSyntaxSdlIdentifierItemProvider = new ConcreteSyntaxSdlIdentifierItemProvider(this);
		}

		return concreteSyntaxSdlIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.ConcreteSyntaxSdlPathItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteSyntaxSdlPathItemItemProvider concreteSyntaxSdlPathItemItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.ConcreteSyntaxSdlPathItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteSyntaxSdlPathItemAdapter() {
		if (concreteSyntaxSdlPathItemItemProvider == null) {
			concreteSyntaxSdlPathItemItemProvider = new ConcreteSyntaxSdlPathItemItemProvider(this);
		}

		return concreteSyntaxSdlPathItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.ConcreteSyntaxSdlQualifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteSyntaxSdlQualifierItemProvider concreteSyntaxSdlQualifierItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.ConcreteSyntaxSdlQualifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteSyntaxSdlQualifierAdapter() {
		if (concreteSyntaxSdlQualifierItemProvider == null) {
			concreteSyntaxSdlQualifierItemProvider = new ConcreteSyntaxSdlQualifierItemProvider(this);
		}

		return concreteSyntaxSdlQualifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.ConcreteSyntaxSdlStateList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteSyntaxSdlStateListItemProvider concreteSyntaxSdlStateListItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.ConcreteSyntaxSdlStateList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteSyntaxSdlStateListAdapter() {
		if (concreteSyntaxSdlStateListItemProvider == null) {
			concreteSyntaxSdlStateListItemProvider = new ConcreteSyntaxSdlStateListItemProvider(this);
		}

		return concreteSyntaxSdlStateListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.Connector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorItemProvider connectorItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.Connector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorAdapter() {
		if (connectorItemProvider == null) {
			connectorItemProvider = new ConnectorItemProvider(this);
		}

		return connectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsCommentsComment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsCommentsCommentItemProvider coreAbstractionsCommentsCommentItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsCommentsComment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsCommentsCommentAdapter() {
		if (coreAbstractionsCommentsCommentItemProvider == null) {
			coreAbstractionsCommentsCommentItemProvider = new CoreAbstractionsCommentsCommentItemProvider(this);
		}

		return coreAbstractionsCommentsCommentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsConstraintsConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsConstraintsConstraintItemProvider coreAbstractionsConstraintsConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsConstraintsConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsConstraintsConstraintAdapter() {
		if (coreAbstractionsConstraintsConstraintItemProvider == null) {
			coreAbstractionsConstraintsConstraintItemProvider = new CoreAbstractionsConstraintsConstraintItemProvider(this);
		}

		return coreAbstractionsConstraintsConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsExpressionsExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsExpressionsExpressionItemProvider coreAbstractionsExpressionsExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsExpressionsExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsExpressionsExpressionAdapter() {
		if (coreAbstractionsExpressionsExpressionItemProvider == null) {
			coreAbstractionsExpressionsExpressionItemProvider = new CoreAbstractionsExpressionsExpressionItemProvider(this);
		}

		return coreAbstractionsExpressionsExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsExpressionsOpaqueExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsExpressionsOpaqueExpressionItemProvider coreAbstractionsExpressionsOpaqueExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsExpressionsOpaqueExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsExpressionsOpaqueExpressionAdapter() {
		if (coreAbstractionsExpressionsOpaqueExpressionItemProvider == null) {
			coreAbstractionsExpressionsOpaqueExpressionItemProvider = new CoreAbstractionsExpressionsOpaqueExpressionItemProvider(this);
		}

		return coreAbstractionsExpressionsOpaqueExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsGeneralizationsGeneralization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsGeneralizationsGeneralizationItemProvider coreAbstractionsGeneralizationsGeneralizationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsGeneralizationsGeneralization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsGeneralizationsGeneralizationAdapter() {
		if (coreAbstractionsGeneralizationsGeneralizationItemProvider == null) {
			coreAbstractionsGeneralizationsGeneralizationItemProvider = new CoreAbstractionsGeneralizationsGeneralizationItemProvider(this);
		}

		return coreAbstractionsGeneralizationsGeneralizationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsInstancesInstanceSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsInstancesInstanceSpecificationItemProvider coreAbstractionsInstancesInstanceSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsInstancesInstanceSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsInstancesInstanceSpecificationAdapter() {
		if (coreAbstractionsInstancesInstanceSpecificationItemProvider == null) {
			coreAbstractionsInstancesInstanceSpecificationItemProvider = new CoreAbstractionsInstancesInstanceSpecificationItemProvider(this);
		}

		return coreAbstractionsInstancesInstanceSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsInstancesInstanceValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsInstancesInstanceValueItemProvider coreAbstractionsInstancesInstanceValueItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsInstancesInstanceValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsInstancesInstanceValueAdapter() {
		if (coreAbstractionsInstancesInstanceValueItemProvider == null) {
			coreAbstractionsInstancesInstanceValueItemProvider = new CoreAbstractionsInstancesInstanceValueItemProvider(this);
		}

		return coreAbstractionsInstancesInstanceValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsInstancesSlot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsInstancesSlotItemProvider coreAbstractionsInstancesSlotItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsInstancesSlot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsInstancesSlotAdapter() {
		if (coreAbstractionsInstancesSlotItemProvider == null) {
			coreAbstractionsInstancesSlotItemProvider = new CoreAbstractionsInstancesSlotItemProvider(this);
		}

		return coreAbstractionsInstancesSlotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralBoolean} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsLiteralsLiteralBooleanItemProvider coreAbstractionsLiteralsLiteralBooleanItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralBoolean}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsLiteralsLiteralBooleanAdapter() {
		if (coreAbstractionsLiteralsLiteralBooleanItemProvider == null) {
			coreAbstractionsLiteralsLiteralBooleanItemProvider = new CoreAbstractionsLiteralsLiteralBooleanItemProvider(this);
		}

		return coreAbstractionsLiteralsLiteralBooleanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralInteger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsLiteralsLiteralIntegerItemProvider coreAbstractionsLiteralsLiteralIntegerItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralInteger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsLiteralsLiteralIntegerAdapter() {
		if (coreAbstractionsLiteralsLiteralIntegerItemProvider == null) {
			coreAbstractionsLiteralsLiteralIntegerItemProvider = new CoreAbstractionsLiteralsLiteralIntegerItemProvider(this);
		}

		return coreAbstractionsLiteralsLiteralIntegerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralNull} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsLiteralsLiteralNullItemProvider coreAbstractionsLiteralsLiteralNullItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralNull}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsLiteralsLiteralNullAdapter() {
		if (coreAbstractionsLiteralsLiteralNullItemProvider == null) {
			coreAbstractionsLiteralsLiteralNullItemProvider = new CoreAbstractionsLiteralsLiteralNullItemProvider(this);
		}

		return coreAbstractionsLiteralsLiteralNullItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralString} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsLiteralsLiteralStringItemProvider coreAbstractionsLiteralsLiteralStringItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralString}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsLiteralsLiteralStringAdapter() {
		if (coreAbstractionsLiteralsLiteralStringItemProvider == null) {
			coreAbstractionsLiteralsLiteralStringItemProvider = new CoreAbstractionsLiteralsLiteralStringItemProvider(this);
		}

		return coreAbstractionsLiteralsLiteralStringItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralUnlimitedNatural} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CoreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider coreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.CoreAbstractionsLiteralsLiteralUnlimitedNatural}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCoreAbstractionsLiteralsLiteralUnlimitedNaturalAdapter() {
		if (coreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider == null) {
			coreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider = new CoreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider(this);
		}

		return coreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.EvaluationEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationEvaluationItemProvider evaluationEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.EvaluationEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationEvaluationAdapter() {
		if (evaluationEvaluationItemProvider == null) {
			evaluationEvaluationItemProvider = new EvaluationEvaluationItemProvider(this);
		}

		return evaluationEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.Fork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForkItemProvider forkItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.Fork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForkAdapter() {
		if (forkItemProvider == null) {
			forkItemProvider = new ForkItemProvider(this);
		}

		return forkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.History} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HistoryItemProvider historyItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.History}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHistoryAdapter() {
		if (historyItemProvider == null) {
			historyItemProvider = new HistoryItemProvider(this);
		}

		return historyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.Join} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinItemProvider joinItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.Join}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinAdapter() {
		if (joinItemProvider == null) {
			joinItemProvider = new JoinItemProvider(this);
		}

		return joinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.PidValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PidValueItemProvider pidValueItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.PidValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPidValueAdapter() {
		if (pidValueItemProvider == null) {
			pidValueItemProvider = new PidValueItemProvider(this);
		}

		return pidValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.Return} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnItemProvider returnItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.Return}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnAdapter() {
		if (returnItemProvider == null) {
			returnItemProvider = new ReturnItemProvider(this);
		}

		return returnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlAgent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlAgentItemProvider sdlAgentItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlAgent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlAgentAdapter() {
		if (sdlAgentItemProvider == null) {
			sdlAgentItemProvider = new SdlAgentItemProvider(this);
		}

		return sdlAgentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlAgentInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlAgentInstanceItemProvider sdlAgentInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlAgentInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlAgentInstanceAdapter() {
		if (sdlAgentInstanceItemProvider == null) {
			sdlAgentInstanceItemProvider = new SdlAgentInstanceItemProvider(this);
		}

		return sdlAgentInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlAgentInstanceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlAgentInstanceSetItemProvider sdlAgentInstanceSetItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlAgentInstanceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlAgentInstanceSetAdapter() {
		if (sdlAgentInstanceSetItemProvider == null) {
			sdlAgentInstanceSetItemProvider = new SdlAgentInstanceSetItemProvider(this);
		}

		return sdlAgentInstanceSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlAgentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlAgentTypeItemProvider sdlAgentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlAgentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlAgentTypeAdapter() {
		if (sdlAgentTypeItemProvider == null) {
			sdlAgentTypeItemProvider = new SdlAgentTypeItemProvider(this);
		}

		return sdlAgentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlAssignmentItemProvider sdlAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlAssignmentAdapter() {
		if (sdlAssignmentItemProvider == null) {
			sdlAssignmentItemProvider = new SdlAssignmentItemProvider(this);
		}

		return sdlAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlBehaviorItemProvider sdlBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlBehaviorAdapter() {
		if (sdlBehaviorItemProvider == null) {
			sdlBehaviorItemProvider = new SdlBehaviorItemProvider(this);
		}

		return sdlBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlChannel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlChannelItemProvider sdlChannelItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlChannel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlChannelAdapter() {
		if (sdlChannelItemProvider == null) {
			sdlChannelItemProvider = new SdlChannelItemProvider(this);
		}

		return sdlChannelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlChannelEnd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlChannelEndItemProvider sdlChannelEndItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlChannelEnd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlChannelEndAdapter() {
		if (sdlChannelEndItemProvider == null) {
			sdlChannelEndItemProvider = new SdlChannelEndItemProvider(this);
		}

		return sdlChannelEndItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlChannelPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlChannelPathItemProvider sdlChannelPathItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlChannelPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlChannelPathAdapter() {
		if (sdlChannelPathItemProvider == null) {
			sdlChannelPathItemProvider = new SdlChannelPathItemProvider(this);
		}

		return sdlChannelPathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlChoice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlChoiceItemProvider sdlChoiceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlChoice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlChoiceAdapter() {
		if (sdlChoiceItemProvider == null) {
			sdlChoiceItemProvider = new SdlChoiceItemProvider(this);
		}

		return sdlChoiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlClosedRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlClosedRangeItemProvider sdlClosedRangeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlClosedRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlClosedRangeAdapter() {
		if (sdlClosedRangeItemProvider == null) {
			sdlClosedRangeItemProvider = new SdlClosedRangeItemProvider(this);
		}

		return sdlClosedRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlCompositeState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlCompositeStateItemProvider sdlCompositeStateItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlCompositeState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlCompositeStateAdapter() {
		if (sdlCompositeStateItemProvider == null) {
			sdlCompositeStateItemProvider = new SdlCompositeStateItemProvider(this);
		}

		return sdlCompositeStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlCompositeStateInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlCompositeStateInstanceItemProvider sdlCompositeStateInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlCompositeStateInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlCompositeStateInstanceAdapter() {
		if (sdlCompositeStateInstanceItemProvider == null) {
			sdlCompositeStateInstanceItemProvider = new SdlCompositeStateInstanceItemProvider(this);
		}

		return sdlCompositeStateInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlCreate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlCreateItemProvider sdlCreateItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlCreate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlCreateAdapter() {
		if (sdlCreateItemProvider == null) {
			sdlCreateItemProvider = new SdlCreateItemProvider(this);
		}

		return sdlCreateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlDataTypeItemProvider sdlDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlDataTypeAdapter() {
		if (sdlDataTypeItemProvider == null) {
			sdlDataTypeItemProvider = new SdlDataTypeItemProvider(this);
		}

		return sdlDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlElse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlElseItemProvider sdlElseItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlElse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlElseAdapter() {
		if (sdlElseItemProvider == null) {
			sdlElseItemProvider = new SdlElseItemProvider(this);
		}

		return sdlElseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlGate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlGateItemProvider sdlGateItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlGate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlGateAdapter() {
		if (sdlGateItemProvider == null) {
			sdlGateItemProvider = new SdlGateItemProvider(this);
		}

		return sdlGateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlGeneralValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlGeneralValueItemProvider sdlGeneralValueItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlGeneralValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlGeneralValueAdapter() {
		if (sdlGeneralValueItemProvider == null) {
			sdlGeneralValueItemProvider = new SdlGeneralValueItemProvider(this);
		}

		return sdlGeneralValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlImidiate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlImidiateItemProvider sdlImidiateItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlImidiate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlImidiateAdapter() {
		if (sdlImidiateItemProvider == null) {
			sdlImidiateItemProvider = new SdlImidiateItemProvider(this);
		}

		return sdlImidiateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlInputItemProvider sdlInputItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlInputAdapter() {
		if (sdlInputItemProvider == null) {
			sdlInputItemProvider = new SdlInputItemProvider(this);
		}

		return sdlInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlInputInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlInputInstanceItemProvider sdlInputInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlInputInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlInputInstanceAdapter() {
		if (sdlInputInstanceItemProvider == null) {
			sdlInputInstanceItemProvider = new SdlInputInstanceItemProvider(this);
		}

		return sdlInputInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlLiteralItemProvider sdlLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlLiteralAdapter() {
		if (sdlLiteralItemProvider == null) {
			sdlLiteralItemProvider = new SdlLiteralItemProvider(this);
		}

		return sdlLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlLiteralEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlLiteralEvaluationItemProvider sdlLiteralEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlLiteralEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlLiteralEvaluationAdapter() {
		if (sdlLiteralEvaluationItemProvider == null) {
			sdlLiteralEvaluationItemProvider = new SdlLiteralEvaluationItemProvider(this);
		}

		return sdlLiteralEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlLiteralExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlLiteralExpressionItemProvider sdlLiteralExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlLiteralExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlLiteralExpressionAdapter() {
		if (sdlLiteralExpressionItemProvider == null) {
			sdlLiteralExpressionItemProvider = new SdlLiteralExpressionItemProvider(this);
		}

		return sdlLiteralExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlNowExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlNowExpressionItemProvider sdlNowExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlNowExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlNowExpressionAdapter() {
		if (sdlNowExpressionItemProvider == null) {
			sdlNowExpressionItemProvider = new SdlNowExpressionItemProvider(this);
		}

		return sdlNowExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlOpenRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlOpenRangeItemProvider sdlOpenRangeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlOpenRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlOpenRangeAdapter() {
		if (sdlOpenRangeItemProvider == null) {
			sdlOpenRangeItemProvider = new SdlOpenRangeItemProvider(this);
		}

		return sdlOpenRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlOperationItemProvider sdlOperationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlOperationAdapter() {
		if (sdlOperationItemProvider == null) {
			sdlOperationItemProvider = new SdlOperationItemProvider(this);
		}

		return sdlOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlOperationCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlOperationCallItemProvider sdlOperationCallItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlOperationCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlOperationCallAdapter() {
		if (sdlOperationCallItemProvider == null) {
			sdlOperationCallItemProvider = new SdlOperationCallItemProvider(this);
		}

		return sdlOperationCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlOperationEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlOperationEvaluationItemProvider sdlOperationEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlOperationEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlOperationEvaluationAdapter() {
		if (sdlOperationEvaluationItemProvider == null) {
			sdlOperationEvaluationItemProvider = new SdlOperationEvaluationItemProvider(this);
		}

		return sdlOperationEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlOutput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlOutputItemProvider sdlOutputItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlOutput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlOutputAdapter() {
		if (sdlOutputItemProvider == null) {
			sdlOutputItemProvider = new SdlOutputItemProvider(this);
		}

		return sdlOutputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlPackageItemProvider sdlPackageItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlPackageAdapter() {
		if (sdlPackageItemProvider == null) {
			sdlPackageItemProvider = new SdlPackageItemProvider(this);
		}

		return sdlPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlParameterItemProvider sdlParameterItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlParameterAdapter() {
		if (sdlParameterItemProvider == null) {
			sdlParameterItemProvider = new SdlParameterItemProvider(this);
		}

		return sdlParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlPidExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlPidExpressionItemProvider sdlPidExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlPidExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlPidExpressionAdapter() {
		if (sdlPidExpressionItemProvider == null) {
			sdlPidExpressionItemProvider = new SdlPidExpressionItemProvider(this);
		}

		return sdlPidExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlPidExpressionEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlPidExpressionEvaluationItemProvider sdlPidExpressionEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlPidExpressionEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlPidExpressionEvaluationAdapter() {
		if (sdlPidExpressionEvaluationItemProvider == null) {
			sdlPidExpressionEvaluationItemProvider = new SdlPidExpressionEvaluationItemProvider(this);
		}

		return sdlPidExpressionEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlProcedure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlProcedureItemProvider sdlProcedureItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlProcedure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlProcedureAdapter() {
		if (sdlProcedureItemProvider == null) {
			sdlProcedureItemProvider = new SdlProcedureItemProvider(this);
		}

		return sdlProcedureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlProcedureCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlProcedureCallItemProvider sdlProcedureCallItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlProcedureCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlProcedureCallAdapter() {
		if (sdlProcedureCallItemProvider == null) {
			sdlProcedureCallItemProvider = new SdlProcedureCallItemProvider(this);
		}

		return sdlProcedureCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlProcedureFrame} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlProcedureFrameItemProvider sdlProcedureFrameItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlProcedureFrame}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlProcedureFrameAdapter() {
		if (sdlProcedureFrameItemProvider == null) {
			sdlProcedureFrameItemProvider = new SdlProcedureFrameItemProvider(this);
		}

		return sdlProcedureFrameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlRangeItemProvider sdlRangeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlRangeAdapter() {
		if (sdlRangeItemProvider == null) {
			sdlRangeItemProvider = new SdlRangeItemProvider(this);
		}

		return sdlRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlRangeCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlRangeConditionItemProvider sdlRangeConditionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlRangeCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlRangeConditionAdapter() {
		if (sdlRangeConditionItemProvider == null) {
			sdlRangeConditionItemProvider = new SdlRangeConditionItemProvider(this);
		}

		return sdlRangeConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlReset} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlResetItemProvider sdlResetItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlReset}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlResetAdapter() {
		if (sdlResetItemProvider == null) {
			sdlResetItemProvider = new SdlResetItemProvider(this);
		}

		return sdlResetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlSetItemProvider sdlSetItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlSetAdapter() {
		if (sdlSetItemProvider == null) {
			sdlSetItemProvider = new SdlSetItemProvider(this);
		}

		return sdlSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlSignal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlSignalItemProvider sdlSignalItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlSignal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlSignalAdapter() {
		if (sdlSignalItemProvider == null) {
			sdlSignalItemProvider = new SdlSignalItemProvider(this);
		}

		return sdlSignalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlSignalInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlSignalInstanceItemProvider sdlSignalInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlSignalInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlSignalInstanceAdapter() {
		if (sdlSignalInstanceItemProvider == null) {
			sdlSignalInstanceItemProvider = new SdlSignalInstanceItemProvider(this);
		}

		return sdlSignalInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlSpecificationItemProvider sdlSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlSpecificationAdapter() {
		if (sdlSpecificationItemProvider == null) {
			sdlSpecificationItemProvider = new SdlSpecificationItemProvider(this);
		}

		return sdlSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlSplit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlSplitItemProvider sdlSplitItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlSplit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlSplitAdapter() {
		if (sdlSplitItemProvider == null) {
			sdlSplitItemProvider = new SdlSplitItemProvider(this);
		}

		return sdlSplitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStateItemProvider sdlStateItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStateAdapter() {
		if (sdlStateItemProvider == null) {
			sdlStateItemProvider = new SdlStateItemProvider(this);
		}

		return sdlStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlStateAutomaton} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStateAutomatonItemProvider sdlStateAutomatonItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlStateAutomaton}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStateAutomatonAdapter() {
		if (sdlStateAutomatonItemProvider == null) {
			sdlStateAutomatonItemProvider = new SdlStateAutomatonItemProvider(this);
		}

		return sdlStateAutomatonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlStateInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStateInstanceItemProvider sdlStateInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlStateInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStateInstanceAdapter() {
		if (sdlStateInstanceItemProvider == null) {
			sdlStateInstanceItemProvider = new SdlStateInstanceItemProvider(this);
		}

		return sdlStateInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlStateNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStateNodeItemProvider sdlStateNodeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlStateNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStateNodeAdapter() {
		if (sdlStateNodeItemProvider == null) {
			sdlStateNodeItemProvider = new SdlStateNodeItemProvider(this);
		}

		return sdlStateNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlStatePartition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStatePartitionItemProvider sdlStatePartitionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlStatePartition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStatePartitionAdapter() {
		if (sdlStatePartitionItemProvider == null) {
			sdlStatePartitionItemProvider = new SdlStatePartitionItemProvider(this);
		}

		return sdlStatePartitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlStatePartitionInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStatePartitionInstanceItemProvider sdlStatePartitionInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlStatePartitionInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStatePartitionInstanceAdapter() {
		if (sdlStatePartitionInstanceItemProvider == null) {
			sdlStatePartitionInstanceItemProvider = new SdlStatePartitionInstanceItemProvider(this);
		}

		return sdlStatePartitionInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlStateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlStateTypeItemProvider sdlStateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlStateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlStateTypeAdapter() {
		if (sdlStateTypeItemProvider == null) {
			sdlStateTypeItemProvider = new SdlStateTypeItemProvider(this);
		}

		return sdlStateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlTimer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlTimerItemProvider sdlTimerItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlTimer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlTimerAdapter() {
		if (sdlTimerItemProvider == null) {
			sdlTimerItemProvider = new SdlTimerItemProvider(this);
		}

		return sdlTimerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlTimerActiveExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlTimerActiveExpressionItemProvider sdlTimerActiveExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlTimerActiveExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlTimerActiveExpressionAdapter() {
		if (sdlTimerActiveExpressionItemProvider == null) {
			sdlTimerActiveExpressionItemProvider = new SdlTimerActiveExpressionItemProvider(this);
		}

		return sdlTimerActiveExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlTransition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlTransitionItemProvider sdlTransitionItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlTransition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlTransitionAdapter() {
		if (sdlTransitionItemProvider == null) {
			sdlTransitionItemProvider = new SdlTransitionItemProvider(this);
		}

		return sdlTransitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlTriggerItemProvider sdlTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlTriggerAdapter() {
		if (sdlTriggerItemProvider == null) {
			sdlTriggerItemProvider = new SdlTriggerItemProvider(this);
		}

		return sdlTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlVariableItemProvider sdlVariableItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlVariableAdapter() {
		if (sdlVariableItemProvider == null) {
			sdlVariableItemProvider = new SdlVariableItemProvider(this);
		}

		return sdlVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlVariableAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlVariableAccessItemProvider sdlVariableAccessItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlVariableAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlVariableAccessAdapter() {
		if (sdlVariableAccessItemProvider == null) {
			sdlVariableAccessItemProvider = new SdlVariableAccessItemProvider(this);
		}

		return sdlVariableAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlVariableAccessEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlVariableAccessEvaluationItemProvider sdlVariableAccessEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlVariableAccessEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlVariableAccessEvaluationAdapter() {
		if (sdlVariableAccessEvaluationItemProvider == null) {
			sdlVariableAccessEvaluationItemProvider = new SdlVariableAccessEvaluationItemProvider(this);
		}

		return sdlVariableAccessEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.SdlVariableSlot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SdlVariableSlotItemProvider sdlVariableSlotItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.SdlVariableSlot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSdlVariableSlotAdapter() {
		if (sdlVariableSlotItemProvider == null) {
			sdlVariableSlotItemProvider = new SdlVariableSlotItemProvider(this);
		}

		return sdlVariableSlotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.Start} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartItemProvider startItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.Start}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartAdapter() {
		if (startItemProvider == null) {
			startItemProvider = new StartItemProvider(this);
		}

		return startItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hub.sam.sdl.Stop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StopItemProvider stopItemProvider;

	/**
	 * This creates an adapter for a {@link hub.sam.sdl.Stop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStopAdapter() {
		if (stopItemProvider == null) {
			stopItemProvider = new StopItemProvider(this);
		}

		return stopItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (communicationEventItemProvider != null) communicationEventItemProvider.dispose();
		if (concreteSyntaxSdlIdentifierItemProvider != null) concreteSyntaxSdlIdentifierItemProvider.dispose();
		if (concreteSyntaxSdlPathItemItemProvider != null) concreteSyntaxSdlPathItemItemProvider.dispose();
		if (concreteSyntaxSdlQualifierItemProvider != null) concreteSyntaxSdlQualifierItemProvider.dispose();
		if (concreteSyntaxSdlStateListItemProvider != null) concreteSyntaxSdlStateListItemProvider.dispose();
		if (connectorItemProvider != null) connectorItemProvider.dispose();
		if (coreAbstractionsCommentsCommentItemProvider != null) coreAbstractionsCommentsCommentItemProvider.dispose();
		if (coreAbstractionsConstraintsConstraintItemProvider != null) coreAbstractionsConstraintsConstraintItemProvider.dispose();
		if (coreAbstractionsExpressionsExpressionItemProvider != null) coreAbstractionsExpressionsExpressionItemProvider.dispose();
		if (coreAbstractionsExpressionsOpaqueExpressionItemProvider != null) coreAbstractionsExpressionsOpaqueExpressionItemProvider.dispose();
		if (coreAbstractionsGeneralizationsGeneralizationItemProvider != null) coreAbstractionsGeneralizationsGeneralizationItemProvider.dispose();
		if (coreAbstractionsInstancesInstanceSpecificationItemProvider != null) coreAbstractionsInstancesInstanceSpecificationItemProvider.dispose();
		if (coreAbstractionsInstancesInstanceValueItemProvider != null) coreAbstractionsInstancesInstanceValueItemProvider.dispose();
		if (coreAbstractionsInstancesSlotItemProvider != null) coreAbstractionsInstancesSlotItemProvider.dispose();
		if (coreAbstractionsLiteralsLiteralBooleanItemProvider != null) coreAbstractionsLiteralsLiteralBooleanItemProvider.dispose();
		if (coreAbstractionsLiteralsLiteralIntegerItemProvider != null) coreAbstractionsLiteralsLiteralIntegerItemProvider.dispose();
		if (coreAbstractionsLiteralsLiteralNullItemProvider != null) coreAbstractionsLiteralsLiteralNullItemProvider.dispose();
		if (coreAbstractionsLiteralsLiteralStringItemProvider != null) coreAbstractionsLiteralsLiteralStringItemProvider.dispose();
		if (coreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider != null) coreAbstractionsLiteralsLiteralUnlimitedNaturalItemProvider.dispose();
		if (evaluationEvaluationItemProvider != null) evaluationEvaluationItemProvider.dispose();
		if (forkItemProvider != null) forkItemProvider.dispose();
		if (historyItemProvider != null) historyItemProvider.dispose();
		if (joinItemProvider != null) joinItemProvider.dispose();
		if (pidValueItemProvider != null) pidValueItemProvider.dispose();
		if (returnItemProvider != null) returnItemProvider.dispose();
		if (sdlAgentItemProvider != null) sdlAgentItemProvider.dispose();
		if (sdlAgentInstanceItemProvider != null) sdlAgentInstanceItemProvider.dispose();
		if (sdlAgentInstanceSetItemProvider != null) sdlAgentInstanceSetItemProvider.dispose();
		if (sdlAgentTypeItemProvider != null) sdlAgentTypeItemProvider.dispose();
		if (sdlAssignmentItemProvider != null) sdlAssignmentItemProvider.dispose();
		if (sdlBehaviorItemProvider != null) sdlBehaviorItemProvider.dispose();
		if (sdlChannelItemProvider != null) sdlChannelItemProvider.dispose();
		if (sdlChannelEndItemProvider != null) sdlChannelEndItemProvider.dispose();
		if (sdlChannelPathItemProvider != null) sdlChannelPathItemProvider.dispose();
		if (sdlChoiceItemProvider != null) sdlChoiceItemProvider.dispose();
		if (sdlClosedRangeItemProvider != null) sdlClosedRangeItemProvider.dispose();
		if (sdlCompositeStateItemProvider != null) sdlCompositeStateItemProvider.dispose();
		if (sdlCompositeStateInstanceItemProvider != null) sdlCompositeStateInstanceItemProvider.dispose();
		if (sdlCreateItemProvider != null) sdlCreateItemProvider.dispose();
		if (sdlDataTypeItemProvider != null) sdlDataTypeItemProvider.dispose();
		if (sdlElseItemProvider != null) sdlElseItemProvider.dispose();
		if (sdlGateItemProvider != null) sdlGateItemProvider.dispose();
		if (sdlGeneralValueItemProvider != null) sdlGeneralValueItemProvider.dispose();
		if (sdlImidiateItemProvider != null) sdlImidiateItemProvider.dispose();
		if (sdlInputItemProvider != null) sdlInputItemProvider.dispose();
		if (sdlInputInstanceItemProvider != null) sdlInputInstanceItemProvider.dispose();
		if (sdlLiteralItemProvider != null) sdlLiteralItemProvider.dispose();
		if (sdlLiteralEvaluationItemProvider != null) sdlLiteralEvaluationItemProvider.dispose();
		if (sdlLiteralExpressionItemProvider != null) sdlLiteralExpressionItemProvider.dispose();
		if (sdlNowExpressionItemProvider != null) sdlNowExpressionItemProvider.dispose();
		if (sdlOpenRangeItemProvider != null) sdlOpenRangeItemProvider.dispose();
		if (sdlOperationItemProvider != null) sdlOperationItemProvider.dispose();
		if (sdlOperationCallItemProvider != null) sdlOperationCallItemProvider.dispose();
		if (sdlOperationEvaluationItemProvider != null) sdlOperationEvaluationItemProvider.dispose();
		if (sdlOutputItemProvider != null) sdlOutputItemProvider.dispose();
		if (sdlPackageItemProvider != null) sdlPackageItemProvider.dispose();
		if (sdlParameterItemProvider != null) sdlParameterItemProvider.dispose();
		if (sdlPidExpressionItemProvider != null) sdlPidExpressionItemProvider.dispose();
		if (sdlPidExpressionEvaluationItemProvider != null) sdlPidExpressionEvaluationItemProvider.dispose();
		if (sdlProcedureItemProvider != null) sdlProcedureItemProvider.dispose();
		if (sdlProcedureCallItemProvider != null) sdlProcedureCallItemProvider.dispose();
		if (sdlProcedureFrameItemProvider != null) sdlProcedureFrameItemProvider.dispose();
		if (sdlRangeItemProvider != null) sdlRangeItemProvider.dispose();
		if (sdlRangeConditionItemProvider != null) sdlRangeConditionItemProvider.dispose();
		if (sdlResetItemProvider != null) sdlResetItemProvider.dispose();
		if (sdlSetItemProvider != null) sdlSetItemProvider.dispose();
		if (sdlSignalItemProvider != null) sdlSignalItemProvider.dispose();
		if (sdlSignalInstanceItemProvider != null) sdlSignalInstanceItemProvider.dispose();
		if (sdlSpecificationItemProvider != null) sdlSpecificationItemProvider.dispose();
		if (sdlSplitItemProvider != null) sdlSplitItemProvider.dispose();
		if (sdlStateItemProvider != null) sdlStateItemProvider.dispose();
		if (sdlStateAutomatonItemProvider != null) sdlStateAutomatonItemProvider.dispose();
		if (sdlStateInstanceItemProvider != null) sdlStateInstanceItemProvider.dispose();
		if (sdlStateNodeItemProvider != null) sdlStateNodeItemProvider.dispose();
		if (sdlStatePartitionItemProvider != null) sdlStatePartitionItemProvider.dispose();
		if (sdlStatePartitionInstanceItemProvider != null) sdlStatePartitionInstanceItemProvider.dispose();
		if (sdlStateTypeItemProvider != null) sdlStateTypeItemProvider.dispose();
		if (sdlTimerItemProvider != null) sdlTimerItemProvider.dispose();
		if (sdlTimerActiveExpressionItemProvider != null) sdlTimerActiveExpressionItemProvider.dispose();
		if (sdlTransitionItemProvider != null) sdlTransitionItemProvider.dispose();
		if (sdlTriggerItemProvider != null) sdlTriggerItemProvider.dispose();
		if (sdlVariableItemProvider != null) sdlVariableItemProvider.dispose();
		if (sdlVariableAccessItemProvider != null) sdlVariableAccessItemProvider.dispose();
		if (sdlVariableAccessEvaluationItemProvider != null) sdlVariableAccessEvaluationItemProvider.dispose();
		if (sdlVariableSlotItemProvider != null) sdlVariableSlotItemProvider.dispose();
		if (startItemProvider != null) startItemProvider.dispose();
		if (stopItemProvider != null) stopItemProvider.dispose();
	}

}
