<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../stdlib">
    <model href="../stdlib.xmi#/"/>
  </imports>
  <module name="queue">
    <classifiers xsi:type="dbl:Class" name="DoubleEndedQueue">
      <superInterfaces href="../stdlib.xmi#//@module/@classifiers.8"/>
      <attributes name="actualDeque">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@module/@classifiers.8"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.9"/>
          </classifierType>
        </initialValue>
      </attributes>
      <attributes xsi:type="dbl:ControlVariable" name="size">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <methods name="offerFirst">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:FunctionCall">
          <callIdExpr>
            <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.8/@methods.0"/>
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@methods.0/@parameters.0"/>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@module/@classifiers.0/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.1"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </value>
        </statements>
        <parameters name="object">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
          </classifierType>
        </parameters>
      </methods>
      <methods name="pollFirst">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
        </classifierType>
        <statements xsi:type="dbl:Variable" name="object">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
          </classifierType>
          <initialValue xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.8/@methods.1"/>
            <callPart/>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:NotEqual">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@methods.1/@statements.0"/>
            <op2 xsi:type="dbl:NullLiteral"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@module/@classifiers.0/@attributes.1"/>
              </variable>
              <value xsi:type="dbl:Minus">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.1"/>
                <op2 xsi:type="dbl:IntLiteral" value="1"/>
              </value>
            </statements>
            <statements xsi:type="dbl:Return">
              <value xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@methods.1/@statements.0"/>
            </statements>
          </trueCase>
          <falseCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Return">
              <value xsi:type="dbl:NullLiteral"/>
            </statements>
          </falseCase>
        </statements>
      </methods>
      <methods name="peekFirst">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
        </classifierType>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.8/@methods.2"/>
            <callPart/>
          </value>
        </statements>
      </methods>
      <methods name="offerLast">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:FunctionCall">
          <callIdExpr>
            <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.8/@methods.3"/>
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@methods.3/@parameters.0"/>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@module/@classifiers.0/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.1"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </value>
        </statements>
        <parameters name="object">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
          </classifierType>
        </parameters>
      </methods>
      <methods name="pollLast">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
        </classifierType>
        <statements xsi:type="dbl:Variable" name="object">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
          </classifierType>
          <initialValue xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.8/@methods.4"/>
            <callPart/>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:NotEqual">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@methods.4/@statements.0"/>
            <op2 xsi:type="dbl:NullLiteral"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@module/@classifiers.0/@attributes.1"/>
              </variable>
              <value xsi:type="dbl:Minus">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.1"/>
                <op2 xsi:type="dbl:IntLiteral" value="1"/>
              </value>
            </statements>
            <statements xsi:type="dbl:Return">
              <value xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@methods.4/@statements.0"/>
            </statements>
          </trueCase>
          <falseCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Return">
              <value xsi:type="dbl:NullLiteral"/>
            </statements>
          </falseCase>
        </statements>
      </methods>
      <methods name="peekLast">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@module/@classifiers.1"/>
        </classifierType>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.8/@methods.2"/>
            <callPart/>
          </value>
        </statements>
      </methods>
    </classifiers>
  </module>
</dbl:Model>
