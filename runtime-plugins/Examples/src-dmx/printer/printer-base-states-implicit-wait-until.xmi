<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="queue">
    <model href="queue.xmi#/"/>
  </imports>
  <imports file="../stdlib">
    <model href="../stdlib.xmi#/"/>
  </imports>
  <module name="timer">
    <classifiers xsi:type="dbl:ActiveClass" name="Printer">
      <attributes name="jobs">
        <classifierType>
          <referencedElement href="queue.xmi#//@module/@classifiers.0"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="queue.xmi#//@module/@classifiers.0"/>
          </classifierType>
        </initialValue>
      </attributes>
      <attributes xsi:type="dbl:ControlVariable" name="activeJobCancelled">
        <primitiveType xsi:type="dbl:BoolType"/>
        <initialValue xsi:type="dbl:FalseLiteral"/>
      </attributes>
      <attributes name="pagesPrinted">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral"/>
      </attributes>
      <attributes name="printTimePerPage">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="4"/>
      </attributes>
      <methods name="cancelActiveJob">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@module/@classifiers.0/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:TrueLiteral"/>
        </statements>
      </methods>
      <actionsBlock>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:TrueLiteral"/>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:WaitUntil">
              <condition xsi:type="dbl:Greater">
                <op1 xsi:type="dbl:IdExpr">
                  <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
                  <referencedElement href="queue.xmi#//@module/@classifiers.0/@attributes.1"/>
                </op1>
                <op2 xsi:type="dbl:IntLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="dbl:Variable" name="job">
              <classifierType referencedElement="//@module/@classifiers.2"/>
              <initialValue xsi:type="dbl:Cast">
                <classifierType referencedElement="//@module/@classifiers.2"/>
                <op xsi:type="dbl:IdExpr">
                  <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
                  <referencedElement href="queue.xmi#//@module/@classifiers.0/@methods.1"/>
                  <callPart/>
                </op>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Variable" name="jobTimer">
              <classifierType referencedElement="//@module/@classifiers.1"/>
              <initialValue xsi:type="dbl:CreateObject">
                <classifierType referencedElement="//@module/@classifiers.1">
                  <callPart>
                    <callArguments xsi:type="dbl:Mul">
                      <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.2/@attributes.0">
                        <parentIdExpr referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.1"/>
                      </op1>
                      <op2 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.3"/>
                    </callArguments>
                  </callPart>
                </classifierType>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:ActivateObject">
              <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.2"/>
            </statements>
            <statements xsi:type="dbl:WhileStatement">
              <condition xsi:type="dbl:Not">
                <op xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.1"/>
              </condition>
              <body xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:WaitUntil">
                  <condition xsi:type="dbl:Or">
                    <op1 xsi:type="dbl:Or">
                      <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.1"/>
                      <op2 xsi:type="dbl:Greater">
                        <op1 xsi:type="dbl:IdExpr">
                          <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
                          <referencedElement href="queue.xmi#//@module/@classifiers.0/@attributes.1"/>
                        </op1>
                        <op2 xsi:type="dbl:IntLiteral" value="10"/>
                      </op2>
                    </op1>
                    <op2 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.1/@attributes.1">
                      <parentIdExpr referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.2"/>
                    </op2>
                  </condition>
                </statements>
                <statements xsi:type="dbl:IfStatement">
                  <condition xsi:type="dbl:Greater">
                    <op1 xsi:type="dbl:IdExpr">
                      <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
                      <referencedElement href="queue.xmi#//@module/@classifiers.0/@attributes.1"/>
                    </op1>
                    <op2 xsi:type="dbl:IntLiteral" value="10"/>
                  </condition>
                  <trueCase xsi:type="dbl:LocalScopeStatement">
                    <statements xsi:type="dbl:WhileStatement">
                      <condition xsi:type="dbl:Greater">
                        <op1 xsi:type="dbl:IdExpr">
                          <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
                          <referencedElement href="queue.xmi#//@module/@classifiers.0/@attributes.1"/>
                        </op1>
                        <op2 xsi:type="dbl:IntLiteral" value="5"/>
                      </condition>
                      <body xsi:type="dbl:LocalScopeStatement">
                        <statements xsi:type="dbl:Variable" name="lastJob">
                          <classifierType referencedElement="//@module/@classifiers.2"/>
                          <initialValue xsi:type="dbl:Cast">
                            <classifierType referencedElement="//@module/@classifiers.2"/>
                            <op xsi:type="dbl:IdExpr">
                              <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0"/>
                              <referencedElement href="queue.xmi#//@module/@classifiers.0/@methods.4"/>
                              <callPart/>
                            </op>
                          </initialValue>
                        </statements>
                        <statements xsi:type="dbl:Assignment">
                          <variable>
                            <idExpr referencedElement="//@module/@classifiers.2/@attributes.3">
                              <parentIdExpr referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.4/@body/@statements.1/@trueCase/@statements.0/@body/@statements.0"/>
                            </idExpr>
                          </variable>
                          <value xsi:type="dbl:TrueLiteral"/>
                        </statements>
                      </body>
                    </statements>
                  </trueCase>
                </statements>
                <statements xsi:type="dbl:IfStatement">
                  <condition xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.1/@attributes.1">
                    <parentIdExpr referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.2"/>
                  </condition>
                  <trueCase xsi:type="dbl:LocalScopeStatement">
                    <statements xsi:type="dbl:Assignment">
                      <variable>
                        <idExpr referencedElement="//@module/@classifiers.2/@attributes.2">
                          <parentIdExpr referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.1"/>
                        </idExpr>
                      </variable>
                      <value xsi:type="dbl:TrueLiteral"/>
                    </statements>
                    <statements xsi:type="dbl:Assignment">
                      <variable>
                        <idExpr referencedElement="//@module/@classifiers.0/@attributes.2"/>
                      </variable>
                      <value xsi:type="dbl:Plus">
                        <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.2"/>
                        <op2 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.2/@attributes.0">
                          <parentIdExpr referencedElement="//@module/@classifiers.0/@actionsBlock/@statements.0/@body/@statements.1"/>
                        </op2>
                      </value>
                    </statements>
                  </trueCase>
                </statements>
              </body>
            </statements>
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@module/@classifiers.0/@attributes.1"/>
              </variable>
              <value xsi:type="dbl:FalseLiteral"/>
            </statements>
          </body>
        </statements>
      </actionsBlock>
    </classifiers>
    <classifiers xsi:type="dbl:ActiveClass" name="Timer">
      <attributes name="duration">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes xsi:type="dbl:ControlVariable" name="expired">
        <primitiveType xsi:type="dbl:BoolType"/>
        <initialValue xsi:type="dbl:FalseLiteral"/>
      </attributes>
      <constructors>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@module/@classifiers.1/@constructors.0/@parameters.0">
              <parentIdExpr>
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </parentIdExpr>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.1/@constructors.0/@parameters.0"/>
        </statements>
        <parameters name="duration">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </constructors>
      <actionsBlock>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.1/@attributes.0"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@module/@classifiers.1/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:TrueLiteral"/>
        </statements>
      </actionsBlock>
    </classifiers>
    <classifiers xsi:type="dbl:ActiveClass" name="PrintJob">
      <attributes name="pages">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="4"/>
      </attributes>
      <attributes name="printer">
        <classifierType referencedElement="//@module/@classifiers.0"/>
      </attributes>
      <attributes xsi:type="dbl:ControlVariable" name="printed">
        <primitiveType xsi:type="dbl:BoolType"/>
        <initialValue xsi:type="dbl:FalseLiteral"/>
      </attributes>
      <attributes xsi:type="dbl:ControlVariable" name="cancelled">
        <primitiveType xsi:type="dbl:BoolType"/>
        <initialValue xsi:type="dbl:FalseLiteral"/>
      </attributes>
      <actionsBlock>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:Not">
            <op xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.2/@attributes.2"/>
          </condition>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:FunctionCall">
              <callIdExpr>
                <parentIdExpr referencedElement="//@module/@classifiers.0/@attributes.0">
                  <parentIdExpr referencedElement="//@module/@classifiers.2/@attributes.1"/>
                </parentIdExpr>
                <referencedElement href="queue.xmi#//@module/@classifiers.0/@methods.0"/>
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr">
                    <predefinedId xsi:type="dbl:MeLiteral"/>
                  </callArguments>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:WaitUntil">
              <condition xsi:type="dbl:Or">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.2/@attributes.2"/>
                <op2 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.2/@attributes.3"/>
              </condition>
            </statements>
            <statements xsi:type="dbl:IfStatement">
              <condition xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.2/@attributes.3"/>
              <trueCase xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Advance">
                  <time xsi:type="dbl:IntLiteral" value="10"/>
                </statements>
              </trueCase>
            </statements>
          </body>
        </statements>
      </actionsBlock>
    </classifiers>
    <classifiers xsi:type="dbl:ActiveClass" name="PrintJobGenerator">
      <attributes name="printer">
        <classifierType referencedElement="//@module/@classifiers.0"/>
      </attributes>
      <actionsBlock>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:TrueLiteral"/>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Advance">
              <time xsi:type="dbl:IntLiteral" value="3"/>
            </statements>
            <statements xsi:type="dbl:Variable" name="job">
              <classifierType referencedElement="//@module/@classifiers.2"/>
              <initialValue xsi:type="dbl:CreateObject">
                <classifierType referencedElement="//@module/@classifiers.2"/>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@module/@classifiers.2/@attributes.1">
                  <parentIdExpr referencedElement="//@module/@classifiers.3/@actionsBlock/@statements.0/@body/@statements.1"/>
                </idExpr>
              </variable>
              <value xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.3/@attributes.0"/>
            </statements>
            <statements xsi:type="dbl:ActivateObject">
              <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.3/@actionsBlock/@statements.0/@body/@statements.1"/>
            </statements>
          </body>
        </statements>
      </actionsBlock>
    </classifiers>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="printer">
        <classifierType referencedElement="//@module/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@module/@classifiers.0"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="jobGenerator">
        <classifierType referencedElement="//@module/@classifiers.3"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.3"/>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.2"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="oneDay">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:Mul">
          <op1 xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IntLiteral" value="60"/>
            <op2 xsi:type="dbl:IntLiteral" value="60"/>
          </op1>
          <op2 xsi:type="dbl:IntLiteral" value="24"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Advance">
        <time xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.4"/>
      </statements>
      <statements xsi:type="dbl:FunctionCall">
        <callIdExpr>
          <parentIdExpr>
            <referencedElement href="../stdlib.xmi#//@module/@classifiers.3"/>
          </parentIdExpr>
          <referencedElement href="../stdlib.xmi#//@module/@classifiers.3/@methods.1"/>
          <callPart>
            <callArguments xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:StringLiteral" value="Pages printed: "/>
              <op2 xsi:type="dbl:IdExpr" referencedElement="//@module/@classifiers.0/@attributes.2">
                <parentIdExpr referencedElement="//@module/@functions.0/@statements.0"/>
              </op2>
            </callArguments>
          </callPart>
        </callIdExpr>
      </statements>
    </functions>
  </module>
</dbl:Model>
