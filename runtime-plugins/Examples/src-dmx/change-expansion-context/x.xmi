<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../dbl">
    <model href="../dbl.xmi#/"/>
  </imports>
  <modules name="x">
    <classifiers xsi:type="dbl:Clazz" name="StateMachine"/>
    <extensionDefs name="FrontExec">
      <extendedConcept xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.30"/>
      <textualSyntaxDef startRule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0">
        <rules name="FX">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="fx"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="stm">
              <propertyType xsi:type="dbl:CompositePropertyType">
                <type xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.30"/>
              </propertyType>
            </sequence>
          </rhs>
        </rules>
      </textualSyntaxDef>
      <mappingDef>
        <statements xsi:type="dbl:Variable" name="fxStm">
          <classifierType>
            <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.30"/>
          </classifierType>
          <initialValue xsi:type="dbl:Cast">
            <classifierType>
              <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.30"/>
            </classifierType>
            <op xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0/@rhs/@sequence.1"/>
              <referencedElement href="../ecore.xmi#//@modules.0/@classifiers.11/@methods.1"/>
              <callPart/>
            </op>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:Variable" name="ls">
          <classifierType>
            <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.43"/>
          </classifierType>
          <initialValue xsi:type="dbl:Cast">
            <classifierType>
              <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.43"/>
            </classifierType>
            <op xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.0"/>
              <referencedElement href="../ecore.xmi#//@modules.0/@classifiers.11/@methods.1"/>
              <callPart/>
            </op>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:InstanceOf">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0/@rhs/@sequence.1"/>
            <op2 xsi:type="dbl:TypeAccess">
              <idExpr>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.31"/>
              </idExpr>
            </op2>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="a">
              <classifierType>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.31"/>
              </classifierType>
              <initialValue xsi:type="dbl:Cast">
                <classifierType>
                  <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.31"/>
                </classifierType>
                <op xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0/@rhs/@sequence.1"/>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:SetGenContextStatement">
              <context xsi:type="dbl:IdExpr">
                <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@trueCase/@statements.0"/>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.31/@attributes.1"/>
              </context>
            </statements>
            <statements xsi:type="dbl:MappingStatement">
              <parts xsi:type="dbl:FixedMappingPart" code="7"/>
            </statements>
            <statements xsi:type="dbl:Variable" name="name">
              <primitiveType xsi:type="dbl:StringType"/>
            </statements>
            <statements xsi:type="dbl:Variable" name="mSnipped">
              <classifierType>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.3"/>
              </classifierType>
              <initialValue xsi:type="dbl:ParseExpr">
                <astPart xsi:type="dbl:Module" name="_">
                  <classifiers xsi:type="dbl:Clazz">
                    <methods name="bla">
                      <primitiveType xsi:type="dbl:VoidType"/>
                    </methods>
                    <superClasses clazz="//@modules.0/@classifiers.0"/>
                    <expandExpr>
                      <expr xsi:type="dbl:Plus">
                        <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@trueCase/@statements.3"/>
                        <op2 xsi:type="dbl:StringLiteral" value="_StateMachine"/>
                      </expr>
                    </expandExpr>
                  </classifiers>
                </astPart>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Variable" name="aneu">
              <classifierType>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.31"/>
              </classifierType>
              <initialValue xsi:type="dbl:ParseExpr">
                <astPart xsi:type="dbl:Assignment">
                  <variable>
                    <idExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@trueCase/@statements.0"/>
                  </variable>
                  <value xsi:type="dbl:Plus">
                    <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@trueCase/@statements.0"/>
                    <op2 xsi:type="dbl:IntLiteral" value="1"/>
                  </value>
                </astPart>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Variable" name="m">
              <classifierType>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.3"/>
              </classifierType>
              <initialValue xsi:type="dbl:ParseExpr">
                <astPart xsi:type="dbl:Module" name="_">
                  <classifiers xsi:type="dbl:Clazz" name="A_StateMachine">
                    <superClasses clazz="//@modules.0/@classifiers.0"/>
                  </classifiers>
                </astPart>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Variable" name="lSnipped">
              <classifierType>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.44"/>
              </classifierType>
              <initialValue xsi:type="dbl:ParseExpr">
                <astPart xsi:type="dbl:LocalScopeStatement">
                  <statements xsi:type="dbl:Variable" name="i">
                    <primitiveType xsi:type="dbl:IntType"/>
                  </statements>
                  <statements xsi:type="dbl:Assignment">
                    <variable>
                      <idExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@trueCase/@statements.7/@initialValue/@astPart/@statements.0"/>
                    </variable>
                    <value xsi:type="dbl:Plus">
                      <op1 xsi:type="dbl:Mul">
                        <op1 xsi:type="dbl:IntLiteral" value="10"/>
                        <op2 xsi:type="dbl:IntLiteral" value="7"/>
                      </op1>
                      <op2 xsi:type="dbl:IdExpr">
                        <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@trueCase/@statements.0"/>
                        <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.31/@attributes.1"/>
                      </op2>
                    </value>
                  </statements>
                </astPart>
              </initialValue>
            </statements>
          </trueCase>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0/@rhs/@sequence.1"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=";"/>
        </statements>
        <statements xsi:type="dbl:SetGenContextStatement">
          <context xsi:type="dbl:IdExpr">
            <parentIdExpr>
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1"/>
              <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.43/@attributes.0"/>
            </parentIdExpr>
            <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.5"/>
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral"/>
            </callPart>
          </context>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0/@rhs/@sequence.1"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=";"/>
        </statements>
        <statements xsi:type="dbl:SetGenContextStatement">
          <context xsi:type="dbl:IdExpr">
            <parentIdExpr>
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1"/>
              <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.43/@attributes.0"/>
            </parentIdExpr>
            <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.5"/>
            <callPart>
              <callArguments xsi:type="dbl:Minus">
                <op1 xsi:type="dbl:IdExpr">
                  <parentIdExpr>
                    <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1"/>
                    <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.43/@attributes.0"/>
                  </parentIdExpr>
                  <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.4"/>
                  <callPart/>
                </op1>
                <op2 xsi:type="dbl:IntLiteral" value="1"/>
              </callArguments>
            </callPart>
          </context>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="i=9;"/>
        </statements>
      </mappingDef>
    </extensionDefs>
  </modules>
</dbl:Model>
