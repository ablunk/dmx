<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../stdlib">
    <model href="../stdlib.xmi#/"/>
  </imports>
  <modules name="SmlPattern">
    <classifiers xsi:type="dbl:Clazz" name="Event">
      <attributes name="name">
        <primitiveType xsi:type="dbl:StringType"/>
      </attributes>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="State">
      <attributes name="name">
        <primitiveType xsi:type="dbl:StringType"/>
      </attributes>
      <methods name="handleEvent">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <parameters name="ev">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </parameters>
      </methods>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="A_State">
      <attributes name="ctx">
        <classifierType referencedElement="//@modules.0/@classifiers.5"/>
      </attributes>
      <methods name="handleEvent">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:Equal">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.2/@methods.0/@parameters.0"/>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="Start"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:ProcedureCall">
              <callIdExpr referencedElement="//@modules.0/@classifiers.5/@methods.0">
                <parentIdExpr referencedElement="//@modules.0/@classifiers.2/@attributes.0"/>
                <callPart/>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:Return">
              <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.5/@attributes.1">
                <parentIdExpr referencedElement="//@modules.0/@classifiers.2/@attributes.0"/>
              </value>
            </statements>
          </trueCase>
          <falseCase xsi:type="dbl:IfStatement">
            <condition xsi:type="dbl:Equal">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0">
                <parentIdExpr referencedElement="//@modules.0/@classifiers.2/@methods.0/@parameters.0"/>
              </op1>
              <op2 xsi:type="dbl:StringLiteral" value="Resume"/>
            </condition>
            <trueCase xsi:type="dbl:LocalScopeStatement">
              <statements xsi:type="dbl:Return">
                <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.5/@attributes.1">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.2/@attributes.0"/>
                </value>
              </statements>
            </trueCase>
          </falseCase>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
        <parameters name="ev">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </parameters>
      </methods>
      <superClasses clazz="//@modules.0/@classifiers.1"/>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="B_State">
      <attributes name="ctx">
        <classifierType referencedElement="//@modules.0/@classifiers.5"/>
      </attributes>
      <methods name="handleEvent">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:Equal">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.3/@methods.0/@parameters.0"/>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="Tick"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:IfStatement">
              <condition xsi:type="dbl:Less">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.5/@attributes.2">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.3/@attributes.0"/>
                </op1>
                <op2 xsi:type="dbl:IntLiteral" value="10"/>
              </condition>
              <trueCase xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Assignment">
                  <variable>
                    <idExpr referencedElement="//@modules.0/@classifiers.5/@attributes.2">
                      <parentIdExpr referencedElement="//@modules.0/@classifiers.3/@attributes.0"/>
                    </idExpr>
                  </variable>
                  <value xsi:type="dbl:Plus">
                    <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.5/@attributes.2">
                      <parentIdExpr referencedElement="//@modules.0/@classifiers.3/@attributes.0"/>
                    </op1>
                    <op2 xsi:type="dbl:IntLiteral" value="1"/>
                  </value>
                </statements>
                <statements xsi:type="dbl:Return">
                  <value xsi:type="dbl:IdExpr">
                    <predefinedId xsi:type="dbl:MeLiteral"/>
                  </value>
                </statements>
              </trueCase>
              <falseCase xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Return">
                  <value xsi:type="dbl:NullLiteral"/>
                </statements>
              </falseCase>
            </statements>
          </trueCase>
          <falseCase xsi:type="dbl:IfStatement">
            <condition xsi:type="dbl:Equal">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0">
                <parentIdExpr referencedElement="//@modules.0/@classifiers.3/@methods.0/@parameters.0"/>
              </op1>
              <op2 xsi:type="dbl:StringLiteral" value="Pause"/>
            </condition>
            <trueCase xsi:type="dbl:LocalScopeStatement">
              <statements xsi:type="dbl:Return">
                <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.5/@attributes.0">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.3/@attributes.0"/>
                </value>
              </statements>
            </trueCase>
          </falseCase>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
        <parameters name="ev">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </parameters>
      </methods>
      <superClasses clazz="//@modules.0/@classifiers.1"/>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="StateMachine">
      <attributes name="eventPool">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
      </attributes>
      <attributes name="currentState">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
      </attributes>
      <actionsBlock>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:TrueLiteral"/>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:WhileStatement">
              <condition xsi:type="dbl:Greater">
                <op1 xsi:type="dbl:IdExpr">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.4/@attributes.0"/>
                  <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.4"/>
                  <callPart/>
                </op1>
                <op2 xsi:type="dbl:IntLiteral"/>
              </condition>
              <body xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Variable" name="ev">
                  <classifierType referencedElement="//@modules.0/@classifiers.0"/>
                  <initialValue xsi:type="dbl:Cast">
                    <classifierType referencedElement="//@modules.0/@classifiers.0"/>
                    <op xsi:type="dbl:IdExpr">
                      <parentIdExpr referencedElement="//@modules.0/@classifiers.4/@attributes.0"/>
                      <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.5"/>
                      <callPart>
                        <callArguments xsi:type="dbl:IntLiteral"/>
                      </callPart>
                    </op>
                  </initialValue>
                </statements>
                <statements xsi:type="dbl:Variable" name="nextState">
                  <classifierType referencedElement="//@modules.0/@classifiers.1"/>
                  <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0">
                    <parentIdExpr referencedElement="//@modules.0/@classifiers.4/@attributes.1"/>
                    <callPart>
                      <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.4/@actionsBlock/@statements.0/@body/@statements.0/@body/@statements.0"/>
                    </callPart>
                  </initialValue>
                </statements>
                <statements xsi:type="dbl:Assignment">
                  <variable>
                    <idExpr referencedElement="//@modules.0/@classifiers.4/@attributes.1"/>
                  </variable>
                  <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.4/@actionsBlock/@statements.0/@body/@statements.0/@body/@statements.1"/>
                </statements>
              </body>
            </statements>
            <statements xsi:type="dbl:Wait"/>
          </body>
        </statements>
      </actionsBlock>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="Consumer" active="true">
      <attributes name="a_state">
        <classifierType referencedElement="//@modules.0/@classifiers.2"/>
      </attributes>
      <attributes name="b_state">
        <classifierType referencedElement="//@modules.0/@classifiers.3"/>
      </attributes>
      <attributes name="i">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <methods name="doEffect_fromState_a_onEvent_Start">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.5/@attributes.2"/>
          </variable>
          <value xsi:type="dbl:IntLiteral"/>
        </statements>
      </methods>
      <superClasses clazz="//@modules.0/@classifiers.4"/>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.5/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.2"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.2/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.5/@attributes.0"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.5/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.3"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.3/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.5/@attributes.1"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
      </initialBlock>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="P_State">
      <attributes name="ctx">
        <classifierType referencedElement="//@modules.0/@classifiers.7"/>
      </attributes>
      <methods name="handleEvent">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:Equal">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.6/@methods.0/@parameters.0"/>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="TimeEvent"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="eev">
              <classifierType referencedElement="//@modules.0/@classifiers.0"/>
              <initialValue xsi:type="dbl:CreateObject">
                <classifierType referencedElement="//@modules.0/@classifiers.0"/>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.0">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.0"/>
                </idExpr>
              </variable>
              <value xsi:type="dbl:StringLiteral" value="Tick"/>
            </statements>
            <statements xsi:type="dbl:Variable" name="c">
              <classifierType referencedElement="//@modules.0/@classifiers.5"/>
              <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.7/@attributes.0">
                <parentIdExpr referencedElement="//@modules.0/@classifiers.6/@attributes.0"/>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:ProcedureCall">
              <callIdExpr>
                <parentIdExpr referencedElement="//@modules.0/@classifiers.4/@attributes.0">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.2"/>
                </parentIdExpr>
                <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.0"/>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:ActivateObject">
              <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.2"/>
            </statements>
            <statements xsi:type="dbl:Variable" name="nextEv">
              <classifierType referencedElement="//@modules.0/@classifiers.8"/>
              <initialValue xsi:type="dbl:CreateObject">
                <classifierType referencedElement="//@modules.0/@classifiers.8"/>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@modules.0/@classifiers.8/@attributes.0">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.5"/>
                </idExpr>
              </variable>
              <value xsi:type="dbl:IntLiteral" value="2"/>
            </statements>
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@modules.0/@classifiers.8/@attributes.1">
                  <parentIdExpr referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.5"/>
                </idExpr>
              </variable>
              <value xsi:type="dbl:IdExpr">
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </value>
            </statements>
            <statements xsi:type="dbl:ActivateObject">
              <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.6/@methods.0/@statements.0/@trueCase/@statements.5"/>
            </statements>
          </trueCase>
        </statements>
        <parameters name="ev">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </parameters>
      </methods>
      <superClasses clazz="//@modules.0/@classifiers.1"/>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="Producer" active="true">
      <attributes name="c">
        <classifierType referencedElement="//@modules.0/@classifiers.5"/>
      </attributes>
      <attributes name="p_state">
        <classifierType referencedElement="//@modules.0/@classifiers.6"/>
      </attributes>
      <superClasses clazz="//@modules.0/@classifiers.4"/>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.7/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.6"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.6/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.7/@attributes.1"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Variable" name="ev">
          <classifierType referencedElement="//@modules.0/@classifiers.8"/>
          <initialValue xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.8"/>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.8/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.7/@initialBlock/@statements.2"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IntLiteral" value="2"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.8/@attributes.1">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.7/@initialBlock/@statements.2"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
        <statements xsi:type="dbl:ActivateObject">
          <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.7/@initialBlock/@statements.2"/>
        </statements>
      </initialBlock>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="TimeEvent" active="true">
      <attributes name="delay">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="1"/>
      </attributes>
      <attributes name="triggeringMachine">
        <classifierType referencedElement="//@modules.0/@classifiers.4"/>
      </attributes>
      <superClasses clazz="//@modules.0/@classifiers.0"/>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:StringLiteral" value="TimeEvent"/>
        </statements>
      </initialBlock>
      <actionsBlock>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.8/@attributes.0"/>
        </statements>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr>
            <parentIdExpr referencedElement="//@modules.0/@classifiers.4/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.8/@attributes.1"/>
            </parentIdExpr>
            <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
            <callPart>
              <callArguments xsi:type="dbl:IdExpr">
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </callArguments>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:ActivateObject">
          <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.8/@attributes.1"/>
        </statements>
      </actionsBlock>
    </classifiers>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="c">
        <classifierType referencedElement="//@modules.0/@classifiers.5"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.5"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="p">
        <classifierType referencedElement="//@modules.0/@classifiers.7"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.7"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@classifiers.7/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.1"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.1"/>
      </statements>
      <statements xsi:type="dbl:WaitUntil">
        <condition xsi:type="dbl:Equal">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.4/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          </op1>
          <op2 xsi:type="dbl:NullLiteral"/>
        </condition>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
