#import "conveyor"

module bestPick {

// this class gets generated from the extension syntax description
class Sensor {
	double atPos;
	double fromPos;
	double toPos;
	
	// these are runtime attributes, which should be part of the extension definition as well
	Object currentLoad;
}

// this class gets generated from the extension syntax description
class Conveyor {
	double length;
	double speedd;
	list(Conveyor) fromConv;
	list(Conveyor) toConv;
	list(Sensor) sensors;
}

void main() {
	double beltLength = 110.0 ft;
	double accumLength = 30.0 ft;

	system {
		conveyorType LDock {
			length = 20 ft
			speed = 1.0 fps
			from loop
			behavior {
				Conveyor loop; // this variable is actually inferred form the conveyorType, it is automatically visible here
					
				Sensor ldN = loop.sensors.first;
				while (true) {
					wait until ldN.currentLoad != null;
				}
			}
		}
		conveyor belt {
			length = beltLength
			speed = 1.0 ft / 1.0 s
			to accum
			sensor beltEnd at beltLength
		}
		conveyor accum {
			length = accumLength
			speed = 1.0 fps
			from belt
			to loop
			kind = accumulating
			sensor accumEnd at accumLength
			sensor accumFull at 15.0 ft
		}
		conveyor loop {
			length = 454.2477 ft
			speed = 2.0 fps
			from accum
			to dock1 dock2 dock3 dock4
			kind = circular
			sensor ld1 at 147.124 ft
			sensor ld2 at 187.124 ft
			sensor ld2 at 227.124 ft
			sensor ld3 at 267.124 ft
		}
		// the class LoadingDock is augmented with attributes length, speed, from
		// "loop" should be an attribute of LoadingDock !
		// how should type and instances be distinguised?
		conveyor dock1 ofType LDock {
		}
		conveyor dock2 ofType LDock {
		}
		conveyor dock3 ofType LDock {
		}
		conveyor dock4 ofType LDock {
		}
		
		// unites LoadClass from SLX Conveyor DSL and Box from PickBest Appl.
		load class Box {
			//Conveyor destination; // references the language element class
			double length; // gets generated
			
			initial {
				double r; // = rv_uniform(...);
				if (r <= 1/3) {
					length = 11 in;
				}
				elseif (r <= 2/3) {
					length = 17 in;
				}
				else {
					length = 23 in;
				}
			}
		}
	}
}

}