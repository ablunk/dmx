#import "../dbl"
#import "../stdx"

module context {

void rewrite(EObject obj, Expression context) {
	if (obj instanceof IdExpr) {
		IdExpr idExpr = context as IdExpr;
		while (idExpr.parentIdExpr != null) {
			idExpr = idExpr.parentIdExpr;
		}
		set expand before idExpr;
		expand context ".";
		
		// insert context + "." before idExpr;
	}
	else {
		foreach (EObject content in obj.eContents()) {
			rewrite(content, context);
		}	
	}
}

extension Context extends dbl SimpleStatement {
	start Context;
	Context -> "context" context:Expression body:LocalScopeStatement;
}
semantics {
	foreach (Statement stm in body.statements) {
		rewrite(stm, context);
	}
	expand body;
}

}