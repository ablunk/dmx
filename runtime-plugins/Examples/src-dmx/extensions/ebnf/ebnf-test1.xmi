<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="ebnf">
    <model href="ebnf.xmi#/"/>
  </imports>
  <modules name="EbnfSample1">
    <extensionDefs name="ExtensionUsingEbfn">
      <extendedConcept xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.28"/>
      <textualSyntaxDef startRule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0">
        <rules name="Forever">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="forever"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal="{"/>
            <sequence xsi:type="dbl:ManyExpr_ManyExpr_extension">
              <expr xsi:type="dbl:SequenceExpr">
                <sequence xsi:type="dbl:PropertyBindingExpr" name="stms">
                  <propertyType xsi:type="dbl:CompositePropertyType" list="true">
                    <type xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.28"/>
                  </propertyType>
                </sequence>
              </expr>
            </sequence>
            <sequence xsi:type="dbl:TerminalExpr" terminal="}"/>
          </rhs>
        </rules>
      </textualSyntaxDef>
    </extensionDefs>
    <extensionDefs name="TestX">
      <extendedConcept xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.28"/>
      <textualSyntaxDef startRule="//@modules.0/@extensionDefs.1/@textualSyntaxDef/@rules.0">
        <rules name="Test">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:RhsClassifierExpr" classifier="//@modules.0/@extensionDefs.1/@textualSyntaxDef/@rules.2"/>
          </rhs>
        </rules>
        <rules name="Test">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:RhsClassifierExpr" classifier="//@modules.0/@extensionDefs.1/@textualSyntaxDef/@rules.3"/>
          </rhs>
        </rules>
        <rules name="Test1">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="testx"/>
            <sequence xsi:type="dbl:AtLeastExpr_AtLeastExpr_extension">
              <expr xsi:type="dbl:AlternativeExpr_AlternativeExpr_extension">
                <left xsi:type="dbl:AlternativeExpr_AlternativeExpr_extension">
                  <left xsi:type="dbl:SequenceExpr">
                    <sequence xsi:type="dbl:TerminalExpr" terminal="opt"/>
                    <sequence xsi:type="dbl:OptionalExpr_OptionalExpr_extension">
                      <expr xsi:type="dbl:SequenceExpr">
                        <sequence xsi:type="dbl:TerminalExpr" terminal="n"/>
                      </expr>
                    </sequence>
                    <sequence xsi:type="dbl:OptionalExpr_OptionalExpr_extension">
                      <expr xsi:type="dbl:TerminalExpr" terminal="n"/>
                    </sequence>
                  </left>
                  <right xsi:type="dbl:SequenceExpr">
                    <sequence xsi:type="dbl:TerminalExpr" terminal="x"/>
                  </right>
                </left>
                <right xsi:type="dbl:SequenceExpr">
                  <sequence xsi:type="dbl:TerminalExpr" terminal="a"/>
                </right>
              </expr>
            </sequence>
          </rhs>
        </rules>
        <rules name="Test2">
          <rhs xsi:type="dbl:AlternativeExpr_AlternativeExpr_extension">
            <left xsi:type="dbl:AlternativeExpr_AlternativeExpr_extension">
              <left xsi:type="dbl:SequenceExpr">
                <sequence xsi:type="dbl:TerminalExpr" terminal="a"/>
                <sequence xsi:type="dbl:OptionalExpr_OptionalExpr_extension">
                  <expr xsi:type="dbl:TerminalExpr" terminal="x"/>
                </sequence>
              </left>
              <right xsi:type="dbl:SequenceExpr">
                <sequence xsi:type="dbl:TerminalExpr" terminal="b"/>
              </right>
            </left>
            <right xsi:type="dbl:SequenceExpr">
              <sequence xsi:type="dbl:TerminalExpr" terminal="c"/>
            </right>
          </rhs>
        </rules>
      </textualSyntaxDef>
    </extensionDefs>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:BooleanTest_BTest_extension" concreteSyntax="btest;" instanceOfExtensionDefinition="true"/>
      <statements xsi:type="dbl:BooleanTest_BTest_extension" concreteSyntax="btest on;" instanceOfExtensionDefinition="true" b="true"/>
    </procedures>
  </modules>
</dbl:Model>
