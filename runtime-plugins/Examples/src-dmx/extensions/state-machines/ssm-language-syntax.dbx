#import "../../dbl"
#import "../../stdlib"
#import "../../stdx"

module ssm;

extension SignalDefinition extends dbl Class {
	start SignalDefinition;
	SignalDefinition -> "signal" name:ID SignalBody;
	SignalBody -> ";";
	SignalBody -> "{" Attributes "}";
	Attributes -> ;
	Attributes -> attributes : list Variable ";" Attributes;
}

extension SignalAccess extends dbl L1Expr {
	start SignalAccess;
	SignalAccess -> "signal";
}

extension SendStatement extends dbl SimpleStatement {
	start SendStatementSyntax;
	SendStatementSyntax -> "send" signal:Expression "to" target:Expression ";";
}

extension StateMachine extends dbl ClassContentExtension {
	start StateMachine;
	
	StateMachine -> "state" "machine" "{" ManyStates "}";
	ManyStates -> ;
	ManyStates -> states : list State ManyStates;
	
	State -> InitialModifier "state" name:ID "{"
		EntryAction
		ManyTransitions
	"}";
	InitialModifier -> initial:"initial";
	InitialModifier -> ;
	
	EntryAction -> ;
	EntryAction -> "entry" entryActions : SimpleStatement;

	ManyTransitions -> ;
	ManyTransitions -> outgoing : list Transition ManyTransitions;

	Transition -> Trigger "->" TargetState;
	
	// TODO can we make the messageVariable accessible inside effects?
	Trigger -> "when" condition:Expression Effects;
	Trigger -> "signal" messageVariable:Variable Effects;
	Trigger -> "after" timeDuration:Expression Effects;
	Effects -> ;
	Effects -> "do" effects : SimpleStatement;
		
	TargetState -> target:$$State;
	TargetState -> stop:"stop";
}
