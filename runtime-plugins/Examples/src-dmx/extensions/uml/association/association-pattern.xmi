<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../../stdlib">
    <model href="../../stdlib.xmi#/"/>
  </imports>
  <modules name="assoc_pattern">
    <classifiers xsi:type="dbl:Clazz" name="A">
      <attributes name="b">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
      </attributes>
      <attributes name="manyBs">
        <classifierType>
          <referencedElement href="../../stdlib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="../../stdlib.xmi#//@modules.0/@classifiers.4"/>
          </classifierType>
        </initialValue>
      </attributes>
      <attributes name="i">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="B">
      <attributes name="a">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      </attributes>
      <attributes name="manyAs">
        <classifierType>
          <referencedElement href="../../stdlib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="../../stdlib.xmi#//@modules.0/@classifiers.4"/>
          </classifierType>
        </initialValue>
      </attributes>
      <attributes name="i">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
    </classifiers>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="a1">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.2">
            <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IntLiteral" value="1"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="b1">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.2">
            <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.2"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IntLiteral" value="2"/>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.2"/>
      </statements>
      <statements xsi:type="dbl:IfStatement">
        <condition xsi:type="dbl:NotEqual">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0"/>
          <op2 xsi:type="dbl:NullLiteral"/>
        </condition>
        <trueCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Assignment">
            <variable>
              <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.0">
                <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.2"/>
              </idExpr>
            </variable>
            <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@attributes.0"/>
          </statements>
        </trueCase>
        <falseCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Assignment">
            <variable>
              <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.0">
                <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.2"/>
              </idExpr>
            </variable>
            <value xsi:type="dbl:NullLiteral"/>
          </statements>
        </falseCase>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@attributes.0"/>
          </parentIdExpr>
          <referencedElement href="../../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.0"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.2">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@attributes.0">
              <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.0"/>
            </parentIdExpr>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </outputs>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
