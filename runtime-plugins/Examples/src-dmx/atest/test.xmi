<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <modules name="m">
    <classes name="A" active="true">
      <attributes name="b">
        <classifierType referencedElement="//@modules.0/@classes.1"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.1">
            <callPart/>
          </classifierType>
        </initialValue>
      </attributes>
      <methods name="s">
        <primitiveType xsi:type="dbl:StringType"/>
        <statements xsi:type="dbl:Yield"/>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
              <op2 xsi:type="dbl:StringLiteral" value="ho"/>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="ha"/>
          </value>
        </statements>
        <parameters name="s">
          <primitiveType xsi:type="dbl:StringType"/>
        </parameters>
      </methods>
      <methods name="t">
        <primitiveType xsi:type="dbl:IntType"/>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
        <statements xsi:type="dbl:Yield"/>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
        <parameters name="value">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
      <methods name="u">
        <primitiveType xsi:type="dbl:DoubleType"/>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.2/@parameters.0"/>
            <op2 xsi:type="dbl:DoubleLiteral" value="0.5"/>
          </value>
        </statements>
        <parameters name="value">
          <primitiveType xsi:type="dbl:DoubleType"/>
        </parameters>
      </methods>
      <actionsBlock>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.1/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@classes.0/@attributes.0">
              <parentIdExpr>
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </parentIdExpr>
            </parentIdExpr>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
              <parentIdExpr>
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </parentIdExpr>
              <callPart>
                <callArguments xsi:type="dbl:StringLiteral" value="haha"/>
              </callPart>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="\n"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:StringLiteral" value="ho"/>
              <op2 xsi:type="dbl:Plus">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.1">
                  <callPart>
                    <callArguments xsi:type="dbl:IntLiteral" value="10"/>
                  </callPart>
                </op1>
                <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.2">
                  <callPart>
                    <callArguments xsi:type="dbl:DoubleLiteral" value="10.5"/>
                  </callPart>
                </op2>
              </op2>
            </op1>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
              <callPart>
                <callArguments xsi:type="dbl:StringLiteral" value="hoho"/>
              </callPart>
            </op2>
          </outputs>
        </statements>
      </actionsBlock>
    </classes>
    <classes name="B">
      <attributes name="x">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
    </classes>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="a">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.0">
            <callPart/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:StringLiteral" value=" A= "/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0"/>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:StringLiteral" value="B = "/>
            <op2 xsi:type="dbl:CreateObject">
              <classifierType referencedElement="//@modules.0/@classes.1">
                <callPart/>
              </classifierType>
            </op2>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:StringLiteral" value="B[]"/>
            <op2 xsi:type="dbl:CreateObject">
              <typeArrayDimensions>
                <size xsi:type="dbl:IntLiteral" value="8"/>
              </typeArrayDimensions>
              <classifierType referencedElement="//@modules.0/@classes.1"/>
            </op2>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:StringLiteral" value="ho"/>
          <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
            <parentIdExpr referencedElement="//@modules.0/@functions.0/@statements.0"/>
            <callPart>
              <callArguments xsi:type="dbl:StringLiteral" value="hoho"/>
            </callPart>
          </op2>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:StringLiteral" value="String Modul"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.0"/>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@variables.1"/>
        </variable>
        <value xsi:type="dbl:StringLiteral" value="YEAH!!"/>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.1"/>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:Advance">
        <time xsi:type="dbl:IntLiteral" value="100"/>
      </statements>
    </functions>
    <variables name="s">
      <primitiveType xsi:type="dbl:StringType"/>
    </variables>
    <variables name="t">
      <primitiveType xsi:type="dbl:StringType"/>
    </variables>
  </modules>
</dbl:Model>
