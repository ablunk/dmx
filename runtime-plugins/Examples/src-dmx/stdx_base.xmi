<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="dbl">
    <model href="dbl.xmi#/"/>
  </imports>
  <imports file="stdlib">
    <model href="stdlib.xmi#/"/>
  </imports>
  <modules name="stdx">
    <extensionDefs name="ForEach">
      <textualSyntaxDef>
        <extensionRule name="LocalScopeStatement">
          <firstNewRule rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0"/>
        </extensionRule>
        <newRules name="ForEach">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="foreach"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal="("/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="statements">
              <propertyType xsi:type="dbl:CompositePropertyType" list="true">
                <type xsi:type="dbl:Clazz" href="dbl.xmi#//@modules.0/@classifiers.25"/>
              </propertyType>
            </sequence>
            <sequence xsi:type="dbl:TerminalExpr" terminal="in"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="collection">
              <propertyType xsi:type="dbl:CompositePropertyType">
                <type xsi:type="dbl:Clazz" href="dbl.xmi#//@modules.0/@classifiers.52"/>
              </propertyType>
            </sequence>
            <sequence xsi:type="dbl:TerminalExpr" terminal=")"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="body">
              <propertyType xsi:type="dbl:CompositePropertyType">
                <type xsi:type="dbl:Clazz" href="dbl.xmi#//@modules.0/@classifiers.45"/>
              </propertyType>
            </sequence>
          </rhs>
        </newRules>
      </textualSyntaxDef>
      <mappingDef>
        <statements name="varDef">
          <classifierType>
            <referencedElement href="dbl.xmi#//@modules.0/@classifiers.25"/>
          </classifierType>
          <initialValue xsi:type="dbl:Cast">
            <classifierType>
              <referencedElement href="dbl.xmi#//@modules.0/@classifiers.25"/>
            </classifierType>
            <op xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0/@rhs/@sequence.2"/>
              <referencedElement href="stdlib.xmi#//@modules.0/@classifiers.3/@methods.5"/>
              <callPart>
                <callArguments xsi:type="dbl:IntLiteral"/>
              </callPart>
            </op>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="Iterator it = "/>
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0/@rhs/@sequence.4"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=".iterator();"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="while (it.hasNext()) {"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="&#x9;Object object = it.next();"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.0"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=" = object as "/>
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.0"/>
              <referencedElement href="dbl.xmi#//@modules.0/@classifiers.7/@attributes.2"/>
            </expr>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=";"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0/@rhs/@sequence.6"/>
          </parts>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="}"/>
        </statements>
      </mappingDef>
    </extensionDefs>
  </modules>
</dbl:Model>
