<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../stdlib">
    <model href="../stdlib.xmi#/"/>
  </imports>
  <module name="types">
    <classes name="A"/>
    <classes name="String">
      <bindings targetLanguage="java" targetType="java.lang.String"/>
      <methods name="length">
        <primitiveType xsi:type="dbl:IntType"/>
      </methods>
    </classes>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.3"/>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <primitiveType xsi:type="dbl:IntType"/>
          <typeArrayDimensions>
            <size xsi:type="dbl:IntLiteral" value="10"/>
          </typeArrayDimensions>
        </value>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.4"/>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <primitiveType xsi:type="dbl:IntType"/>
          <typeArrayDimensions>
            <size xsi:type="dbl:IntLiteral" value="2"/>
          </typeArrayDimensions>
          <typeArrayDimensions>
            <size xsi:type="dbl:IdExpr" referencedElement="//@module/@variables.0"/>
          </typeArrayDimensions>
        </value>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.3">
            <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IntLiteral" value="1"/>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.4">
            <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
            <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IntLiteral" value="1"/>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.5"/>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <typeArrayDimensions>
            <size xsi:type="dbl:IntLiteral" value="10"/>
          </typeArrayDimensions>
          <classifierType referencedElement="//@module/@classes.0"/>
        </value>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.5">
            <arrayIndex xsi:type="dbl:IntLiteral"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@module/@classes.0"/>
        </value>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@module/@variables.6"/>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@module/@classes.6"/>
          </classifierType>
        </value>
      </statements>
      <statements xsi:type="dbl:FunctionCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@module/@variables.6"/>
          <referencedElement href="../stdlib.xmi#//@module/@classes.5/@methods.0"/>
          <callPart>
            <callArguments xsi:type="dbl:CreateObject">
              <classifierType referencedElement="//@module/@classes.0"/>
            </callArguments>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@module/@variables.8"/>
            <predefinedId xsi:type="dbl:SizeOfArray"/>
            <callPart/>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:ForStatement">
        <statements xsi:type="dbl:Variable" name="i">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral"/>
        </statements>
        <termination xsi:type="dbl:Less">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.9/@statements.0"/>
          <op2 xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@module/@variables.3"/>
            <predefinedId xsi:type="dbl:SizeOfArray"/>
          </op2>
        </termination>
        <increment>
          <variable>
            <idExpr referencedElement="//@module/@functions.0/@statements.9/@statements.0"/>
          </variable>
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.9/@statements.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </value>
        </increment>
        <body xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Variable" name="item">
            <primitiveType xsi:type="dbl:IntType"/>
            <initialValue xsi:type="dbl:IdExpr" referencedElement="//@module/@variables.3">
              <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.9/@statements.0"/>
            </initialValue>
          </statements>
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@module/@functions.0/@statements.9/@body/@statements.0"/>
              <op2 xsi:type="dbl:StringLiteral" value="\n"/>
            </outputs>
          </statements>
        </body>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@module/@variables.3"/>
          <predefinedId xsi:type="dbl:SizeOfArray"/>
        </outputs>
      </statements>
    </functions>
    <variables name="i">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="2"/>
    </variables>
    <variables name="d">
      <primitiveType xsi:type="dbl:DoubleType"/>
      <initialValue xsi:type="dbl:DoubleLiteral" value="2.5"/>
    </variables>
    <variables name="b">
      <primitiveType xsi:type="dbl:BoolType"/>
      <initialValue xsi:type="dbl:TrueLiteral"/>
    </variables>
    <variables name="iArray1">
      <primitiveType xsi:type="dbl:IntType"/>
      <typeArrayDimensions/>
    </variables>
    <variables name="iArray2">
      <primitiveType xsi:type="dbl:IntType"/>
      <typeArrayDimensions/>
      <typeArrayDimensions/>
    </variables>
    <variables name="aArray">
      <typeArrayDimensions/>
      <classifierType referencedElement="//@module/@classes.0"/>
    </variables>
    <variables name="iList">
      <classifierType>
        <referencedElement href="../stdlib.xmi#//@module/@classes.5"/>
      </classifierType>
    </variables>
    <variables name="s">
      <primitiveType xsi:type="dbl:StringType"/>
      <initialValue xsi:type="dbl:StringLiteral" value="hello"/>
    </variables>
    <variables name="stringObject">
      <classifierType referencedElement="//@module/@classes.1"/>
      <initialValue xsi:type="dbl:StringLiteral" value="hello"/>
    </variables>
  </module>
</dbl:Model>
