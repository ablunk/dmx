<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="power2">
    <model href="power2.xmi#/"/>
  </imports>
  <modules name="testFunctionCallPerformance">
    <procedures name="f4" concreteSyntax="void f4(int p1) {&#xA;&#x9;&#x9;int j=p1;&#xA;&#x9;&#x9;while (j > 0) {&#xA;&#x9;&#x9;&#x9;f5();&#xA;&#x9;&#x9;&#x9;j=j-1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;print g1 + &quot;\n&quot;;&#xA;&#x9;}">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="j" concreteSyntax="int j=p1">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IdExpr" concreteSyntax="p1" referencedElement="//@modules.0/@procedures.0/@parameters.0"/>
      </statements>
      <statements xsi:type="dbl:WhileStatement" concreteSyntax="while (j > 0) {&#xA;&#x9;&#x9;&#x9;f5();&#xA;&#x9;&#x9;&#x9;j=j-1;&#xA;&#x9;&#x9;}">
        <condition xsi:type="dbl:Greater" concreteSyntax="j > 0">
          <op1 xsi:type="dbl:IdExpr" concreteSyntax="j" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          <op2 xsi:type="dbl:IntLiteral" concreteSyntax="0"/>
        </condition>
        <whileBlock concreteSyntax="{&#xA;&#x9;&#x9;&#x9;f5();&#xA;&#x9;&#x9;&#x9;j=j-1;&#xA;&#x9;&#x9;}">
          <statements xsi:type="dbl:ExpressionStatement" concreteSyntax="f5()">
            <expression xsi:type="dbl:ProcedureCall">
              <procedureAccess xsi:type="dbl:IdExpr" concreteSyntax="f5()" referencedElement="//@modules.0/@procedures.1">
                <arguments/>
              </procedureAccess>
            </expression>
          </statements>
          <statements xsi:type="dbl:Assignment" concreteSyntax="j=j-1">
            <variable concreteSyntax="j">
              <idExpr concreteSyntax="j" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
            </variable>
            <value xsi:type="dbl:Minus" concreteSyntax="j-1">
              <op1 xsi:type="dbl:IdExpr" concreteSyntax="j" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
              <op2 xsi:type="dbl:IntLiteral" concreteSyntax="1" value="1"/>
            </value>
          </statements>
        </whileBlock>
      </statements>
      <statements xsi:type="dbl:Print" concreteSyntax="print g1 + &quot;\n&quot;">
        <outputs xsi:type="dbl:Plus" concreteSyntax="g1 + &quot;\n&quot;">
          <op1 xsi:type="dbl:IdExpr" concreteSyntax="g1" referencedElement="//@modules.0/@variables.0"/>
          <op2 xsi:type="dbl:StringLiteral" concreteSyntax="&quot;\n&quot;" value="\n"/>
        </outputs>
      </statements>
      <parameters name="p1">
        <primitiveType xsi:type="dbl:IntType"/>
      </parameters>
    </procedures>
    <procedures name="f5" concreteSyntax="void f5() {&#xA;&#x9;&#x9;g1=g1+1;&#xA;&#x9;}">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Assignment" concreteSyntax="g1=g1+1">
        <variable concreteSyntax="g1">
          <idExpr concreteSyntax="g1" referencedElement="//@modules.0/@variables.0"/>
        </variable>
        <value xsi:type="dbl:Plus" concreteSyntax="g1+1">
          <op1 xsi:type="dbl:IdExpr" concreteSyntax="g1" referencedElement="//@modules.0/@variables.0"/>
          <op2 xsi:type="dbl:IntLiteral" concreteSyntax="1" value="1"/>
        </value>
      </statements>
    </procedures>
    <procedures name="main" concreteSyntax="void main() {&#xA;&#x9;&#x9;f4(1000000000);&#xA;&#x9;&#x9;int x = 2;&#xA;&#x9;&#x9;print 10^8 + &quot;\n&quot;;&#xA;&#x9;}">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:ExpressionStatement" concreteSyntax="f4(1000000000)">
        <expression xsi:type="dbl:ProcedureCall">
          <procedureAccess xsi:type="dbl:IdExpr" concreteSyntax="f4(1000000000)" referencedElement="//@modules.0/@procedures.0">
            <arguments>
              <arguments xsi:type="dbl:IntLiteral" concreteSyntax="1000000000" value="1000000000"/>
            </arguments>
          </procedureAccess>
        </expression>
      </statements>
      <statements xsi:type="dbl:Variable" name="x" concreteSyntax="int x = 2">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" concreteSyntax="2" value="2"/>
      </statements>
      <statements xsi:type="dbl:Print" concreteSyntax="print 10^8 + &quot;\n&quot;">
        <outputs xsi:type="dbl:Plus" concreteSyntax="10^8 + &quot;\n&quot;">
          <op1 xsi:type="dbl:PowerExpr" concreteSyntax="10^8">
            <factor xsi:type="dbl:IntLiteral" concreteSyntax="10" value="10"/>
            <power xsi:type="dbl:IntLiteral" concreteSyntax="8" value="8"/>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" concreteSyntax="&quot;\n&quot;" value="\n"/>
        </outputs>
      </statements>
    </procedures>
    <variables name="g1" concreteSyntax="int g1=0">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" concreteSyntax="0"/>
    </variables>
  </modules>
</dbl:Model>
