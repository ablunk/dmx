#import "../dbl"
#import "../stdlib"

module stdx_foreach {

extension ForEach extends dbl LocalScopeStatement {
	start ForEach;
	ForEach -> "foreach" "(" statements:list Variable "in" collection:Expression ")"
		body:LocalScopeStatement;
}

semantics for ForEach {	
	Variable itemVariable = statements.get(0) as Variable;
	
	boolean collectionRefersToArray = false;
	IdExpr collectionIdExpr = collection as IdExpr;
	if (collectionIdExpr.referencedElement instanceof Variable) {
		Variable referencedCollectionVariable = collectionIdExpr.referencedElement as Variable;
		if (referencedCollectionVariable.typeArrayDimensions.size() > 0) {
			collectionRefersToArray = true;
		}
	}
	
	if (collectionRefersToArray) {
		ID i;
		expand "for (int " i " = 0; " i " < " collection ".length; " i "=" i "+1) {";
		expand 		itemVariable " = " collection "[" i "];";
		expand		body;
		expand "}";
	}
	else {
		ID it;
		ID item; 
		expand "Iterator " it " = " collection ".iterator();";
		expand "while (" it ".hasNext()) {";
		expand "	Object " item " = " it ".next();";
		expand 		itemVariable " = " item " as " itemVariable.classifierType ";";
		expand		body;
		expand "}";
	}
}

}