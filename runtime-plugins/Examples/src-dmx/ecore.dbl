#import "stdlib"

module ecore {

class EAttribute
extends 
EStructuralFeature
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EAttribute"
	}
	
	boolean iD;
	void setID(boolean value) abstract;
	EDataType eAttributeType;
}
class EAnnotation
extends 
EModelElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EAnnotation"
	}
	
	string source;
	void setSource(string value) abstract;
	List details;
	EModelElement eModelElement;
	void setEModelElement(EModelElement value) abstract;
	List contents;
	List references;
}
class EClass
extends 
EClassifier
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EClass"
	}
	
	boolean abstract;
	void setAbstract(boolean value) abstract;
	boolean interface;
	void setInterface(boolean value) abstract;
	List eSuperTypes;
	List eOperations;
	List eAllAttributes;
	List eAllReferences;
	List eReferences;
	List eAttributes;
	List eAllContainments;
	List eAllOperations;
	List eAllStructuralFeatures;
	List eAllSuperTypes;
	EAttribute eIDAttribute;
	List eStructuralFeatures;
	List eGenericSuperTypes;
	List eAllGenericSuperTypes;
}
class EClassifier
extends 
ENamedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EClassifier"
	}
	
	string instanceClassName;
	void setInstanceClassName(string value) abstract;
	Object instanceClass;
	Object defaultValue;
	string instanceTypeName;
	void setInstanceTypeName(string value) abstract;
	EPackage ePackage;
	List eTypeParameters;
}
class EDataType
extends 
EClassifier
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EDataType"
	}
	
	boolean serializable;
	void setSerializable(boolean value) abstract;
}
class EEnum
extends 
EDataType
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EEnum"
	}
	
	List eLiterals;
}
class EEnumLiteral
extends 
ENamedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EEnumLiteral"
	}
	
	int value;
	void setValue(int value) abstract;
	Enumerator instance;
	void setInstance(Enumerator value) abstract;
	string literal;
	void setLiteral(string value) abstract;
	EEnum eEnum;
}
class EFactory
extends 
EModelElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EFactory"
	}
	
	EPackage ePackage;
	void setEPackage(EPackage value) abstract;
}
class EModelElement
extends EObject
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EModelElement"
	}
	
	List eAnnotations;
}
class ENamedElement
extends 
EModelElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.ENamedElement"
	}
	
	string name;
	void setName(string value) abstract;
}
class Enumerator {
	bindings {
		"java" -> "org.eclipse.emf.common.util.Enumerator"
	}
}
class EList extends List {
	bindings {
		"java" -> "org.eclipse.emf.common.util.EList"
	}
	void move(int newPos, Object object) abstract;
	void move(int newPos, int oldPos) abstract;
}
class EmfEObject {
	bindings {
		"java" -> "org.eclipse.emf.ecore.EObject"
	}
	EClass eClass() abstract;
	EObject eContainer() abstract;
	EStructuralFeature eContainingFeature() abstract;
	EReference eContainmentFeature() abstract;
	EList eContents() abstract;
	EList eAllContents() abstract;
	//boolean eIsProxy() abstract;
	EList eCrossReferences() abstract;
	Object eGet(EStructuralFeature feature) abstract;
	Object eGet(EStructuralFeature feature, boolean resolve) abstract;
	void eSet(EStructuralFeature feature, Object newValue) abstract;
	boolean eIsSet(EStructuralFeature feature) abstract;
	void eUnset(EStructuralFeature feature) abstract;
	//Object eInvoke(EOperation operation, Object array[] arguments) abstract;
}
class EObject extends EmfEObject {
	bindings {
		"java" -> "hub.sam.dbl.DblEObject"
	}
	string getURI() abstract;
}
class EOperation
extends 
ETypedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EOperation"
	}
	
	EClass eContainingClass;
	List eTypeParameters;
	List eParameters;
	List eExceptions;
	List eGenericExceptions;
}
class EPackage
extends 
ENamedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EPackage"
	}
	
	string nsURI;
	void setNsURI(string value) abstract;
	string nsPrefix;
	void setNsPrefix(string value) abstract;
	EFactory eFactoryInstance;
	void setEFactoryInstance(EFactory value) abstract;
	List eClassifiers;
	List eSubpackages;
	EPackage eSuperPackage;
}
class EParameter
extends 
ETypedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EParameter"
	}
	
	EOperation eOperation;
}
class EReference
extends 
EStructuralFeature
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EReference"
	}
	
	boolean containment;
	void setContainment(boolean value) abstract;
	boolean container;
	boolean resolveProxies;
	void setResolveProxies(boolean value) abstract;
	EReference eOpposite;
	void setEOpposite(EReference value) abstract;
	EClass eReferenceType;
	List eKeys;
}
class EStructuralFeature
extends 
ETypedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EStructuralFeature"
	}
	
	boolean changeable;
	void setChangeable(boolean value) abstract;
	boolean volatile;
	void setVolatile(boolean value) abstract;
	boolean transient;
	void setTransient(boolean value) abstract;
	string defaultValueLiteral;
	void setDefaultValueLiteral(string value) abstract;
	Object defaultValue;
	boolean unsettable;
	void setUnsettable(boolean value) abstract;
	boolean derived;
	void setDerived(boolean value) abstract;
	EClass eContainingClass;
}
class ETypedElement
extends 
ENamedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.ETypedElement"
	}
	
	boolean ordered;
	void setOrdered(boolean value) abstract;
	boolean unique;
	void setUnique(boolean value) abstract;
	int lowerBound;
	void setLowerBound(int value) abstract;
	int upperBound;
	void setUpperBound(int value) abstract;
	boolean many;
	boolean required;
	EClassifier eType;
	void setEType(EClassifier value) abstract;
	EGenericType eGenericType;
	void setEGenericType(EGenericType value) abstract;
}
class EStringToStringMapEntry
extends EObject
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EStringToStringMapEntry"
	}
	
	string key;
	void setKey(string value) abstract;
	string value;
	void setValue(string value) abstract;
}
class EGenericType
extends EObject
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.EGenericType"
	}
	
	EGenericType eUpperBound;
	void setEUpperBound(EGenericType value) abstract;
	List eTypeArguments;
	EClassifier eRawType;
	EGenericType eLowerBound;
	void setELowerBound(EGenericType value) abstract;
	ETypeParameter eTypeParameter;
	void setETypeParameter(ETypeParameter value) abstract;
	EClassifier eClassifier;
	void setEClassifier(EClassifier value) abstract;
}
class ETypeParameter
extends 
ENamedElement
{
	bindings {
		"java" -> "org.eclipse.emf.ecore.ETypeParameter"
	}
	
	List eBounds;
}

}
