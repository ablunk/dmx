<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <modules name="m">
    <classes name="A">
      <constructors>
        <statements xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Assignment">
            <variable>
              <idExpr referencedElement="//@modules.0/@classes.0/@attributes.0"/>
            </variable>
            <value xsi:type="dbl:CreateObject">
              <classifierType referencedElement="//@modules.0/@classes.1">
                <callPart>
                  <callArguments xsi:type="dbl:IntLiteral" value="15"/>
                  <callArguments xsi:type="dbl:IdExpr">
                    <predefinedId xsi:type="dbl:MeLiteral"/>
                  </callArguments>
                </callPart>
              </classifierType>
            </value>
          </statements>
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@attributes.0"/>
          </statements>
        </statements>
      </constructors>
      <attributes name="b">
        <classifierType referencedElement="//@modules.0/@classes.1"/>
      </attributes>
    </classes>
    <classes name="B">
      <constructors>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.1/@attributes.2"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.1/@constructors.0/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.1/@attributes.0">
              <parentIdExpr>
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </parentIdExpr>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.1/@constructors.0/@parameters.1"/>
        </statements>
        <parameters name="x">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="a">
          <classifierType referencedElement="//@modules.0/@classes.0"/>
        </parameters>
      </constructors>
      <attributes name="a">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
      </attributes>
      <attributes name="c">
        <classifierType referencedElement="//@modules.0/@classes.2"/>
      </attributes>
      <attributes name="id">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
    </classes>
    <classes name="C">
      <attributes name="b">
        <classifierType referencedElement="//@modules.0/@classes.1"/>
      </attributes>
      <attributes name="a">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
      </attributes>
    </classes>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="a">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.0">
            <callPart/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="x">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="5"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="y">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="10"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="z">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="15"/>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.1"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.2"/>
          </op1>
          <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.3"/>
        </outputs>
      </statements>
    </functions>
  </modules>
</dbl:Model>
