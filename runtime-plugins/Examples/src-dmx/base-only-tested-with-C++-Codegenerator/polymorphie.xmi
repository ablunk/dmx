<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <modules name="int">
    <classes name="A">
      <attributes name="int">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="DBL_MAX_EXP">
        <primitiveType xsi:type="dbl:DoubleType"/>
      </attributes>
      <attributes name="_ABC">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="s">
        <primitiveType xsi:type="dbl:StringType"/>
        <initialValue xsi:type="dbl:StringLiteral" value="heo"/>
      </attributes>
      <methods name="f">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="2"/>
          </outputs>
        </statements>
        <parameters name="int">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
    </classes>
    <classes name="B">
      <superClasses class="//@modules.0/@classes.0"/>
      <constructors>
        <parameters name="b">
          <classifierType referencedElement="//@modules.0/@classes.1"/>
        </parameters>
      </constructors>
      <attributes name="x">
        <classifierType referencedElement="//@modules.0/@classes.2"/>
      </attributes>
      <attributes name="y">
        <classifierType referencedElement="//@modules.0/@classes.2"/>
      </attributes>
      <attributes name="p">
        <primitiveType xsi:type="dbl:DoubleType"/>
      </attributes>
      <methods name="function">
        <primitiveType xsi:type="dbl:VoidType"/>
      </methods>
      <methods name="f">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.1/@methods.1/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="4"/>
          </outputs>
        </statements>
        <parameters name="value">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
    </classes>
    <classes name="C">
      <superClasses class="//@modules.0/@classes.1"/>
      <constructors/>
      <attributes name="g">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <methods name="f">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.2/@methods.0/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="8"/>
          </outputs>
        </statements>
        <parameters name="value">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
    </classes>
    <classes name="D">
      <superClasses class="//@modules.0/@classes.1"/>
      <constructors>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.3/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.1/@attributes.0">
            <parentIdExpr>
              <predefinedId xsi:type="dbl:SuperLiteral"/>
            </parentIdExpr>
          </value>
        </statements>
        <parameters name="z">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </constructors>
      <attributes name="y">
        <classifierType referencedElement="//@modules.0/@classes.2"/>
      </attributes>
      <attributes name="z">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
    </classes>
    <classes name="X">
      <constructors>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.4/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.4/@constructors.0/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.4/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.4/@constructors.0/@parameters.1"/>
        </statements>
        <parameters name="a">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="b">
          <primitiveType xsi:type="dbl:DoubleType"/>
        </parameters>
      </constructors>
      <attributes name="x">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="y">
        <primitiveType xsi:type="dbl:DoubleType"/>
      </attributes>
    </classes>
    <classes name="Z">
      <attributes name="y">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
    </classes>
    <functions name="f">
      <primitiveType xsi:type="dbl:IntType"/>
      <typeArrayDimensions/>
      <typeArrayDimensions/>
      <statements xsi:type="dbl:ForStatement">
        <statements xsi:type="dbl:Variable" name="i">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral"/>
        </statements>
        <termination xsi:type="dbl:Less">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@statements.0"/>
          <op2 xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@modules.0/@functions.0/@parameters.0"/>
            <predefinedId xsi:type="dbl:SizeOfArray"/>
          </op2>
        </termination>
        <increment>
          <variable>
            <idExpr referencedElement="//@modules.0/@functions.0/@statements.0/@statements.0"/>
          </variable>
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@statements.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </value>
        </increment>
        <body xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:ForStatement">
            <statements xsi:type="dbl:Variable" name="j">
              <primitiveType xsi:type="dbl:IntType"/>
              <initialValue xsi:type="dbl:IntLiteral"/>
            </statements>
            <termination xsi:type="dbl:Less">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@body/@statements.0/@statements.0"/>
              <op2 xsi:type="dbl:IdExpr">
                <parentIdExpr referencedElement="//@modules.0/@functions.0/@parameters.0">
                  <arrayIndex xsi:type="dbl:IntLiteral" value="2"/>
                </parentIdExpr>
                <predefinedId xsi:type="dbl:SizeOfArray"/>
              </op2>
            </termination>
            <increment>
              <variable>
                <idExpr referencedElement="//@modules.0/@functions.0/@statements.0/@body/@statements.0/@statements.0"/>
              </variable>
              <value xsi:type="dbl:Plus">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@body/@statements.0/@statements.0"/>
                <op2 xsi:type="dbl:IntLiteral" value="1"/>
              </value>
            </increment>
            <body xsi:type="dbl:LocalScopeStatement">
              <statements xsi:type="dbl:Assignment">
                <variable>
                  <idExpr referencedElement="//@modules.0/@functions.0/@parameters.0">
                    <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@statements.0"/>
                    <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@body/@statements.0/@statements.0"/>
                  </idExpr>
                </variable>
                <value xsi:type="dbl:Plus">
                  <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@statements.0"/>
                  <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0/@body/@statements.0/@statements.0"/>
                </value>
              </statements>
            </body>
          </statements>
        </body>
      </statements>
      <statements xsi:type="dbl:Return">
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@parameters.0"/>
      </statements>
      <parameters name="test">
        <primitiveType xsi:type="dbl:IntType"/>
        <typeArrayDimensions/>
        <typeArrayDimensions/>
      </parameters>
    </functions>
    <functions name="printArray">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:ForStatement">
        <statements xsi:type="dbl:Variable" name="i">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral"/>
        </statements>
        <termination xsi:type="dbl:Less">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@statements.0/@statements.0"/>
          <op2 xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@modules.0/@functions.1/@parameters.0"/>
            <predefinedId xsi:type="dbl:SizeOfArray"/>
          </op2>
        </termination>
        <increment>
          <variable>
            <idExpr referencedElement="//@modules.0/@functions.1/@statements.0/@statements.0"/>
          </variable>
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@statements.0/@statements.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </value>
        </increment>
        <body xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:ForStatement">
            <statements xsi:type="dbl:Variable" name="j">
              <primitiveType xsi:type="dbl:IntType"/>
              <initialValue xsi:type="dbl:IntLiteral"/>
            </statements>
            <termination xsi:type="dbl:Less">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@statements.0/@body/@statements.0/@statements.0"/>
              <op2 xsi:type="dbl:IdExpr">
                <parentIdExpr referencedElement="//@modules.0/@functions.1/@parameters.0">
                  <arrayIndex xsi:type="dbl:Minus">
                    <op1 xsi:type="dbl:IdExpr">
                      <parentIdExpr referencedElement="//@modules.0/@functions.1/@parameters.0"/>
                      <predefinedId xsi:type="dbl:SizeOfArray"/>
                    </op1>
                    <op2 xsi:type="dbl:IntLiteral" value="1"/>
                  </arrayIndex>
                </parentIdExpr>
                <predefinedId xsi:type="dbl:SizeOfArray"/>
              </op2>
            </termination>
            <increment>
              <variable>
                <idExpr referencedElement="//@modules.0/@functions.1/@statements.0/@body/@statements.0/@statements.0"/>
              </variable>
              <value xsi:type="dbl:Plus">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@statements.0/@body/@statements.0/@statements.0"/>
                <op2 xsi:type="dbl:IntLiteral" value="1"/>
              </value>
            </increment>
            <body xsi:type="dbl:LocalScopeStatement">
              <statements xsi:type="dbl:Print">
                <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@parameters.0">
                  <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@statements.0/@statements.0"/>
                  <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@statements.0/@body/@statements.0/@statements.0"/>
                </outputs>
                <outputs xsi:type="dbl:StringLiteral" value="\n"/>
              </statements>
            </body>
          </statements>
        </body>
      </statements>
      <parameters name="test">
        <primitiveType xsi:type="dbl:IntType"/>
        <typeArrayDimensions/>
        <typeArrayDimensions/>
      </parameters>
    </functions>
    <functions name="concatenate">
      <primitiveType xsi:type="dbl:StringType"/>
      <statements xsi:type="dbl:Return">
        <value xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.2/@parameters.0"/>
          <op2 xsi:type="dbl:StringLiteral" value="f"/>
        </value>
      </statements>
      <parameters name="s">
        <primitiveType xsi:type="dbl:StringType"/>
      </parameters>
    </functions>
    <functions name="main">
      <primitiveType xsi:type="dbl:IntType"/>
      <statements xsi:type="dbl:Variable" name="b">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.0">
            <callPart/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="b3">
        <classifierType referencedElement="//@modules.0/@classes.1"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.3">
            <callPart/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="b2">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.1">
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.1"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="s">
        <primitiveType xsi:type="dbl:StringType"/>
        <initialValue xsi:type="dbl:StringLiteral" value="abcd"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="la">
        <primitiveType xsi:type="dbl:IntType"/>
        <typeArrayDimensions/>
        <typeArrayDimensions/>
      </statements>
      <statements xsi:type="dbl:Variable" name="x">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="5"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="str">
        <primitiveType xsi:type="dbl:StringType"/>
        <initialValue xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.2">
            <callPart>
              <callArguments xsi:type="dbl:StringLiteral" value="hallo"/>
            </callPart>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="test"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="toto">
        <primitiveType xsi:type="dbl:StringType"/>
        <initialValue xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:StringLiteral" value="habu"/>
            <op2 xsi:type="dbl:IntLiteral" value="3"/>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="\n"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:StringLiteral" value="toto"/>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@functions.3/@statements.4"/>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <primitiveType xsi:type="dbl:IntType"/>
          <typeArrayDimensions>
            <size xsi:type="dbl:IntLiteral" value="9"/>
          </typeArrayDimensions>
          <typeArrayDimensions>
            <size xsi:type="dbl:IntLiteral" value="4"/>
          </typeArrayDimensions>
        </value>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@functions.3/@statements.4"/>
        </variable>
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0">
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.4"/>
          </callPart>
        </value>
      </statements>
      <statements xsi:type="dbl:FunctionCall">
        <callIdExpr referencedElement="//@modules.0/@functions.1">
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.4"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.0/@functions.3/@statements.4"/>
          <predefinedId xsi:type="dbl:SizeOfArray"/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.0/@functions.3/@statements.3"/>
          <predefinedId xsi:type="dbl:SizeOfArray"/>
          <callPart/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:IfStatement">
        <condition xsi:type="dbl:InstanceOf">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.0"/>
          <op2 xsi:type="dbl:TypeAccess">
            <idExpr referencedElement="//@modules.0/@classes.0"/>
          </op2>
        </condition>
        <trueCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:StringLiteral" value="YEAH1!!!"/>
          </statements>
        </trueCase>
      </statements>
      <statements xsi:type="dbl:IfStatement">
        <condition xsi:type="dbl:InstanceOf">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.1"/>
          <op2 xsi:type="dbl:TypeAccess">
            <idExpr referencedElement="//@modules.0/@classes.0"/>
          </op2>
        </condition>
        <trueCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:StringLiteral" value="YEAH2!!!"/>
          </statements>
        </trueCase>
      </statements>
      <statements xsi:type="dbl:IfStatement">
        <condition xsi:type="dbl:InstanceOf">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.1"/>
          <op2 xsi:type="dbl:TypeAccess">
            <idExpr referencedElement="//@modules.0/@classes.2"/>
          </op2>
        </condition>
        <trueCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:StringLiteral" value="YEAH3!!!"/>
          </statements>
        </trueCase>
      </statements>
      <statements xsi:type="dbl:IfStatement">
        <condition xsi:type="dbl:InstanceOf">
          <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.3/@statements.1"/>
          <op2 xsi:type="dbl:TypeAccess">
            <idExpr referencedElement="//@modules.0/@classes.3"/>
          </op2>
        </condition>
        <trueCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:StringLiteral" value="YEAH4!!!"/>
          </statements>
        </trueCase>
      </statements>
    </functions>
    <variables name="x">
      <primitiveType xsi:type="dbl:IntType"/>
    </variables>
    <variables name="y">
      <primitiveType xsi:type="dbl:DoubleType"/>
      <initialValue xsi:type="dbl:DoubleLiteral" value="2.5"/>
    </variables>
    <variables name="a">
      <classifierType referencedElement="//@modules.0/@classes.0"/>
      <initialValue xsi:type="dbl:CreateObject">
        <classifierType referencedElement="//@modules.0/@classes.0">
          <callPart/>
        </classifierType>
      </initialValue>
    </variables>
  </modules>
</dbl:Model>
