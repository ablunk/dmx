<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <modules name="random">
    <classes name="A" active="true">
      <constructors>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.1"/>
            <op2 xsi:type="dbl:StringLiteral" value="\n"/>
          </outputs>
        </statements>
      </constructors>
      <methods name="f">
        <primitiveType xsi:type="dbl:DoubleType"/>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.0"/>
          </value>
        </statements>
        <parameters name="i">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
      <methods name="g">
        <primitiveType xsi:type="dbl:IntType"/>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:Cast">
            <primitiveType xsi:type="dbl:IntType"/>
            <op xsi:type="dbl:Div">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.1/@parameters.0"/>
              <op2 xsi:type="dbl:IntLiteral" value="2"/>
            </op>
          </value>
        </statements>
        <parameters name="z">
          <primitiveType xsi:type="dbl:DoubleType"/>
        </parameters>
      </methods>
      <actionsBlock>
        <statements xsi:type="dbl:Variable" name="x">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="10"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
                <callPart>
                  <callArguments xsi:type="dbl:IntLiteral" value="2"/>
                </callPart>
              </op1>
              <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
                <callPart>
                  <callArguments xsi:type="dbl:IntLiteral" value="3"/>
                </callPart>
              </op2>
            </op1>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
              <callPart>
                <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.1">
                  <callPart>
                    <callArguments xsi:type="dbl:Plus">
                      <op1 xsi:type="dbl:Plus">
                        <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
                          <callPart>
                            <callArguments xsi:type="dbl:IntLiteral" value="2"/>
                          </callPart>
                        </op1>
                        <op2 xsi:type="dbl:DoubleLiteral" value="0.2"/>
                      </op1>
                      <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
                        <callPart>
                          <callArguments xsi:type="dbl:IntLiteral" value="1"/>
                        </callPart>
                      </op2>
                    </callArguments>
                  </callPart>
                </callArguments>
              </callPart>
            </op2>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.1">
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
                    <callPart>
                      <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.1">
                        <callPart>
                          <callArguments xsi:type="dbl:DoubleLiteral" value="1.23456789"/>
                        </callPart>
                      </callArguments>
                    </callPart>
                  </callArguments>
                </callPart>
              </callArguments>
            </callPart>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:Plus">
                <op1 xsi:type="dbl:IdExpr">
                  <predefinedId xsi:type="dbl:MeLiteral"/>
                </op1>
                <op2 xsi:type="dbl:StringLiteral" value=""/>
              </op1>
              <op2 xsi:type="dbl:TimeLiteral"/>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="\n"/>
          </outputs>
        </statements>
      </actionsBlock>
    </classes>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="a">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.0">
            <callPart/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:Advance">
        <time xsi:type="dbl:IntLiteral" value="100"/>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <predefinedId xsi:type="dbl:MeLiteral"/>
        </outputs>
      </statements>
    </functions>
    <variables name="ref">
      <primitiveType xsi:type="dbl:DoubleType"/>
      <initialValue xsi:type="dbl:DoubleLiteral" value="0.5"/>
    </variables>
    <variables name="b">
      <primitiveType xsi:type="dbl:StringType"/>
      <initialValue xsi:type="dbl:StringLiteral" value="ha"/>
    </variables>
  </modules>
</dbl:Model>
