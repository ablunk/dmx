#import "../dbl"
#import "../stdx"

module EmpiricalDef {

	class EmpiricalInt(string name) {
		bindings {
			"desmoj" -> "hub.sam.dmx.javasim.desmoj.dist.IntDistEmpirical"
		}
		int sample() {}
		void addEntry(int value, double cumFrequency) {}
	}
	
	extension DiscreteEmpirical extends dbl Statement {
		start DiscreteEmpirical;
		DiscreteEmpirical -> "discreteEmpirical" 
			name:ID "{" EntryList "}";
		EntryList -> entries:list(Entry) EntryOptional;
		Entry -> cumPercent:INT ":" value:INT;
		EntryOptional -> ;
		EntryOptional -> "," EntryList;
	}
	semantics {
		expand "EmpiricalInt " name " = new EmpiricalInt(\"" name "\");";
		foreach (Entry e in entries) {
			expand name ".addEntry(" e.value "," e.cumPercent " / 100.0);";
		}
	}
	
	extension SampleDiscreteEmpirical extends dbl L1Expr {
		start SampleDiscreteEmpirical;
		SampleDiscreteEmpirical -> "sample" "of" de:$$NamedElement;
	}
	semantics {
		expand de.name ".sample()";
	}

}