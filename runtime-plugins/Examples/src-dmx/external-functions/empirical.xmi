<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../base">
    <model href="../base.xmi#/"/>
  </imports>
  <modules name="EmpiricalDef">
    <extensionDefs name="DiscreteEmpirical">
      <textualSyntaxDef>
        <extensionRule name="Statement">
          <firstNewRule rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0"/>
        </extensionRule>
        <newRules name="DiscreteEmpirical">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="discreteEmpirical"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="name">
              <propertyType xsi:type="dbl:IdPropertyType"/>
            </sequence>
            <sequence xsi:type="dbl:TerminalExpr" terminal="{"/>
            <sequence xsi:type="dbl:RuleExpr" rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.1"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal="}"/>
          </rhs>
        </newRules>
        <newRules name="EntryList">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:PropertyBindingExpr" name="entries">
              <propertyType xsi:type="dbl:CompositePropertyType" type="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2" list="true"/>
            </sequence>
            <sequence xsi:type="dbl:RuleExpr" rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.4"/>
          </rhs>
        </newRules>
        <newRules name="Entry">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:PropertyBindingExpr" name="cumPercent">
              <propertyType xsi:type="dbl:IntPropertyType"/>
            </sequence>
            <sequence xsi:type="dbl:TerminalExpr" terminal=":"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="value">
              <propertyType xsi:type="dbl:IntPropertyType"/>
            </sequence>
          </rhs>
        </newRules>
        <newRules name="EntryOptional">
          <rhs xsi:type="dbl:SequenceExpr"/>
        </newRules>
        <newRules name="EntryOptional">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal=","/>
            <sequence xsi:type="dbl:RuleExpr" rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.1"/>
          </rhs>
        </newRules>
      </textualSyntaxDef>
      <mappingDef>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="EmpiricalInt "/>
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0/@rhs/@sequence.1"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=" = new EmpiricalInt(\&quot;"/>
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0/@rhs/@sequence.1"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code="\&quot;);"/>
        </statements>
        <statements xsi:type="dbl:ForEachStatement">
          <iteratorVariableDefinition name="e">
            <classifierTypeExpr referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2"/>
          </iteratorVariableDefinition>
          <iterableExpression xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.1/@rhs/@sequence.0"/>
          <forBlock>
            <statements xsi:type="dbl:MappingStatement">
              <parts xsi:type="dbl:FixedMappingPart" code=""/>
              <parts xsi:type="dbl:DynamicMappingPart">
                <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0/@rhs/@sequence.1"/>
              </parts>
              <parts xsi:type="dbl:FixedMappingPart" code=".addEntry("/>
              <parts xsi:type="dbl:DynamicMappingPart">
                <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2/@rhs/@sequence.2">
                  <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1/@iteratorVariableDefinition"/>
                </expr>
              </parts>
              <parts xsi:type="dbl:FixedMappingPart" code=","/>
              <parts xsi:type="dbl:DynamicMappingPart">
                <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2/@rhs/@sequence.0">
                  <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1/@iteratorVariableDefinition"/>
                </expr>
              </parts>
              <parts xsi:type="dbl:FixedMappingPart" code=" / 100.0);"/>
            </statements>
          </forBlock>
        </statements>
      </mappingDef>
    </extensionDefs>
    <extensionDefs name="SampleDiscreteEmpirical">
      <textualSyntaxDef>
        <extensionRule name="L1Expr">
          <firstNewRule rule="//@modules.0/@extensionDefs.1/@textualSyntaxDef/@newRules.0"/>
        </extensionRule>
        <newRules name="SampleDiscreteEmpirical">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="sample"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal="of"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="de">
              <propertyType xsi:type="dbl:ReferencePropertyType" rawReference="true">
                <type xsi:type="dbl:Interface" href="../base.xmi#//@modules.0/@classifiers.33"/>
              </propertyType>
            </sequence>
          </rhs>
        </newRules>
      </textualSyntaxDef>
      <mappingDef>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code=""/>
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@extensionDefs.1/@textualSyntaxDef/@newRules.0/@rhs/@sequence.2"/>
              <referencedElement href="../base.xmi#//@modules.0/@classifiers.33/@methods.0"/>
              <arguments/>
            </expr>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code=".sample()"/>
        </statements>
      </mappingDef>
    </extensionDefs>
  </modules>
</dbl:Model>
