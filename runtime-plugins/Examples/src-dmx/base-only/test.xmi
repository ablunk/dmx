<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="lib">
    <model href="lib.xmi#/"/>
  </imports>
  <modules name="test">
    <classifiers xsi:type="dbl:Clazz" name="Auto">
      <attributes name="autobahn">
        <typeArrayDimensions>
          <size xsi:type="dbl:IntLiteral" value="10"/>
        </typeArrayDimensions>
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      </attributes>
      <attributes name="arr">
        <primitiveType xsi:type="dbl:IntType"/>
        <typeArrayDimensions>
          <size xsi:type="dbl:IntLiteral" value="6"/>
        </typeArrayDimensions>
        <typeArrayDimensions>
          <size xsi:type="dbl:IntLiteral" value="3"/>
        </typeArrayDimensions>
      </attributes>
      <attributes name="bu">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="20"/>
      </attributes>
      <attributes name="oelstand">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="m">
        <classifierType referencedElement="//@modules.1/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.1/@classifiers.0">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="13"/>
              <callArguments xsi:type="dbl:IntLiteral" value="21"/>
            </callPart>
          </classifierType>
        </initialValue>
      </attributes>
      <attributes name="t">
        <primitiveType xsi:type="dbl:BoolType"/>
      </attributes>
      <attributes name="x">
        <classifierType referencedElement="//@modules.1/@classifiers.0"/>
      </attributes>
      <attributes name="l">
        <primitiveType xsi:type="dbl:StringType"/>
        <initialValue xsi:type="dbl:StringLiteral" value="bye"/>
      </attributes>
      <attributes name="waiting">
        <classifierType>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3"/>
          </classifierType>
        </initialValue>
      </attributes>
      <methods name="umbenennen">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.2"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.0/@parameters.0"/>
        </statements>
        <parameters name="newName">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
      <methods name="display">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:ForStatement">
          <statements xsi:type="dbl:Variable" name="temp">
            <primitiveType xsi:type="dbl:IntType"/>
            <initialValue xsi:type="dbl:IntLiteral"/>
          </statements>
          <termination xsi:type="dbl:Less">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@statements.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="6"/>
          </termination>
          <increment>
            <variable>
              <idExpr referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@statements.0"/>
            </variable>
            <value xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@statements.0"/>
              <op2 xsi:type="dbl:IntLiteral" value="1"/>
            </value>
          </increment>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:ForStatement">
              <statements xsi:type="dbl:Variable" name="temp2">
                <primitiveType xsi:type="dbl:IntType"/>
                <initialValue xsi:type="dbl:IntLiteral"/>
              </statements>
              <termination xsi:type="dbl:Less">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@body/@statements.0/@statements.0"/>
                <op2 xsi:type="dbl:IntLiteral" value="3"/>
              </termination>
              <increment>
                <variable>
                  <idExpr referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@body/@statements.0/@statements.0"/>
                </variable>
                <value xsi:type="dbl:Plus">
                  <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@body/@statements.0/@statements.0"/>
                  <op2 xsi:type="dbl:IntLiteral" value="1"/>
                </value>
              </increment>
              <body xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Print">
                  <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.1">
                    <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@statements.0"/>
                    <arrayIndex xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0/@body/@statements.0/@statements.0"/>
                  </outputs>
                </statements>
              </body>
            </statements>
          </body>
        </statements>
      </methods>
      <initialBlock>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr>
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.8"/>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
            <callPart>
              <callArguments xsi:type="dbl:IdExpr">
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </callArguments>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr>
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.8"/>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.1"/>
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="1"/>
              <callArguments xsi:type="dbl:IdExpr">
                <predefinedId xsi:type="dbl:MeLiteral"/>
              </callArguments>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.8"/>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.7"/>
            <callPart/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.8"/>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.4"/>
            <callPart/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.0">
              <arrayIndex xsi:type="dbl:IntLiteral"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Variable" name="y" clazz="true">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="3"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.3"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@constructor/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.1">
              <arrayIndex xsi:type="dbl:IntLiteral"/>
              <arrayIndex xsi:type="dbl:IntLiteral"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.2"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.1">
              <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
              <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.3"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.1">
              <arrayIndex xsi:type="dbl:IntLiteral" value="2"/>
              <arrayIndex xsi:type="dbl:IntLiteral" value="2"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@initialBlock/@statements.5"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@variables.2">
              <arrayIndex xsi:type="dbl:IntLiteral" value="3"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.7"/>
        </statements>
      </initialBlock>
      <finalBlock/>
      <constructor>
        <parameters name="pe">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </constructor>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="Moped">
      <attributes name="i" clazz="true">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="b">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      </attributes>
      <attributes name="s">
        <primitiveType xsi:type="dbl:StringType"/>
      </attributes>
      <methods name="setCar">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.0">
              <callPart>
                <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.5"/>
              </callPart>
            </classifierType>
          </value>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@attributes.2"/>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@attributes.1"/>
        </statements>
      </methods>
      <methods name="rammtAuto">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.2"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.2">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.0"/>
          </value>
        </statements>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.0">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.0"/>
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="8"/>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Variable" name="r">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0">
            <parentIdExpr>
              <predefinedId xsi:type="dbl:MeLiteral"/>
            </parentIdExpr>
            <callPart/>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.3">
            <parentIdExpr>
              <predefinedId xsi:type="dbl:SuperLiteral"/>
            </parentIdExpr>
          </value>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:InstanceOf">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.0"/>
            <op2 xsi:type="dbl:TypeAccess">
              <idExpr referencedElement="//@modules.0/@classifiers.0"/>
            </op2>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:StringLiteral" value="Oelstand des Autos: "/>
              <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.3">
                <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.0"/>
              </outputs>
            </statements>
          </trueCase>
        </statements>
        <parameters name="truck">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </parameters>
      </methods>
      <superClasses clazz="//@modules.0/@classifiers.0">
        <constructorArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@constructor/@parameters.0"/>
      </superClasses>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.2"/>
          </variable>
          <value xsi:type="dbl:StringLiteral" value="hallo"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@variables.6">
              <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
            </idExpr>
          </variable>
          <value xsi:type="dbl:IdExpr">
            <predefinedId xsi:type="dbl:MeLiteral"/>
          </value>
        </statements>
      </initialBlock>
      <constructor>
        <parameters name="stand">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="autoname2">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </constructor>
    </classifiers>
    <procedures name="sayHello">
      <primitiveType xsi:type="dbl:IntType"/>
      <statements xsi:type="dbl:Return">
        <value xsi:type="dbl:IntLiteral" value="5"/>
      </statements>
      <parameters name="b">
        <classifierType referencedElement="//@modules.1/@classifiers.0"/>
      </parameters>
    </procedures>
    <procedures name="setCar">
      <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@variables.4"/>
        </variable>
        <value xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.0">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="15"/>
            </callPart>
          </classifierType>
        </value>
      </statements>
      <statements xsi:type="dbl:Assignment">
        <variable>
          <idExpr referencedElement="//@modules.0/@variables.6">
            <arrayIndex xsi:type="dbl:IntLiteral"/>
          </idExpr>
        </variable>
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.4"/>
      </statements>
      <statements xsi:type="dbl:Return">
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.4"/>
      </statements>
    </procedures>
    <variables name="ran">
      <primitiveType xsi:type="dbl:BoolType"/>
      <initialValue xsi:type="dbl:TrueLiteral"/>
    </variables>
    <variables name="zum">
      <primitiveType xsi:type="dbl:BoolType"/>
      <initialValue xsi:type="dbl:FalseLiteral"/>
    </variables>
    <variables name="ser">
      <primitiveType xsi:type="dbl:StringType"/>
      <typeArrayDimensions>
        <size xsi:type="dbl:IntLiteral" value="15"/>
      </typeArrayDimensions>
    </variables>
    <variables name="m">
      <classifierType referencedElement="//@modules.0/@classifiers.1"/>
    </variables>
    <variables name="a">
      <classifierType referencedElement="//@modules.0/@classifiers.0"/>
    </variables>
    <variables name="number">
      <primitiveType xsi:type="dbl:IntType"/>
    </variables>
    <variables name="autos">
      <typeArrayDimensions>
        <size xsi:type="dbl:IntLiteral" value="5"/>
      </typeArrayDimensions>
      <classifierType referencedElement="//@modules.0/@classifiers.0"/>
    </variables>
  </modules>
  <modules name="test2">
    <classifiers xsi:type="dbl:Clazz" name="Point">
      <attributes name="coordx">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@classifiers.0/@constructor/@parameters.0"/>
      </attributes>
      <attributes name="coordy">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@classifiers.0/@constructor/@parameters.1"/>
      </attributes>
      <methods name="contArr">
        <primitiveType xsi:type="dbl:StringType"/>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.2">
            <arrayIndex xsi:type="dbl:IntLiteral" value="3"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.7"/>
            <callPart/>
          </outputs>
        </statements>
      </methods>
      <constructor>
        <parameters name="xa">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="yy">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </constructor>
    </classifiers>
    <procedures name="sayHi">
      <primitiveType xsi:type="dbl:IntType"/>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.7"/>
          <callPart/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Return">
        <value xsi:type="dbl:IntLiteral" value="5"/>
      </statements>
      <parameters name="c">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      </parameters>
    </procedures>
    <procedures name="main">
      <primitiveType xsi:type="dbl:IntType"/>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.7"/>
          <callPart/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Variable" name="audi">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.0">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="50"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.1"/>
          <callPart>
            <callArguments xsi:type="dbl:IntLiteral"/>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@procedures.1/@statements.1"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr referencedElement="//@modules.1/@procedures.0">
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@procedures.1/@statements.1"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr referencedElement="//@modules.0/@procedures.1">
          <callPart/>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.0">
          <parentIdExpr referencedElement="//@modules.1/@procedures.1/@statements.1"/>
          <callPart>
            <callArguments xsi:type="dbl:IntLiteral" value="23"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.1">
          <parentIdExpr referencedElement="//@modules.1/@procedures.1/@statements.1"/>
          <callPart/>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Variable" name="mop">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.1">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="13"/>
              <callArguments xsi:type="dbl:IntLiteral" value="13"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.1"/>
          <callPart>
            <callArguments xsi:type="dbl:IntLiteral"/>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@procedures.1/@statements.7"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.1">
          <parentIdExpr referencedElement="//@modules.1/@procedures.1/@statements.7"/>
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@procedures.1/@statements.1"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Variable" name="p">
        <classifierType referencedElement="//@modules.1/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.1/@classifiers.0">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="4"/>
              <callArguments xsi:type="dbl:IntLiteral" value="3"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.1/@classifiers.0/@methods.0">
          <parentIdExpr referencedElement="//@modules.1/@procedures.1/@statements.10"/>
          <callPart/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@attributes.3">
          <parentIdExpr referencedElement="//@modules.0/@variables.6">
            <arrayIndex xsi:type="dbl:IntLiteral"/>
          </parentIdExpr>
        </outputs>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.1"/>
          <callPart>
            <callArguments xsi:type="dbl:IntLiteral"/>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.6">
              <arrayIndex xsi:type="dbl:IntLiteral"/>
            </callArguments>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.1/@variables.1"/>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.4"/>
          <callPart/>
        </outputs>
      </statements>
      <statements xsi:type="dbl:Variable" name="m">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <initialValue xsi:type="dbl:Cast">
          <classifierType referencedElement="//@modules.0/@classifiers.1"/>
          <op xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.6">
            <arrayIndex xsi:type="dbl:IntLiteral" value="1"/>
          </op>
        </initialValue>
      </statements>
    </procedures>
    <variables name="x">
      <primitiveType xsi:type="dbl:IntType"/>
    </variables>
    <variables name="bu">
      <classifierType>
        <referencedElement href="lib.xmi#//@modules.0/@classifiers.3"/>
      </classifierType>
      <initialValue xsi:type="dbl:CreateObject">
        <classifierType>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
      </initialValue>
    </variables>
  </modules>
</dbl:Model>
