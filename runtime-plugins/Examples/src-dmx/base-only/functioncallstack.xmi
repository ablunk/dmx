<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <modules name="function_call_stack">
    <classifiers xsi:type="dbl:Clazz" name="Process2" active="true">
      <attributes name="result">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.0/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@constructor/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="5"/>
          </value>
        </statements>
      </initialBlock>
      <finalBlock>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="Process2 terminated"/>
        </statements>
      </finalBlock>
      <actionsBlock>
        <statements xsi:type="dbl:Reactivate">
          <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
        </statements>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="5"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="Process2 is alive"/>
        </statements>
      </actionsBlock>
      <constructor>
        <parameters name="prio">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="label2">
          <primitiveType xsi:type="dbl:StringType"/>
        </parameters>
      </constructor>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="Process" active="true">
      <attributes name="count">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral"/>
      </attributes>
      <methods name="pass">
        <primitiveType xsi:type="dbl:DoubleType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.3"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.3"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.4"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.4"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="n">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.1">
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.0"/>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.1"/>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.2"/>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0/@parameters.3"/>
            </callPart>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0/@statements.5"/>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:DoubleLiteral" value="2.3456"/>
        </statements>
        <parameters name="a">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="g">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="h">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="test">
          <classifierType referencedElement="//@modules.0/@classifiers.2"/>
        </parameters>
        <parameters name="test2">
          <classifierType referencedElement="//@modules.0/@classifiers.2"/>
        </parameters>
      </methods>
      <methods name="g">
        <primitiveType xsi:type="dbl:IntType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.3"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Variable" name="x">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="3"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="y">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="4"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.1/@statements.1"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.1"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.1/@statements.2"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.1/@parameters.2"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="3"/>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:IntLiteral" value="15"/>
        </statements>
        <parameters name="a">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="g">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="h">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="test">
          <classifierType referencedElement="//@modules.0/@classifiers.2"/>
        </parameters>
      </methods>
      <initialBlock>
        <statements xsi:type="dbl:Variable" name="result">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@constructor/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="5"/>
          </initialValue>
        </statements>
      </initialBlock>
      <finalBlock>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="Process1 terminated"/>
        </statements>
      </finalBlock>
      <actionsBlock>
        <statements xsi:type="dbl:Variable" name="s">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="13"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="t">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="12"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="l">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="10"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="p1">
          <classifierType referencedElement="//@modules.0/@classifiers.2"/>
          <initialValue xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.2">
              <callPart>
                <callArguments xsi:type="dbl:IntLiteral" value="1"/>
                <callArguments xsi:type="dbl:IntLiteral" value="2"/>
              </callPart>
            </classifierType>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:Variable" name="p2">
          <classifierType referencedElement="//@modules.0/@classifiers.2"/>
          <initialValue xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.2">
              <callPart>
                <callArguments xsi:type="dbl:IntLiteral" value="3"/>
                <callArguments xsi:type="dbl:IntLiteral" value="4"/>
              </callPart>
            </classifierType>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.3"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.3"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.4"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.4"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Wait"/>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:Less">
            <op1 xsi:type="dbl:TimeLiteral"/>
            <op2 xsi:type="dbl:IntLiteral" value="8"/>
          </condition>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="gr">
              <primitiveType xsi:type="dbl:DoubleType"/>
              <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@methods.0">
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.2"/>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.0"/>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.1"/>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.3"/>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.4"/>
                </callPart>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.10/@body/@statements.0"/>
            </statements>
            <statements xsi:type="dbl:Assignment">
              <variable>
                <idExpr referencedElement="//@modules.0/@classifiers.1/@attributes.0"/>
              </variable>
              <value xsi:type="dbl:Plus">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@attributes.0"/>
                <op2 xsi:type="dbl:IntLiteral" value="1"/>
              </value>
            </statements>
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:TimeLiteral"/>
            </statements>
          </body>
        </statements>
      </actionsBlock>
      <constructor>
        <parameters name="prio">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="label2">
          <primitiveType xsi:type="dbl:StringType"/>
        </parameters>
      </constructor>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="point">
      <attributes name="x">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="y">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.2/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@constructor/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.2/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@constructor/@parameters.1"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="Point created"/>
        </statements>
      </initialBlock>
      <finalBlock>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="Point destroyed"/>
        </statements>
      </finalBlock>
      <constructor>
        <parameters name="a">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="b">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </constructor>
    </classifiers>
    <procedures name="main">
      <primitiveType xsi:type="dbl:IntType"/>
      <statements xsi:type="dbl:Variable" name="p">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.1">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="1"/>
              <callArguments xsi:type="dbl:StringLiteral" value="Process"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="pro">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:Advance">
        <time xsi:type="dbl:IntLiteral" value="50"/>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:StringLiteral" value="Modellzeit Ende: "/>
        <outputs xsi:type="dbl:TimeLiteral"/>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
