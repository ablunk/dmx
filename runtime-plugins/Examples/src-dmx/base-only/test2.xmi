<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <modules name="TwoCountersAdvance">
    <classes name="Counter">
      <attributes name="count">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IntLiteral"/>
      </attributes>
      <attributes name="count2">
        <primitiveType xsi:type="dbl:DoubleType"/>
        <initialValue xsi:type="dbl:IntLiteral" value="5"/>
      </attributes>
      <attributes name="buf">
        <primitiveType xsi:type="dbl:StringType"/>
        <initialValue xsi:type="dbl:StringLiteral" value="hello"/>
      </attributes>
      <methods name="m">
        <primitiveType xsi:type="dbl:IntType"/>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:LessEqual">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </condition>
          <trueCase xsi:type="dbl:Return">
            <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
          </trueCase>
        </statements>
        <statements xsi:type="dbl:Return">
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
              <callPart>
                <callArguments xsi:type="dbl:Minus">
                  <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
                  <op2 xsi:type="dbl:IntLiteral" value="1"/>
                </callArguments>
              </callPart>
            </op1>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
              <callPart>
                <callArguments xsi:type="dbl:Minus">
                  <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0/@parameters.0"/>
                  <op2 xsi:type="dbl:IntLiteral" value="2"/>
                </callArguments>
              </callPart>
            </op2>
          </value>
        </statements>
        <parameters name="i">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
    </classes>
    <functions name="make">
      <classifierType referencedElement="//@modules.0/@classes.0"/>
      <statements xsi:type="dbl:Return">
        <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.2"/>
      </statements>
    </functions>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="c">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0">
          <callPart/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="c2">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.0">
          <callPart/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.0/@methods.0">
          <parentIdExpr referencedElement="//@modules.0/@functions.1/@statements.0"/>
          <callPart>
            <callArguments xsi:type="dbl:IntLiteral" value="10"/>
          </callPart>
        </outputs>
      </statements>
    </functions>
    <variables name="debug">
      <primitiveType xsi:type="dbl:BoolType"/>
      <initialValue xsi:type="dbl:TrueLiteral"/>
    </variables>
    <variables name="limit">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="10"/>
    </variables>
    <variables name="c3">
      <classifierType referencedElement="//@modules.0/@classes.0"/>
      <initialValue xsi:type="dbl:CreateObject">
        <classifierType referencedElement="//@modules.0/@classes.0"/>
      </initialValue>
    </variables>
  </modules>
</dbl:Model>
