module manyClasses{

	double xuber(){
		print "bye";
		return 0.0;
	}
	
	class Berin(int xu, int yy){
		int top = xu;
		int last = yy;
		
		initial{
			print "Berin Start";
		}
	
		int sero(int x){
			return 2*x;
		}
		void topo(){
			print "topo";
		}
		
		double sched(){
			return 0.0;
		}
		
		final{
			print "berin Ende" ;
		}
	}

	active class Affe(int prio, string label){
		int p = prio;
		int age = 0;
		int fage = 10;
		int x;
		Berin b;
		
		void beo(){
			print "ende";
		}
		 
		 void f(){
		 	print "hallo";
		 	yield;
		 	beo();
		 }
		 
		 void g(){
			f();
		 	int y;
		 	double result = 0.0;
		 }
		 
		 void h(){
		 	g();
		 	advance 2;
		 }
		 
		 void i(){
		 	h();
		 }
		
		initial{
			print "Affe1 created";
			print p;
			b = new Berin(5,10);
		}
		
		actions{
			while(age<fage){
				advance 1;
				x = x+1;
				age = age + 1;
				i();
				xuber();
				b.topo();
				print x;
			}
			print time;
		}
		
		final{
			print "Affe1 died";
		}
	}
	
	active class Affe2(int prio2, string label2){
		int p2 = prio2;
		int age2 = 0;
		int fage2 = 20;
		
		initial{
			print "Affe2 created";
			print p2;
		}
		
		actions{
			while(age2<fage2){
				advance 1;
				age2 = age2 +1;
			}
			print time;
		}
		
		final{
			print "Affe2 died";
		}
	}
	
	active class Affe3(int prio3, string label3){
		int p3 = prio3;
		int age3 = 0;
		int fage3 = 30;
		
		initial{
			print "Affe3 created";
			print p3;
		}
		
		actions{
			while(age3<fage3){
				advance 1;
				age3 = age3 +1;
			}
			print time;
		}
		
		final{
			print "Affe3 died";
		}
	}
	
	active class Affe4(int prio4, string label4){
		int p4 = prio4;
		int age4 = 0;
		int fage4 = 40;
		
		initial{
			print "Affe4 created";
			print p4;
		}
		
		actions{
			while(age4 < fage4){
				advance 1;
				age4 = age4 +1;
			}
			print time;
		}
		
		final{
			print "Affe4 died";
		}
	}

	active class Affe5(int prio5, string label5){
		int p5 = prio5;
		int age5 = 0;
		int fage5 = 50;
		
		initial{
			print "Affe5 created";
			print p5;
		}
		
		actions{
			while(age5<fage5){
				advance 1;
				age5 = age5+1;
			}
			print time;
		}
		
		final{
			print "Affe5 died";
		}
	}
	
	active class Affe6(int prio6, string label6){
		int p6 = prio6;
		int age6 = 0;
		int fage6 = 60;
		
		initial{
			print "Affe6 created";
			print p6;
		}
		
		actions{
			while(age6 < fage6){
				advance 1;
				age6 = age6+1;
			}
			print time;
		}
		
		final{
			print "Affe6 died";
		}
	}

	active class Affe7(int prio7, string label7){
		int p7 = prio7;
		int age7 = 0;
		int fage7 = 70;
		
		initial{
			print "Affe7 created";
			print p7;
		}
		
		actions{
			while(age7 < fage7){
				advance 1;
				age7 = age7 +1;
			}
			print time;
		}
		
		final{
			print "Affe7 died";
		}
	}
	
	active class Affe8(int prio8, string label8){
		int p8 = prio8;
		int age8 = 0;
		int fage8 = 80;
		
		initial{
			print "Affe8 created";
			print p8;
		}
		
		actions{
			while(age8 < fage8){
				advance 1;
				age8 = age8 +1;
			}
			print time;
		}
		
		final{
			print "Affe8 died";
		}
	}
	
	active class Affe9(int prio9, string label9){
		int p9 = prio9;
		int age9 = 0;
		int fage9 = 90;
		
		initial{
			print "Affe9 created";
			print p9;
		}
		
		actions{
			while(age9 < fage9){
				advance 1;
				age9 = age9 +1;
			}
			print time;
		}
		
		final{
			print "Affe9 died";
		}
	}
	
	active class Affe10(int prio10, string label10){
		int p10 = prio10;
		int age10 = 0;
		int fage10 = 100;
		
		initial{
			print "Affe10 created";
			print p10;
		}
		
		actions{
			while(age10 < fage10){
				advance 1;
				age10 = age10 + 1;
			}
			print time;
		}
		
		final{
			print "Affe10 died";
		}
	}
	
	int main(){
		Affe affe = new Affe(1, "Affe1");
		Affe2 affe2 = new Affe2(2, "Affe2");
		Affe3 affe3 = new Affe3(3, "Affe3");
		Affe4 affe4 = new Affe4(4, "Affe4");
		Affe5 affe5 = new Affe5(5, "Affe5");
		Affe6 affe6 = new Affe6(6, "Affe6");
		Affe7 affe7 = new Affe7(7, "Affe7");
		Affe8 affe8 = new Affe8(8, "Affe8");
		Affe9 affe9 = new Affe9(9, "Affe9");
		Affe10 affe10 = new Affe10(10, "Affe10");
	
		activate affe;
		activate affe2;
		activate affe3;
		activate affe4;
		activate affe5;
		activate affe6;
		activate affe7;
		activate affe8;
		activate affe9;
		activate affe10;
		
		advance 150;
		print time;
	}
}