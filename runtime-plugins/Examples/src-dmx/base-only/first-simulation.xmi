<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="lib">
    <model href="lib.xmi#/"/>
  </imports>
  <modules name="simulation">
    <classifiers xsi:type="dbl:Clazz" name="Superprinter" active="true">
      <attributes name="p">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@constructor/@parameters.0"/>
      </attributes>
      <attributes name="waiting">
        <classifierType>
          <referencedElement href="lib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3"/>
          </classifierType>
        </initialValue>
      </attributes>
      <methods name="h">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="YIELD in Funktion h"/>
        </statements>
        <statements xsi:type="dbl:Yield"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.0/@parameters.0"/>
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.0/@parameters.1"/>
        </statements>
        <parameters name="k">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="n">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
      <methods name="f">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Variable" name="x">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="y">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@parameters.1"/>
        </statements>
        <statements xsi:type="dbl:Yield"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="YIELD in Funktion f"/>
        </statements>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.0">
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.0"/>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.1/@statements.1"/>
            </callPart>
          </callIdExpr>
        </statements>
        <parameters name="i">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="j">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
      <methods name="g">
        <primitiveType xsi:type="dbl:IntType"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="g: "/>
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="x">
          <primitiveType xsi:type="dbl:DoubleType"/>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="u">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@parameters.1"/>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:Less">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="z">
              <primitiveType xsi:type="dbl:DoubleType"/>
              <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.1"/>
            </statements>
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@parameters.0"/>
            </statements>
            <statements xsi:type="dbl:Variable" name="result">
              <primitiveType xsi:type="dbl:DoubleType"/>
              <initialValue xsi:type="dbl:DoubleLiteral" value="1.0"/>
            </statements>
            <statements xsi:type="dbl:ForStatement">
              <statements xsi:type="dbl:Variable" name="pu">
                <primitiveType xsi:type="dbl:IntType"/>
                <initialValue xsi:type="dbl:IntLiteral" value="2"/>
              </statements>
              <termination xsi:type="dbl:LessEqual">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.3/@statements.0"/>
                <op2 xsi:type="dbl:IntLiteral" value="10"/>
              </termination>
              <increment>
                <variable>
                  <idExpr referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.3/@statements.0"/>
                </variable>
                <value xsi:type="dbl:Plus">
                  <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.3/@statements.0"/>
                  <op2 xsi:type="dbl:IntLiteral" value="1"/>
                </value>
              </increment>
              <body xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Assignment">
                  <variable>
                    <idExpr referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.2"/>
                  </variable>
                  <value xsi:type="dbl:Mul">
                    <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.2"/>
                    <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.3/@statements.0"/>
                  </value>
                </statements>
                <statements xsi:type="dbl:Print">
                  <outputs xsi:type="dbl:StringLiteral" value="Resultat= "/>
                  <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.2"/>
                </statements>
              </body>
            </statements>
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.3/@trueCase/@statements.2"/>
            </statements>
            <statements xsi:type="dbl:ProcedureCall">
              <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.1">
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.1"/>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.2"/>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.1"/>
              <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@methods.2/@statements.2"/>
            </statements>
            <statements xsi:type="dbl:Yield"/>
            <statements xsi:type="dbl:Print">
              <outputs xsi:type="dbl:StringLiteral" value="YIELD in Funktion g"/>
            </statements>
          </trueCase>
          <falseCase xsi:type="dbl:Return">
            <value xsi:type="dbl:IntLiteral"/>
          </falseCase>
        </statements>
        <parameters name="l">
          <primitiveType xsi:type="dbl:DoubleType"/>
        </parameters>
        <parameters name="m">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
      </methods>
      <initialBlock>
        <statements xsi:type="dbl:Variable" name="result">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:Mul">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@constructor/@parameters.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="5"/>
          </initialValue>
        </statements>
      </initialBlock>
      <finalBlock/>
      <actionsBlock>
        <statements xsi:type="dbl:Variable" name="s">
          <primitiveType xsi:type="dbl:DoubleType"/>
          <initialValue xsi:type="dbl:DoubleLiteral" value="0.96"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="t">
          <primitiveType xsi:type="dbl:IntType"/>
          <initialValue xsi:type="dbl:IntLiteral" value="12"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="var">
          <primitiveType xsi:type="dbl:BoolType"/>
          <initialValue xsi:type="dbl:TrueLiteral"/>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.2"/>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="temp">
              <primitiveType xsi:type="dbl:IntType"/>
              <initialValue xsi:type="dbl:IntLiteral"/>
            </statements>
            <statements xsi:type="dbl:WhileStatement">
              <condition xsi:type="dbl:Less">
                <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.3/@trueCase/@statements.0"/>
                <op2 xsi:type="dbl:IntLiteral" value="10"/>
              </condition>
              <body xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:ProcedureCall">
                  <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.1">
                    <callPart>
                      <callArguments xsi:type="dbl:IntLiteral" value="1"/>
                      <callArguments xsi:type="dbl:IntLiteral" value="1"/>
                    </callPart>
                  </callIdExpr>
                </statements>
                <statements xsi:type="dbl:Assignment">
                  <variable>
                    <idExpr referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.3/@trueCase/@statements.0"/>
                  </variable>
                  <value xsi:type="dbl:Plus">
                    <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.3/@trueCase/@statements.0"/>
                    <op2 xsi:type="dbl:IntLiteral" value="1"/>
                  </value>
                </statements>
              </body>
            </statements>
          </trueCase>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.0"/>
          <outputs xsi:type="dbl:StringLiteral" value=" "/>
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.1"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="f">
          <primitiveType xsi:type="dbl:StringType"/>
          <initialValue xsi:type="dbl:StringLiteral" value="hallo"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.2"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="printer">
          <classifierType referencedElement="//@modules.0/@classifiers.3"/>
          <initialValue xsi:type="dbl:CreateObject">
            <classifierType referencedElement="//@modules.0/@classifiers.3">
              <callPart>
                <callArguments xsi:type="dbl:IntLiteral" value="3"/>
                <callArguments xsi:type="dbl:DoubleLiteral" value="5.5"/>
              </callPart>
            </classifierType>
          </initialValue>
        </statements>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr>
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@attributes.1"/>
            <referencedElement href="lib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
            <callPart>
              <callArguments xsi:type="dbl:ActiveLiteral"/>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.0"/>
          <outputs xsi:type="dbl:StringLiteral" value=" "/>
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.1"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.3/@attributes.0">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.7"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.3/@attributes.1">
            <parentIdExpr referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.7"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:ProcedureCall">
          <callIdExpr referencedElement="//@modules.0/@classifiers.0/@methods.2">
            <callPart>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.0"/>
              <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.1"/>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.0"/>
          <outputs xsi:type="dbl:StringLiteral" value=" "/>
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.0/@actionsBlock/@statements.1"/>
        </statements>
        <statements xsi:type="dbl:Yield"/>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="SuperPrinter ADVANCE 1"/>
        </statements>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="1"/>
        </statements>
      </actionsBlock>
      <constructor>
        <parameters name="prio">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="label2">
          <primitiveType xsi:type="dbl:StringType"/>
        </parameters>
      </constructor>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="Printer" active="true">
      <attributes name="number">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@constructor/@parameters.0"/>
      </attributes>
      <superClasses clazz="//@modules.0/@classifiers.0">
        <constructorArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@constructor/@parameters.0"/>
        <constructorArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@constructor/@parameters.1"/>
      </superClasses>
      <initialBlock>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="hallo drucker: "/>
          <outputs xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@constructor/@parameters.0"/>
        </statements>
      </initialBlock>
      <finalBlock/>
      <actionsBlock>
        <statements xsi:type="dbl:Variable" name="p">
          <primitiveType xsi:type="dbl:DoubleType"/>
          <initialValue xsi:type="dbl:DoubleLiteral" value="12.0"/>
        </statements>
        <statements xsi:type="dbl:ActivateObject">
          <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.2"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.0"/>
          </variable>
          <value xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.1/@actionsBlock/@statements.0"/>
            <op2 xsi:type="dbl:IntLiteral" value="1"/>
          </value>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="ADVANCE Printer, 3"/>
        </statements>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="3"/>
        </statements>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="Modellzeit Printer: "/>
          <outputs xsi:type="dbl:TimeLiteral"/>
        </statements>
      </actionsBlock>
      <constructor>
        <parameters name="prio2">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="label">
          <primitiveType xsi:type="dbl:StringType"/>
        </parameters>
      </constructor>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="HuiBu" active="true">
      <attributes name="cru">
        <primitiveType xsi:type="dbl:IntType"/>
        <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.2/@constructor/@parameters.0"/>
      </attributes>
      <initialBlock/>
      <finalBlock/>
      <actionsBlock>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:StringLiteral" value="ADVANCE HuiBu, 2"/>
        </statements>
        <statements xsi:type="dbl:Advance">
          <time xsi:type="dbl:IntLiteral" value="2"/>
        </statements>
      </actionsBlock>
      <constructor>
        <parameters name="prio3">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="label3">
          <primitiveType xsi:type="dbl:StringType"/>
        </parameters>
      </constructor>
    </classifiers>
    <classifiers xsi:type="dbl:Clazz" name="Bibu">
      <attributes name="number">
        <primitiveType xsi:type="dbl:IntType"/>
      </attributes>
      <attributes name="real">
        <primitiveType xsi:type="dbl:DoubleType"/>
      </attributes>
      <initialBlock>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.3/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.3/@constructor/@parameters.0"/>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classifiers.3/@attributes.1"/>
          </variable>
          <value xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classifiers.3/@constructor/@parameters.1"/>
        </statements>
      </initialBlock>
      <constructor>
        <parameters name="x">
          <primitiveType xsi:type="dbl:IntType"/>
        </parameters>
        <parameters name="y">
          <primitiveType xsi:type="dbl:DoubleType"/>
        </parameters>
      </constructor>
    </classifiers>
    <procedures name="main">
      <primitiveType xsi:type="dbl:IntType"/>
      <statements xsi:type="dbl:Variable" name="p">
        <classifierType referencedElement="//@modules.0/@classifiers.1"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.1">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="1"/>
              <callArguments xsi:type="dbl:StringLiteral" value="Printer"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="sp">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.0">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="1"/>
              <callArguments xsi:type="dbl:StringLiteral" value="Superprinter"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="hb">
        <classifierType referencedElement="//@modules.0/@classifiers.2"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.2">
            <callPart>
              <callArguments xsi:type="dbl:IntLiteral" value="1"/>
              <callArguments xsi:type="dbl:StringLiteral" value="HuiBu"/>
            </callPart>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
      </statements>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.1"/>
      </statements>
      <statements xsi:type="dbl:Advance">
        <time xsi:type="dbl:IntLiteral" value="6"/>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:StringLiteral" value="Modellzeit: "/>
        <outputs xsi:type="dbl:TimeLiteral"/>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
