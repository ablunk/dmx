module function_call_stack{

	active class Process2(int prio, string label2){
		int result;
		initial{
			result = prio * 5;
		}
		actions{
			reactivate p;
			advance 5;
			print "Process2 is alive";
		}
		final{ print "Process2 terminated";}
	}

	active class Process(int prio, string label2){
	
		int count = 0;
	
		double pass(int a,int g, int h, point test, point test2){
			print test.x;
			print test.y;
			print test2.x;
			print test2.y;
			advance 1;
			int n = g(a,g,h,test);
			print n;
			return 2.3456;
		}
		
		int g(int a, int g, int h, point test){
			print test.y; 
			int x = 3;
			int y = 4;
			print x*g;
			print y*h;
			advance 3;
			return 15;
		}
		
		initial{
			int result = prio * 5;
		}
		actions{
			int s = 13;
			int t = 12;
			int l = 10;
			point p1 = new point(1,2);
			point p2 = new point(3,4);
			print p1.x;
			print p1.y;
			print p2.x;
			print p2.y;
			wait;
			while(time < 8){
				double gr = pass(l,s,t,p1,p2);
				print gr;
				count=count+1;
				print time;
			}
		}
		final{print "Process1 terminated";}
	}
	
	class point(int a, int b){
	int x;
	int y; 
	initial{
		x = a;
		y = b;
		print "Point created";
	}
	final{
		print "Point destroyed";
	}
	}
	
	int main(){
		Process p = new Process(1, "Process");
		Process2 pro;
		activate p;
		advance 50;
		print "Modellzeit Ende: ",time;
	}

}