<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="foreach">
    <model href="foreach.xmi#/"/>
  </imports>
  <modules name="foreach_test">
    <classifiers xsi:type="dbl:Clazz" name="A"/>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="alist" concreteSyntax="ArrayList alist = new ArrayList">
        <classifierType concreteSyntax="ArrayList">
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.4"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject" concreteSyntax="new ArrayList">
          <classifierType concreteSyntax="ArrayList">
            <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.4"/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ProcedureCall" concreteSyntax="alist.add(new A)">
        <callIdExpr concreteSyntax="alist.add(new A)">
          <parentIdExpr concreteSyntax="alist" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
          <callPart>
            <callArguments xsi:type="dbl:CreateObject" concreteSyntax="new A">
              <classifierType concreteSyntax="A" referencedElement="//@modules.0/@classifiers.0"/>
            </callArguments>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall" concreteSyntax="alist.add(new A)">
        <callIdExpr concreteSyntax="alist.add(new A)">
          <parentIdExpr concreteSyntax="alist" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
          <callPart>
            <callArguments xsi:type="dbl:CreateObject" concreteSyntax="new A">
              <classifierType concreteSyntax="A" referencedElement="//@modules.0/@classifiers.0"/>
            </callArguments>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ForEach" concreteSyntax="foreach (A a in alist) {&#xA;&#x9;&#x9;print alist.indexOf(a) + &quot;\n&quot;;&#xA;&#x9;}" instanceOfExtensionDefinition="true">
        <elementVariable name="a" concreteSyntax="A a">
          <classifierType concreteSyntax="A" referencedElement="//@modules.0/@classifiers.0"/>
        </elementVariable>
        <collection xsi:type="dbl:IdExpr" concreteSyntax="alist" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
        <body concreteSyntax="{&#xA;&#x9;&#x9;print alist.indexOf(a) + &quot;\n&quot;;&#xA;&#x9;}">
          <statements xsi:type="dbl:Print" concreteSyntax="print alist.indexOf(a) + &quot;\n&quot;">
            <outputs xsi:type="dbl:Plus" concreteSyntax="alist.indexOf(a) + &quot;\n&quot;">
              <op1 xsi:type="dbl:IdExpr" concreteSyntax="alist.indexOf(a)">
                <parentIdExpr concreteSyntax="alist" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
                <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.6"/>
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr" concreteSyntax="a" referencedElement="//@modules.0/@procedures.0/@statements.3/@elementVariable"/>
                </callPart>
              </op1>
              <op2 xsi:type="dbl:StringLiteral" concreteSyntax="&quot;\n&quot;" value="\n"/>
            </outputs>
          </statements>
        </body>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
