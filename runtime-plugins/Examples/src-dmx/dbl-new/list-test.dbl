module ecore_test {

class Object {
	bindings {
		"java" -> "java.lang.Object"
	}
}

class Iterator {
	bindings {
		"java" -> "java.util.Iterator"
	}
	
	boolean hasNext() abstract;
	Object next() abstract;
	void remove() abstract;
}

class List {
	bindings {
		"java" -> "java.util.List"
	}
	
	boolean add(Object e) abstract;
	boolean add(int index, Object e) abstract;
	void clear() abstract;
	boolean contains(Object e) abstract;
	int size() abstract;
	Object get(int index) abstract;
	int indexOf(Object e) abstract;
	boolean isEmpty() abstract;
	Object remove(int index) abstract;
	boolean remove(Object e) abstract;
	Object set(int index, Object e) abstract;
	Object array[] toArray() abstract;
	Iterator iterator() abstract;
}

class ArrayList extends List {
	bindings {
		"java" -> "java.util.ArrayList"
	}
}

class A {
}

void main() {
	A a = new A;
	ArrayList l = new ArrayList;
	l.add(a);
	l.add(a);
	
	Iterator lit = l.iterator();
	while (lit.hasNext()) {
		Object o = lit.next();
		A la = o as A;
		print la + "\n";
	}	
}

}