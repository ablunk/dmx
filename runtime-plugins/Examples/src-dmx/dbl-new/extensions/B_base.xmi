<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="C">
    <model href="C.xmi#/"/>
  </imports>
  <modules name="B">
    <classifiers xsi:type="dbl:Clazz" name="B"/>
    <extensionDefs name="SB">
      <textualSyntaxDef>
        <extensionRule name="Statement">
          <firstNewRule rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0"/>
        </extensionRule>
        <newRules name="SB">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="sb"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal=";"/>
          </rhs>
        </newRules>
      </textualSyntaxDef>
      <mappingDef>
        <statements xsi:type="dbl:Print">
          <outputs xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:StringLiteral" value="sc used in '"/>
              <op2 xsi:type="dbl:StringLiteral" value="SB semantics"/>
            </op1>
            <op2 xsi:type="dbl:StringLiteral" value="'\n"/>
          </outputs>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="print \&quot;sb\\n\&quot;;"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="sc \&quot;gen statement in SB semantics\&quot;;"/>
        </statements>
      </mappingDef>
    </extensionDefs>
    <procedures name="mb">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="b">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="c">
        <classifierType>
          <referencedElement href="C.xmi#//@modules.0/@classifiers.0"/>
        </classifierType>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:Plus">
          <op1 xsi:type="dbl:Plus">
            <op1 xsi:type="dbl:StringLiteral" value="sc used in '"/>
            <op2 xsi:type="dbl:StringLiteral" value="B.mb()"/>
          </op1>
          <op2 xsi:type="dbl:StringLiteral" value="'\n"/>
        </outputs>
      </statements>
    </procedures>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr referencedElement="//@modules.0/@procedures.0">
          <callPart/>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Print">
        <outputs xsi:type="dbl:StringLiteral" value="B.main()\n"/>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
