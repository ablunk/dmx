<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="C">
    <model href="C.xmi#/"/>
  </imports>
  <modules name="B">
    <classifiers xsi:type="dbl:Clazz" name="B"/>
    <extensionDefs name="SB">
      <extendedConcept xsi:type="dbl:Clazz" href="../../dbl.xmi#//@modules.0/@classifiers.29"/>
      <textualSyntaxDef startRule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0">
        <rules name="SBR">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="sb"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal=";"/>
          </rhs>
        </rules>
      </textualSyntaxDef>
      <mappingDef concreteSyntax="sc &quot;SB semantics&quot;;&#xA;&#x9;expand &quot;print \&quot;sb\\n\&quot;;&quot;;&#xA;&#x9;expand &quot;sc \&quot;gen statement in SB semantics\&quot;;&quot;;">
        <statements xsi:type="dbl:SC_SCR_extension" concreteSyntax="sc &quot;SB semantics&quot;;" instanceOfExtensionDefinition="true" usedIn="SB semantics"/>
        <statements xsi:type="dbl:MappingStatement" concreteSyntax="expand &quot;print \&quot;sb\\n\&quot;;&quot;">
          <parts xsi:type="dbl:FixedMappingPart" code="print \&quot;sb\\n\&quot;;"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement" concreteSyntax="expand &quot;sc \&quot;gen statement in SB semantics\&quot;;&quot;">
          <parts xsi:type="dbl:FixedMappingPart" code="sc \&quot;gen statement in SB semantics\&quot;;"/>
        </statements>
      </mappingDef>
    </extensionDefs>
    <procedures name="mb">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="b" concreteSyntax="B b">
        <classifierType concreteSyntax="B" referencedElement="//@modules.0/@classifiers.0"/>
      </statements>
      <statements xsi:type="dbl:Variable" name="c" concreteSyntax="C c">
        <classifierType concreteSyntax="C">
          <referencedElement href="C.xmi#//@modules.0/@classifiers.0"/>
        </classifierType>
      </statements>
      <statements xsi:type="dbl:SC_SCR_extension" concreteSyntax="sc &quot;B.mb()&quot;;" instanceOfExtensionDefinition="true" usedIn="B.mb()"/>
    </procedures>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:ProcedureCall" concreteSyntax="mb()">
        <callIdExpr concreteSyntax="mb()" referencedElement="//@modules.0/@procedures.0">
          <callPart/>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Print" concreteSyntax="print &quot;B.main()\n&quot;">
        <outputs xsi:type="dbl:StringLiteral" concreteSyntax="&quot;B.main()\n&quot;" value="B.main()\n"/>
      </statements>
    </procedures>
  </modules>
</dbl:Model>
