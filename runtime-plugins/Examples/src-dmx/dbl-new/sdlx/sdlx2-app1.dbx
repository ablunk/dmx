#import "sdlx2"

module sdlx_application {

	boolean debug = true;

	void trace(string msg) {
		if (debug) {
			print time + " - " + active + ": " + msg + "\n";
		}
	}
	
	// a system spec at module level maps to the creation of a corresponding abstract syntax object, which is created
	// (global variable default value assignment) just before the main function is executed.
	system X;
		timer T1;
			
		process Q;
			timer T3;

			stategraph {
				start;
				state K;
				endstate K;
			}
		endprocess Q; // putting a correct name (like Q here) cannot be defined / enforced
		
	endsystem;	
	
}

