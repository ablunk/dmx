<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../stdlib">
    <model href="../stdlib.xmi#/"/>
  </imports>
  <modules name="ecore_test">
    <classifiers xsi:type="dbl:Clazz" name="A"/>
    <procedures name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="a">
        <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classifiers.0"/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:Variable" name="l">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.4"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.4"/>
          </classifierType>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.1"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:ProcedureCall">
        <callIdExpr>
          <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.1"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.0"/>
          <callPart>
            <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.0"/>
          </callPart>
        </callIdExpr>
      </statements>
      <statements xsi:type="dbl:Variable" name="lit">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.2"/>
        </classifierType>
        <initialValue xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.1"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.11"/>
          <callPart/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:WhileStatement">
        <condition xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.4"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.2/@methods.0"/>
          <callPart/>
        </condition>
        <body xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Variable" name="o">
            <classifierType>
              <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.0"/>
            </classifierType>
            <initialValue xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@procedures.0/@statements.4"/>
              <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.2/@methods.1"/>
              <callPart/>
            </initialValue>
          </statements>
          <statements xsi:type="dbl:Variable" name="la">
            <classifierType referencedElement="//@modules.0/@classifiers.0"/>
            <initialValue xsi:type="dbl:Cast">
              <classifierType referencedElement="//@modules.0/@classifiers.0"/>
              <op xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.5/@body/@statements.0"/>
            </initialValue>
          </statements>
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.0/@statements.5/@body/@statements.1"/>
              <op2 xsi:type="dbl:StringLiteral" value="\n"/>
            </outputs>
          </statements>
        </body>
      </statements>
    </procedures>
    <procedures name="test">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:Variable" name="it">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.2"/>
        </classifierType>
        <initialValue xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.0/@procedures.1/@parameters.0"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3/@methods.11"/>
          <callPart/>
        </initialValue>
      </statements>
      <statements xsi:type="dbl:WhileStatement">
        <condition xsi:type="dbl:IdExpr">
          <parentIdExpr referencedElement="//@modules.0/@procedures.1/@statements.0"/>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.2/@methods.0"/>
          <callPart/>
        </condition>
        <body xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Variable" name="item">
            <classifierType>
              <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.0"/>
            </classifierType>
            <initialValue xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@procedures.1/@statements.0"/>
              <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.2/@methods.1"/>
              <callPart/>
            </initialValue>
          </statements>
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:Cast">
              <primitiveType xsi:type="dbl:StringType"/>
              <op xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@procedures.1/@statements.1/@body/@statements.0"/>
            </outputs>
          </statements>
        </body>
      </statements>
      <parameters name="l">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classifiers.3"/>
        </classifierType>
      </parameters>
    </procedures>
  </modules>
</dbl:Model>
