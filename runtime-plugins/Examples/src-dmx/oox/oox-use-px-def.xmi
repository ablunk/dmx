<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="ooxdef">
    <model href="ooxdef.xmi#/"/>
  </imports>
  <modules name="ooxUse1">
    <extensionDefs xsi:type="dbl:OOX_OOX_extension" name="PX" concreteSyntax="oox extension PX extends dbl SimpleStatement {&#xA;&#x9;start PX;&#xA;&#x9;PX -> &quot;px&quot; s:STRING &quot;;&quot;;&#xA;}&#xA;semantics {&#xA;&#x9;expand &quot;PX extension = new PX;&quot;;&#xA;&#x9;expand &quot;extension.s = \&quot;&quot; s &quot;\&quot;;&quot;;&#xA;&#x9;&#xA;&#xA;&#x9;expand &quot;print extension.s;&quot;;&#xA;}" instanceOfExtensionDefinition="true">
      <extendedConcept xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.30"/>
      <textualSyntaxDef concreteSyntax=" {&#xA;&#x9;start PX;&#xA;&#x9;PX -> &quot;px&quot; s:STRING &quot;;&quot;;&#xA;}" startRule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0">
        <rules name="PX" concreteSyntax="PX -> &quot;px&quot; s:STRING &quot;;&quot;;">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="px"/>
            <sequence xsi:type="dbl:PropertyBindingExpr" name="s">
              <propertyType xsi:type="dbl:StringPropertyType"/>
            </sequence>
            <sequence xsi:type="dbl:TerminalExpr" terminal=";"/>
          </rhs>
        </rules>
      </textualSyntaxDef>
      <mappingDef concreteSyntax="expand &quot;PX extension = new PX;&quot;;&#xA;&#x9;expand &quot;extension.s = \&quot;&quot; s &quot;\&quot;;&quot;;&#xA;&#x9;&#xA;&#xA;&#x9;expand &quot;print extension.s;&quot;;">
        <statements xsi:type="dbl:MappingStatement" concreteSyntax="expand &quot;PX extension = new PX;&quot;">
          <parts xsi:type="dbl:FixedMappingPart" code="PX extension = new PX;"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement" concreteSyntax="expand &quot;extension.s = \&quot;&quot; s &quot;\&quot;;&quot;">
          <parts xsi:type="dbl:FixedMappingPart" code="extension.s = \&quot;"/>
          <parts xsi:type="dbl:DynamicMappingPart">
            <expr xsi:type="dbl:IdExpr" concreteSyntax="s" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@rules.0/@rhs/@sequence.1"/>
          </parts>
          <parts xsi:type="dbl:FixedMappingPart" code="\&quot;;"/>
        </statements>
        <statements xsi:type="dbl:MappingStatement" concreteSyntax="expand &quot;print extension.s;&quot;">
          <parts xsi:type="dbl:FixedMappingPart" code="print extension.s;"/>
        </statements>
      </mappingDef>
    </extensionDefs>
  </modules>
</dbl:Model>
