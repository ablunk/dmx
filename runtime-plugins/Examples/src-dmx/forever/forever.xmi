<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../dbl">
    <model href="../dbl.xmi#/"/>
  </imports>
  <modules name="ForeverExtension">
    <extensionDefs name="Forever">
      <textualSyntaxDef>
        <extensionRule name="Statement">
          <firstNewRule rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.0"/>
        </extensionRule>
        <newRules name="Forever">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:TerminalExpr" terminal="forever"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal="{"/>
            <sequence xsi:type="dbl:RuleExpr" rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2"/>
            <sequence xsi:type="dbl:TerminalExpr" terminal="}"/>
          </rhs>
        </newRules>
        <newRules name="ManyStatements">
          <rhs xsi:type="dbl:SequenceExpr"/>
        </newRules>
        <newRules name="ManyStatements">
          <rhs xsi:type="dbl:SequenceExpr">
            <sequence xsi:type="dbl:PropertyBindingExpr" name="statements">
              <propertyType xsi:type="dbl:CompositePropertyType" list="true">
                <type xsi:type="dbl:Clazz" href="../dbl.xmi#//@modules.0/@classifiers.29"/>
              </propertyType>
            </sequence>
            <sequence xsi:type="dbl:RuleExpr" rule="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2"/>
          </rhs>
        </newRules>
      </textualSyntaxDef>
      <mappingDef>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="while (true) {"/>
        </statements>
        <statements xsi:type="dbl:Variable" name="it">
          <classifierType>
            <referencedElement href="../ecore.xmi#//@modules.0/@classifiers.13"/>
          </classifierType>
          <initialValue xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@textualSyntaxDef/@newRules.2/@rhs/@sequence.0"/>
        </statements>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:IdExpr">
            <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1"/>
            <referencedElement href="../ecore.xmi#//@modules.0/@classifiers.13/@methods.0"/>
            <callPart/>
          </condition>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="stm">
              <classifierType>
                <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.29"/>
              </classifierType>
              <initialValue xsi:type="dbl:Cast">
                <classifierType>
                  <referencedElement href="../dbl.xmi#//@modules.0/@classifiers.29"/>
                </classifierType>
                <op xsi:type="dbl:IdExpr">
                  <parentIdExpr referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.1"/>
                  <referencedElement href="../ecore.xmi#//@modules.0/@classifiers.13/@methods.1"/>
                  <callPart/>
                </op>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:MappingStatement">
              <parts xsi:type="dbl:FixedMappingPart" code=""/>
              <parts xsi:type="dbl:DynamicMappingPart">
                <expr xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@extensionDefs.0/@mappingDef/@statements.2/@body/@statements.0"/>
              </parts>
              <parts xsi:type="dbl:FixedMappingPart" code=""/>
            </statements>
          </body>
        </statements>
        <statements xsi:type="dbl:MappingStatement">
          <parts xsi:type="dbl:FixedMappingPart" code="}"/>
        </statements>
      </mappingDef>
    </extensionDefs>
  </modules>
</dbl:Model>
