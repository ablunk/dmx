<?xml version="1.0" encoding="ASCII"?>
<dbl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dbl="http://www.informatik.hu-berlin.de/sam/dbl">
  <imports file="../stdlib">
    <model href="../stdlib.xmi#/"/>
  </imports>
  <modules name="barbershop">
    <classes name="CustomerArrival" active="true">
      <actionsBlock>
        <statements xsi:type="dbl:WhileStatement">
          <condition xsi:type="dbl:LessEqual">
            <op1 xsi:type="dbl:TimeLiteral"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.1"/>
          </condition>
          <body xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:IfStatement">
              <condition xsi:type="dbl:Less">
                <op1 xsi:type="dbl:TimeLiteral"/>
                <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.2"/>
              </condition>
              <trueCase xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Advance">
                  <time xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.3"/>
                </statements>
              </trueCase>
              <falseCase xsi:type="dbl:LocalScopeStatement">
                <statements xsi:type="dbl:Advance">
                  <time xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.5"/>
                </statements>
              </falseCase>
            </statements>
            <statements xsi:type="dbl:ActivateObject">
              <objectAccess xsi:type="dbl:CreateObject">
                <classifierType referencedElement="//@modules.0/@classes.1">
                  <callPart/>
                </classifierType>
              </objectAccess>
            </statements>
            <statements xsi:type="dbl:FunctionCall">
              <callIdExpr referencedElement="//@modules.0/@functions.1">
                <callPart>
                  <callArguments xsi:type="dbl:StringLiteral" value="new customer created."/>
                </callPart>
              </callIdExpr>
            </statements>
          </body>
        </statements>
      </actionsBlock>
    </classes>
    <classes name="Customer" active="true">
      <actionsBlock>
        <statements xsi:type="dbl:FunctionCall">
          <callIdExpr referencedElement="//@modules.0/@classes.2/@methods.0">
            <parentIdExpr referencedElement="//@modules.0/@variables.7"/>
            <callPart/>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:Less">
            <op1 xsi:type="dbl:TimeLiteral"/>
            <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.2"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Advance">
              <time xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.4"/>
            </statements>
          </trueCase>
          <falseCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Advance">
              <time xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.6"/>
            </statements>
          </falseCase>
        </statements>
        <statements xsi:type="dbl:FunctionCall">
          <callIdExpr referencedElement="//@modules.0/@classes.2/@methods.1">
            <parentIdExpr referencedElement="//@modules.0/@variables.7"/>
            <callPart/>
          </callIdExpr>
        </statements>
      </actionsBlock>
    </classes>
    <classes name="Facility" active="true">
      <attributes name="busy">
        <primitiveType xsi:type="dbl:BoolType"/>
        <initialValue xsi:type="dbl:FalseLiteral"/>
      </attributes>
      <attributes name="processQueue">
        <classifierType>
          <referencedElement href="../stdlib.xmi#//@modules.0/@classes.3"/>
        </classifierType>
        <initialValue xsi:type="dbl:CreateObject">
          <classifierType>
            <referencedElement href="../stdlib.xmi#//@modules.0/@classes.4"/>
          </classifierType>
        </initialValue>
      </attributes>
      <methods name="seize">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.2/@attributes.0"/>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:FunctionCall">
              <callIdExpr referencedElement="//@modules.0/@functions.1">
                <callPart>
                  <callArguments xsi:type="dbl:StringLiteral" value="facility busy. waiting."/>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:FunctionCall">
              <callIdExpr>
                <parentIdExpr referencedElement="//@modules.0/@classes.2/@attributes.1"/>
                <referencedElement href="../stdlib.xmi#//@modules.0/@classes.3/@methods.0"/>
                <callPart>
                  <callArguments xsi:type="dbl:ActiveLiteral"/>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:Wait"/>
          </trueCase>
        </statements>
        <statements xsi:type="dbl:FunctionCall">
          <callIdExpr referencedElement="//@modules.0/@functions.1">
            <callPart>
              <callArguments xsi:type="dbl:StringLiteral" value="facility seized."/>
            </callPart>
          </callIdExpr>
        </statements>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.2/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:TrueLiteral"/>
        </statements>
      </methods>
      <methods name="release">
        <primitiveType xsi:type="dbl:VoidType"/>
        <statements xsi:type="dbl:Assignment">
          <variable>
            <idExpr referencedElement="//@modules.0/@classes.2/@attributes.0"/>
          </variable>
          <value xsi:type="dbl:FalseLiteral"/>
        </statements>
        <statements xsi:type="dbl:IfStatement">
          <condition xsi:type="dbl:Greater">
            <op1 xsi:type="dbl:IdExpr">
              <parentIdExpr referencedElement="//@modules.0/@classes.2/@attributes.1"/>
              <referencedElement href="../stdlib.xmi#//@modules.0/@classes.3/@methods.4"/>
              <callPart/>
            </op1>
            <op2 xsi:type="dbl:IntLiteral"/>
          </condition>
          <trueCase xsi:type="dbl:LocalScopeStatement">
            <statements xsi:type="dbl:Variable" name="nextWaitingProcess">
              <classifierType>
                <referencedElement href="../stdlib.xmi#//@modules.0/@classes.0"/>
              </classifierType>
              <initialValue xsi:type="dbl:IdExpr">
                <parentIdExpr referencedElement="//@modules.0/@classes.2/@attributes.1"/>
                <referencedElement href="../stdlib.xmi#//@modules.0/@classes.3/@methods.5"/>
                <callPart>
                  <callArguments xsi:type="dbl:IntLiteral"/>
                </callPart>
              </initialValue>
            </statements>
            <statements xsi:type="dbl:FunctionCall">
              <callIdExpr referencedElement="//@modules.0/@functions.1">
                <callPart>
                  <callArguments xsi:type="dbl:Plus">
                    <op1 xsi:type="dbl:StringLiteral" value="activate waiting process "/>
                    <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.2/@methods.1/@statements.1/@trueCase/@statements.0"/>
                  </callArguments>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:FunctionCall">
              <callIdExpr>
                <parentIdExpr referencedElement="//@modules.0/@classes.2/@attributes.1"/>
                <referencedElement href="../stdlib.xmi#//@modules.0/@classes.3/@methods.8"/>
                <callPart>
                  <callArguments xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.2/@methods.1/@statements.1/@trueCase/@statements.0"/>
                </callPart>
              </callIdExpr>
            </statements>
            <statements xsi:type="dbl:Reactivate">
              <objectAccess xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@classes.2/@methods.1/@statements.1/@trueCase/@statements.0"/>
            </statements>
          </trueCase>
        </statements>
        <statements xsi:type="dbl:FunctionCall">
          <callIdExpr referencedElement="//@modules.0/@functions.1">
            <callPart>
              <callArguments xsi:type="dbl:StringLiteral" value="facility released."/>
            </callPart>
          </callIdExpr>
        </statements>
      </methods>
    </classes>
    <functions name="main">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:ActivateObject">
        <objectAccess xsi:type="dbl:CreateObject">
          <classifierType referencedElement="//@modules.0/@classes.0">
            <callPart/>
          </classifierType>
        </objectAccess>
      </statements>
      <statements xsi:type="dbl:Advance">
        <time xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.1"/>
      </statements>
    </functions>
    <functions name="trace">
      <primitiveType xsi:type="dbl:VoidType"/>
      <statements xsi:type="dbl:IfStatement">
        <condition xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.0"/>
        <trueCase xsi:type="dbl:LocalScopeStatement">
          <statements xsi:type="dbl:Print">
            <outputs xsi:type="dbl:Plus">
              <op1 xsi:type="dbl:Plus">
                <op1 xsi:type="dbl:Plus">
                  <op1 xsi:type="dbl:Plus">
                    <op1 xsi:type="dbl:Plus">
                      <op1 xsi:type="dbl:TimeLiteral"/>
                      <op2 xsi:type="dbl:StringLiteral" value=" - "/>
                    </op1>
                    <op2 xsi:type="dbl:ActiveLiteral"/>
                  </op1>
                  <op2 xsi:type="dbl:StringLiteral" value=": "/>
                </op1>
                <op2 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@functions.1/@parameters.0"/>
              </op1>
              <op2 xsi:type="dbl:StringLiteral" value="\n"/>
            </outputs>
          </statements>
        </trueCase>
      </statements>
      <parameters name="msg">
        <primitiveType xsi:type="dbl:StringType"/>
      </parameters>
    </functions>
    <variables name="debug">
      <primitiveType xsi:type="dbl:BoolType"/>
      <initialValue xsi:type="dbl:TrueLiteral"/>
    </variables>
    <variables name="stopTime">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="40"/>
    </variables>
    <variables name="halfStopTime">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:Div">
        <op1 xsi:type="dbl:IdExpr" referencedElement="//@modules.0/@variables.1"/>
        <op2 xsi:type="dbl:IntLiteral" value="2"/>
      </initialValue>
    </variables>
    <variables name="timeBetweenArrivalsInFirstHalf">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="1"/>
    </variables>
    <variables name="serviceTimeInFirstHalf">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="2"/>
    </variables>
    <variables name="timeBetweenArrivalsInSecondHalf">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="2"/>
    </variables>
    <variables name="serviceTimeInSecondHalf">
      <primitiveType xsi:type="dbl:IntType"/>
      <initialValue xsi:type="dbl:IntLiteral" value="1"/>
    </variables>
    <variables name="joe">
      <classifierType referencedElement="//@modules.0/@classes.2"/>
      <initialValue xsi:type="dbl:CreateObject">
        <classifierType referencedElement="//@modules.0/@classes.2">
          <callPart/>
        </classifierType>
      </initialValue>
    </variables>
  </modules>
</dbl:Model>
