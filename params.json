{"name":"DMX","tagline":"Discrete-Event Simulation Modelling Framework with Extensibility","body":"### Welcome to the DMX Information Page\r\n\r\nDMX is a framework which facilitates iterative prototypical development of domain-specific simulation modelling languages and tools. It is developed as a set of Eclipse plugins running under Eclipse v4.4.\r\n\r\nThe following Eclipse plugins are required by DMX:\r\n- Eclipse Modeling Framework (EMF),\r\n- [Xtend](http://www.eclipse.org/xtend) Version 2.4 or higher, [available from here](http://www.eclipse.org/xtend/download.html),\r\n- and an adapted version of the Textual Editing Framework (TEF), originally developed by Markus Scheidgen, available from [this Eclipse Update Site](http://github.com/ablunk/dmx/raw/master/dev-plugins/hub.sam.tef.updatesite).\r\n\r\nDMX is an academic project maintained by Andreas Blunk. I'm trying to have a stable running version in the latest commit. However, there might be some parts not working from time to time. The purpose is to show the principle working of the particular concept of language extension which is realized by the framework.\r\n\r\nIn order to use DMX, you should import its plugins into your own Eclipse workspace. The contents provided at GitHub are listed below.\r\n\r\n### Contents\r\n\r\n- The folder [dev-plugins](https://github.com/ablunk/dmx/tree/master/dev-plugins) contains the framework as a set of Eclipse plugins. These plugins should be imported into your Eclipse workspace.\r\n- The folder [runtime-plugins](https://github.com/ablunk/dmx/tree/master/runtime-plugins) contains an example project with a lot of [DMX models](https://github.com/ablunk/dmx/tree/master/runtime-plugins/Examples/src-dmx). The project should be imported into the workspace of a second running Eclipse initiated from the first one.\r\n\r\n### Documentation\r\n\r\n- [Workbench Overview](http://github.com/ablunk/dmx/raw/gh-pages/dmx-workbench.pdf)\r\n\r\n#### Papers\r\n\r\n- Blunk, A., Fischer, J.: [Prototyping SDL Extensions](https://www.mendeley.com/research/prototyping-sdl-extensions-1/). In: Proceedings of the 8th International Conference SAM 2014. Valencia, Spain. Springer (2014)\r\n- Blunk, A., Fischer, J.: [A Highly Efficient Simulation Core in C ++](http://dl.acm.org/citation.cfm?id=2665013). In: DEVS '14 Proceedings of the Symposium on Theory of Modeling & Simulation. Tampa, Florida. Society for Computer Simulation International (2014)\r\n- Blunk, A., Fischer, J.: [Efficient Development of Domain-specific Simulation Modelling Languages and Tools](https://www.mendeley.com/research/efficient-development-domainspecific-simulation-modelling-languages-tools/). In: Proceedings of the 16th International SDL Forum. Montreal, Canada. Springer (2013)\r\n- Blunk, A., Fischer, J.: [Prototyping Domain Specific Languages as Extensions of a General Purpose Language.](http://www.mendeley.com/research/prototyping-domain-specific-languages-as-extensions-of-a-general-purpose-language-1/) In: 7th System Analysis and Modeling Workshop, Springer (2012)\r\n\r\n#### Videos\r\n\r\n- Definition of an Executable PrintLn Extension:\r\n\r\n[![PrintLn](http://img.youtube.com/vi/ccv8PJONop4/0.jpg)](https://youtu.be/ccv8PJONop4)\r\n\r\n- Definition of a Simple Forever Extension:\r\n\r\n[![Forever](http://img.youtube.com/vi/shNhaSriWUE/0.jpg)](https://youtu.be/shNhaSriWUE)\r\n\r\n### Contact\r\n\r\nHaving trouble with DMX? Contact me (Andreas Blunk) at andreas.blunk@gmail.com.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}